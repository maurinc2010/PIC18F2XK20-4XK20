

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Dec  1 19:09:04 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    41  0000                     
    42                           	psect	idataCOMRAM
    43  00F69A                     __pidataCOMRAM:
    44                           	opt stack 0
    45                           
    46                           ;initializer for _msm6
    47  00F69A  52                 	db	82
    48  00F69B  6F                 	db	111
    49  00F69C  74                 	db	116
    50  00F69D  61                 	db	97
    51  00F69E  20                 	db	32
    52  00F69F  75                 	db	117
    53  00F6A0  6E                 	db	110
    54  00F6A1  20                 	db	32
    55  00F6A2  75                 	db	117
    56  00F6A3  6E                 	db	110
    57  00F6A4  6F                 	db	111
    58  00F6A5  20                 	db	32
    59  00F6A6  70                 	db	112
    60  00F6A7  72                 	db	114
    61  00F6A8  65                 	db	101
    62  00F6A9  73                 	db	115
    63  00F6AA  69                 	db	105
    64  00F6AB  6F                 	db	111
    65  00F6AC  6E                 	db	110
    66  00F6AD  61                 	db	97
    67  00F6AE  72                 	db	114
    68  00F6AF  20                 	db	32
    69  00F6B0  74                 	db	116
    70  00F6B1  20                 	db	32
    71  00F6B2  0A                 	db	10
    72  00F6B3  0D                 	db	13
    73  00F6B4  00                 	db	0
    74                           
    75                           ;initializer for _msm1
    76  00F6B5  4C                 	db	76
    77  00F6B6  69                 	db	105
    78  00F6B7  73                 	db	115
    79  00F6B8  74                 	db	116
    80  00F6B9  61                 	db	97
    81  00F6BA  20                 	db	32
    82  00F6BB  64                 	db	100
    83  00F6BC  65                 	db	101
    84  00F6BD  20                 	db	32
    85  00F6BE  63                 	db	99
    86  00F6BF  6F                 	db	111
    87  00F6C0  6D                 	db	109
    88  00F6C1  61                 	db	97
    89  00F6C2  6E                 	db	110
    90  00F6C3  64                 	db	100
    91  00F6C4  6F                 	db	111
    92  00F6C5  73                 	db	115
    93  00F6C6  20                 	db	32
    94  00F6C7  0A                 	db	10
    95  00F6C8  0D                 	db	13
    96  00F6C9  00                 	db	0
    97                           
    98                           ;initializer for _a
    99  00F6CA  01                 	db	1
   100                           
   101                           ;initializer for _periodo
   102  00F6CB  01                 	db	1
   103                           
   104                           ;initializer for _s1
   105  00F6CC  01                 	db	1
   106                           
   107                           ;initializer for _s2
   108  00F6CD  80                 	db	128
   109                           
   110                           	psect	idataBANK0
   111  00F8CC                     __pidataBANK0:
   112                           	opt stack 0
   113                           
   114                           ;initializer for _msm3
   115  00F8CC  52                 	db	82
   116  00F8CD  6F                 	db	111
   117  00F8CE  74                 	db	116
   118  00F8CF  61                 	db	97
   119  00F8D0  72                 	db	114
   120  00F8D1  20                 	db	32
   121  00F8D2  69                 	db	105
   122  00F8D3  7A                 	db	122
   123  00F8D4  71                 	db	113
   124  00F8D5  75                 	db	117
   125  00F8D6  69                 	db	105
   126  00F8D7  65                 	db	101
   127  00F8D8  72                 	db	114
   128  00F8D9  64                 	db	100
   129  00F8DA  61                 	db	97
   130  00F8DB  20                 	db	32
   131  00F8DC  70                 	db	112
   132  00F8DD  75                 	db	117
   133  00F8DE  6C                 	db	108
   134  00F8DF  73                 	db	115
   135  00F8E0  61                 	db	97
   136  00F8E1  72                 	db	114
   137  00F8E2  20                 	db	32
   138  00F8E3  74                 	db	116
   139  00F8E4  65                 	db	101
   140  00F8E5  63                 	db	99
   141  00F8E6  6C                 	db	108
   142  00F8E7  61                 	db	97
   143  00F8E8  20                 	db	32
   144  00F8E9  6C                 	db	108
   145  00F8EA  20                 	db	32
   146  00F8EB  0A                 	db	10
   147  00F8EC  0D                 	db	13
   148  00F8ED  00                 	db	0
   149                           
   150                           ;initializer for _msm2
   151  00F8EE  52                 	db	82
   152  00F8EF  6F                 	db	111
   153  00F8F0  74                 	db	116
   154  00F8F1  61                 	db	97
   155  00F8F2  72                 	db	114
   156  00F8F3  20                 	db	32
   157  00F8F4  64                 	db	100
   158  00F8F5  65                 	db	101
   159  00F8F6  72                 	db	114
   160  00F8F7  65                 	db	101
   161  00F8F8  63                 	db	99
   162  00F8F9  68                 	db	104
   163  00F8FA  61                 	db	97
   164  00F8FB  20                 	db	32
   165  00F8FC  70                 	db	112
   166  00F8FD  75                 	db	117
   167  00F8FE  6C                 	db	108
   168  00F8FF  73                 	db	115
   169  00F900  61                 	db	97
   170  00F901  72                 	db	114
   171  00F902  20                 	db	32
   172  00F903  74                 	db	116
   173  00F904  65                 	db	101
   174  00F905  63                 	db	99
   175  00F906  6C                 	db	108
   176  00F907  61                 	db	97
   177  00F908  20                 	db	32
   178  00F909  72                 	db	114
   179  00F90A  20                 	db	32
   180  00F90B  0A                 	db	10
   181  00F90C  0D                 	db	13
   182  00F90D  00                 	db	0
   183                           
   184                           ;initializer for _msm5
   185  00F90E  6B                 	db	107
   186  00F90F  6E                 	db	110
   187  00F910  69                 	db	105
   188  00F911  67                 	db	103
   189  00F912  68                 	db	104
   190  00F913  74                 	db	116
   191  00F914  20                 	db	32
   192  00F915  72                 	db	114
   193  00F916  69                 	db	105
   194  00F917  64                 	db	100
   195  00F918  65                 	db	101
   196  00F919  72                 	db	114
   197  00F91A  20                 	db	32
   198  00F91B  70                 	db	112
   199  00F91C  75                 	db	117
   200  00F91D  6C                 	db	108
   201  00F91E  73                 	db	115
   202  00F91F  61                 	db	97
   203  00F920  72                 	db	114
   204  00F921  20                 	db	32
   205  00F922  74                 	db	116
   206  00F923  65                 	db	101
   207  00F924  63                 	db	99
   208  00F925  6C                 	db	108
   209  00F926  61                 	db	97
   210  00F927  20                 	db	32
   211  00F928  73                 	db	115
   212  00F929  20                 	db	32
   213  00F92A  0A                 	db	10
   214  00F92B  0D                 	db	13
   215  00F92C  00                 	db	0
   216                           
   217                           ;initializer for _msm4
   218  00F92D  56                 	db	86
   219  00F92E  61                 	db	97
   220  00F92F  73                 	db	115
   221  00F930  63                 	db	99
   222  00F931  75                 	db	117
   223  00F932  6C                 	db	108
   224  00F933  61                 	db	97
   225  00F934  6E                 	db	110
   226  00F935  74                 	db	116
   227  00F936  65                 	db	101
   228  00F937  20                 	db	32
   229  00F938  70                 	db	112
   230  00F939  75                 	db	117
   231  00F93A  6C                 	db	108
   232  00F93B  73                 	db	115
   233  00F93C  61                 	db	97
   234  00F93D  72                 	db	114
   235  00F93E  20                 	db	32
   236  00F93F  74                 	db	116
   237  00F940  65                 	db	101
   238  00F941  63                 	db	99
   239  00F942  6C                 	db	108
   240  00F943  61                 	db	97
   241  00F944  20                 	db	32
   242  00F945  76                 	db	118
   243  00F946  20                 	db	32
   244  00F947  0A                 	db	10
   245  00F948  0D                 	db	13
   246  00F949  00                 	db	0
   247                           
   248                           ;initializer for _msm7
   249  00F94A  52                 	db	82
   250  00F94B  6F                 	db	111
   251  00F94C  74                 	db	116
   252  00F94D  61                 	db	97
   253  00F94E  20                 	db	32
   254  00F94F  75                 	db	117
   255  00F950  6E                 	db	110
   256  00F951  20                 	db	32
   257  00F952  63                 	db	99
   258  00F953  65                 	db	101
   259  00F954  72                 	db	114
   260  00F955  6F                 	db	111
   261  00F956  20                 	db	32
   262  00F957  70                 	db	112
   263  00F958  72                 	db	114
   264  00F959  65                 	db	101
   265  00F95A  63                 	db	99
   266  00F95B  69                 	db	105
   267  00F95C  6F                 	db	111
   268  00F95D  6E                 	db	110
   269  00F95E  61                 	db	97
   270  00F95F  72                 	db	114
   271  00F960  20                 	db	32
   272  00F961  6E                 	db	110
   273  00F962  20                 	db	32
   274  00F963  0A                 	db	10
   275  00F964  0D                 	db	13
   276  00F965  00                 	db	0
   277  0000                     _ANSEL	set	3966
   278  0000                     _ANSELbits	set	3966
   279  0000                     _LATB	set	3978
   280  0000                     _LATD	set	3980
   281  0000                     _PORTAbits	set	3968
   282  0000                     _PORTB	set	3969
   283  0000                     _PORTD	set	3971
   284  0000                     _TRISA	set	3986
   285  0000                     _TRISAbits	set	3986
   286  0000                     _TRISB	set	3987
   287  0000                     _TRISCbits	set	3988
   288  0000                     _TRISD	set	3989
   289  0000                     _ADCON0bits	set	4034
   290  0000                     _ADCON1	set	4033
   291  0000                     _ADCON2bits	set	4032
   292  0000                     _ADRESH	set	4036
   293  0000                     _ADRESL	set	4035
   294  0000                     _BAUDCONbits	set	4024
   295  0000                     _PIR1bits	set	3998
   296  0000                     _RCREG	set	4014
   297  0000                     _RCSTAbits	set	4011
   298  0000                     _SPBRG	set	4015
   299  0000                     _SPBRGH	set	4016
   300  0000                     _TXREG	set	4013
   301  0000                     _TXSTAbits	set	4012
   302  0000                     _T0CONbits	set	4053
   303  0000                     _TMR0H	set	4055
   304  0000                     _TMR0L	set	4054
   305  0000                     _INTCONbits	set	4082
   306                           
   307                           ; #config settings
   308  0000                     
   309                           	psect	cinit
   310  00F7C0                     __pcinit:
   311                           	opt stack 0
   312  00F7C0                     start_initialization:
   313                           	opt stack 0
   314  00F7C0                     __initialization:
   315                           	opt stack 0
   316                           
   317                           ; Clear objects allocated to COMRAM (22 bytes)
   318  00F7C0  EE00  F035         	lfsr	0,__pbssCOMRAM
   319  00F7C4  0E16               	movlw	22
   320  00F7C6                     clear_0:
   321  00F7C6  6AEE               	clrf	postinc0,c
   322  00F7C8  06E8               	decf	wreg,f,c
   323  00F7CA  E1FD               	bnz	clear_0
   324                           
   325                           ; Initialize objects allocated to BANK0 (154 bytes)
   326                           ; load TBLPTR registers with __pidataBANK0
   327  00F7CC  0ECC               	movlw	low __pidataBANK0
   328  00F7CE  6EF6               	movwf	tblptrl,c
   329  00F7D0  0EF8               	movlw	high __pidataBANK0
   330  00F7D2  6EF7               	movwf	tblptrh,c
   331  00F7D4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   332  00F7D6  6EF8               	movwf	tblptru,c
   333  00F7D8  EE00  F060         	lfsr	0,__pdataBANK0
   334  00F7DC  EE10 F09A          	lfsr	1,154
   335  00F7E0                     copy_data0:
   336  00F7E0  0009               	tblrd		*+
   337  00F7E2  CFF5 FFEE          	movff	tablat,postinc0
   338  00F7E6  50E5               	movf	postdec1,w,c
   339  00F7E8  50E1               	movf	fsr1l,w,c
   340  00F7EA  E1FA               	bnz	copy_data0
   341                           
   342                           ; Initialize objects allocated to COMRAM (52 bytes)
   343                           ; load TBLPTR registers with __pidataCOMRAM
   344  00F7EC  0E9A               	movlw	low __pidataCOMRAM
   345  00F7EE  6EF6               	movwf	tblptrl,c
   346  00F7F0  0EF6               	movlw	high __pidataCOMRAM
   347  00F7F2  6EF7               	movwf	tblptrh,c
   348  00F7F4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   349  00F7F6  6EF8               	movwf	tblptru,c
   350  00F7F8  EE00  F001         	lfsr	0,__pdataCOMRAM
   351  00F7FC  EE10 F034          	lfsr	1,52
   352  00F800                     copy_data1:
   353  00F800  0009               	tblrd		*+
   354  00F802  CFF5 FFEE          	movff	tablat,postinc0
   355  00F806  50E5               	movf	postdec1,w,c
   356  00F808  50E1               	movf	fsr1l,w,c
   357  00F80A  E1FA               	bnz	copy_data1
   358  00F80C                     end_of_initialization:
   359                           	opt stack 0
   360  00F80C                     __end_of__initialization:
   361                           	opt stack 0
   362  00F80C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   363  00F80E  6EF8               	movwf	tblptru,c
   364  00F810  0100               	movlb	0
   365  00F812  EF0A  F07D         	goto	_main	;jump to C main() function
   366                           tblptru	equ	0xFF8
   367                           tblptrh	equ	0xFF7
   368                           tblptrl	equ	0xFF6
   369                           tablat	equ	0xFF5
   370                           postinc0	equ	0xFEE
   371                           wreg	equ	0xFE8
   372                           postdec1	equ	0xFE5
   373                           fsr1l	equ	0xFE1
   374                           
   375                           	psect	bssCOMRAM
   376  000035                     __pbssCOMRAM:
   377                           	opt stack 0
   378  000035                     _conversion16:
   379                           	opt stack 0
   380  000035                     	ds	12
   381  000041                     _est:
   382                           	opt stack 0
   383  000041                     	ds	2
   384  000043                     _i:
   385                           	opt stack 0
   386  000043                     	ds	2
   387  000045                     _d:
   388                           	opt stack 0
   389  000045                     	ds	1
   390  000046                     _inicio_transmision:
   391                           	opt stack 0
   392  000046                     	ds	1
   393  000047                     _jj:
   394                           	opt stack 0
   395  000047                     	ds	1
   396  000048                     _sec:
   397                           	opt stack 0
   398  000048                     	ds	1
   399  000049                     _ss:
   400                           	opt stack 0
   401  000049                     	ds	1
   402  00004A                     _x:
   403                           	opt stack 0
   404  00004A                     	ds	1
   405                           tblptru	equ	0xFF8
   406                           tblptrh	equ	0xFF7
   407                           tblptrl	equ	0xFF6
   408                           tablat	equ	0xFF5
   409                           postinc0	equ	0xFEE
   410                           wreg	equ	0xFE8
   411                           postdec1	equ	0xFE5
   412                           fsr1l	equ	0xFE1
   413                           
   414                           	psect	dataCOMRAM
   415  000001                     __pdataCOMRAM:
   416                           	opt stack 0
   417  000001                     _msm6:
   418                           	opt stack 0
   419  000001                     	ds	27
   420  00001C                     _msm1:
   421                           	opt stack 0
   422  00001C                     	ds	21
   423  000031                     _a:
   424                           	opt stack 0
   425  000031                     	ds	1
   426  000032                     _periodo:
   427                           	opt stack 0
   428  000032                     	ds	1
   429  000033                     _s1:
   430                           	opt stack 0
   431  000033                     	ds	1
   432  000034                     _s2:
   433                           	opt stack 0
   434  000034                     	ds	1
   435                           tblptru	equ	0xFF8
   436                           tblptrh	equ	0xFF7
   437                           tblptrl	equ	0xFF6
   438                           tablat	equ	0xFF5
   439                           postinc0	equ	0xFEE
   440                           wreg	equ	0xFE8
   441                           postdec1	equ	0xFE5
   442                           fsr1l	equ	0xFE1
   443                           
   444                           	psect	dataBANK0
   445  000060                     __pdataBANK0:
   446                           	opt stack 0
   447  000060                     _msm3:
   448                           	opt stack 0
   449  000060                     	ds	34
   450  000082                     _msm2:
   451                           	opt stack 0
   452  000082                     	ds	32
   453  0000A2                     _msm5:
   454                           	opt stack 0
   455  0000A2                     	ds	31
   456  0000C1                     _msm4:
   457                           	opt stack 0
   458  0000C1                     	ds	29
   459  0000DE                     _msm7:
   460                           	opt stack 0
   461  0000DE                     	ds	28
   462                           tblptru	equ	0xFF8
   463                           tblptrh	equ	0xFF7
   464                           tblptrl	equ	0xFF6
   465                           tablat	equ	0xFF5
   466                           postinc0	equ	0xFEE
   467                           wreg	equ	0xFE8
   468                           postdec1	equ	0xFE5
   469                           fsr1l	equ	0xFE1
   470                           
   471                           	psect	cstackCOMRAM
   472  00004B                     __pcstackCOMRAM:
   473                           	opt stack 0
   474  00004B                     ?_read_d:
   475                           	opt stack 0
   476  00004B                     ?_dato_16:
   477                           	opt stack 0
   478  00004B                     pulsador_s2@n:
   479                           	opt stack 0
   480  00004B                     set_comandos@c:
   481                           	opt stack 0
   482  00004B                     timer_0_set@high:
   483                           	opt stack 0
   484  00004B                     port@c:
   485                           	opt stack 0
   486  00004B                     set_adc@x:
   487                           	opt stack 0
   488  00004B                     activacion_tx@x:
   489                           	opt stack 0
   490  00004B                     activacion_rx@x:
   491                           	opt stack 0
   492  00004B                     trans_dato@x:
   493                           	opt stack 0
   494                           
   495                           ; 1 bytes @ 0x0
   496  00004B                     	ds	1
   497  00004C                     ??_transmitir:
   498  00004C                     ?_rotar_derecha:
   499                           	opt stack 0
   500  00004C                     ?_rotar_izquierda:
   501                           	opt stack 0
   502  00004C                     shit_raid@g:
   503                           	opt stack 0
   504  00004C                     set_comandos@d:
   505                           	opt stack 0
   506  00004C                     timer_0_set@low:
   507                           	opt stack 0
   508                           
   509                           ; 1 bytes @ 0x1
   510  00004C                     	ds	1
   511  00004D                     ?_flag_timer_0:
   512                           	opt stack 0
   513  00004D                     dato_16@y:
   514                           	opt stack 0
   515                           
   516                           ; 2 bytes @ 0x2
   517  00004D                     	ds	1
   518  00004E                     rotar_derecha@x:
   519                           	opt stack 0
   520  00004E                     rotar_izquierda@x:
   521                           	opt stack 0
   522                           
   523                           ; 1 bytes @ 0x3
   524  00004E                     	ds	1
   525  00004F                     vasculante@x:
   526                           	opt stack 0
   527  00004F                     set_periodo@x:
   528                           	opt stack 0
   529                           
   530                           ; 2 bytes @ 0x4
   531  00004F                     	ds	1
   532  000050                     
   533                           ; 0 bytes @ 0x5
   534  000050                     	ds	1
   535  000051                     
   536                           ; 2 bytes @ 0x6
   537  000051                     	ds	2
   538  000053                     
   539                           ; 3 bytes @ 0x8
   540  000053                     	ds	3
   541  000056                     main@time_star:
   542                           	opt stack 0
   543                           
   544                           ; 1 bytes @ 0xB
   545  000056                     	ds	1
   546  000057                     main@flag_5s:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0xC
   550  000057                     	ds	1
   551  000058                     main@time_adc:
   552                           	opt stack 0
   553                           
   554                           ; 1 bytes @ 0xD
   555  000058                     	ds	1
   556  000059                     main@time_led:
   557                           	opt stack 0
   558                           
   559                           ; 1 bytes @ 0xE
   560  000059                     	ds	1
   561  00005A                     main@time_comando:
   562                           	opt stack 0
   563                           
   564                           ; 1 bytes @ 0xF
   565  00005A                     	ds	1
   566  00005B                     main@flag_read:
   567                           	opt stack 0
   568                           
   569                           ; 1 bytes @ 0x10
   570  00005B                     	ds	1
   571                           tblptru	equ	0xFF8
   572                           tblptrh	equ	0xFF7
   573                           tblptrl	equ	0xFF6
   574                           tablat	equ	0xFF5
   575                           postinc0	equ	0xFEE
   576                           wreg	equ	0xFE8
   577                           postdec1	equ	0xFE5
   578                           fsr1l	equ	0xFE1
   579                           
   580 ;;
   581 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   582 ;;
   583 ;; *************** function _main *****************
   584 ;; Defined at:
   585 ;;		line 221 in file "main.c"
   586 ;; Parameters:    Size  Location     Type
   587 ;;  argc            2    6[COMRAM] int 
   588 ;;  argv            3    8[COMRAM] PTR PTR unsigned char 
   589 ;; Auto vars:     Size  Location     Type
   590 ;;  flag_read       1   16[COMRAM] unsigned char 
   591 ;;  time_comando    1   15[COMRAM] unsigned char 
   592 ;;  time_led        1   14[COMRAM] unsigned char 
   593 ;;  time_adc        1   13[COMRAM] unsigned char 
   594 ;;  flag_5s         1   12[COMRAM] unsigned char 
   595 ;;  time_star       1   11[COMRAM] unsigned char 
   596 ;; Return value:  Size  Location     Type
   597 ;;                  2    6[COMRAM] int 
   598 ;; Registers used:
   599 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   600 ;; Tracked objects:
   601 ;;		On entry : 0/0
   602 ;;		On exit  : 0/0
   603 ;;		Unchanged: 0/0
   604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   605 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   606 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   608 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   609 ;;Total ram usage:       11 bytes
   610 ;; Hardware stack levels required when called:    4
   611 ;; This function calls:
   612 ;;		_dato_16
   613 ;;		_final_convercion
   614 ;;		_flag_timer_0
   615 ;;		_pulsador_s2
   616 ;;		_read_d
   617 ;;		_set_comandos
   618 ;;		_set_periodo
   619 ;;		_set_ph
   620 ;;		_set_secuencia
   621 ;;		_star_convercion
   622 ;;		_transmitir
   623 ;; This function is called by:
   624 ;;		Startup code after reset
   625 ;; This function uses a non-reentrant model
   626 ;;
   627                           
   628                           	psect	text0
   629  00FA14                     __ptext0:
   630                           	opt stack 0
   631  00FA14                     _main:
   632                           	opt stack 27
   633                           
   634                           ;main.c: 222: set_ph();
   635                           
   636                           ;incstack = 0
   637  00FA14  EC34  F07B         	call	_set_ph	;wreg free
   638                           
   639                           ;main.c: 223: unsigned char time_adc=0,time_led=0,time_comando=0,time_star=0;
   640  00FA18  0E00               	movlw	0
   641  00FA1A  6E58               	movwf	main@time_adc,c
   642  00FA1C  0E00               	movlw	0
   643  00FA1E  6E59               	movwf	main@time_led,c
   644  00FA20  0E00               	movlw	0
   645  00FA22  6E5A               	movwf	main@time_comando,c
   646  00FA24  0E00               	movlw	0
   647  00FA26  6E56               	movwf	main@time_star,c
   648                           
   649                           ;main.c: 224: unsigned char flag_read=0,flag_5s=0;
   650  00FA28  0E00               	movlw	0
   651  00FA2A  6E5B               	movwf	main@flag_read,c
   652  00FA2C  0E00               	movlw	0
   653  00FA2E  6E57               	movwf	main@flag_5s,c
   654  00FA30                     l1674:
   655                           
   656                           ;main.c: 227: if (flag_timer_0() && ~flag_5s)
   657  00FA30  EC07  F07B         	call	_flag_timer_0	;wreg free
   658  00FA34  504D               	movf	?_flag_timer_0,w,c
   659  00FA36  104E               	iorwf	?_flag_timer_0+1,w,c
   660  00FA38  A4D8               	btfss	status,2,c
   661                           
   662                           ;main.c: 228: time_star++;
   663  00FA3A  2A56               	incf	main@time_star,f,c
   664                           
   665                           ;main.c: 229: if (time_star>=10)
   666  00FA3C  0E09               	movlw	9
   667  00FA3E  6456               	cpfsgt	main@time_star,c
   668  00FA40  D003               	goto	l1682
   669                           
   670                           ;main.c: 230: flag_5s=1;
   671  00FA42  0E01               	movlw	1
   672  00FA44  6E57               	movwf	main@flag_5s,c
   673  00FA46  D002               	goto	l1684
   674  00FA48                     l1682:
   675                           
   676                           ;main.c: 231: else
   677                           ;main.c: 232: transmitir();
   678  00FA48  EC72  F07D         	call	_transmitir	;wreg free
   679  00FA4C                     l1684:
   680                           
   681                           ;main.c: 234: if (flag_timer_0() && flag_5s){
   682  00FA4C  EC07  F07B         	call	_flag_timer_0	;wreg free
   683  00FA50  504D               	movf	?_flag_timer_0,w,c
   684  00FA52  104E               	iorwf	?_flag_timer_0+1,w,c
   685  00FA54  B4D8               	btfsc	status,2,c
   686  00FA56  D006               	goto	l1690
   687  00FA58  5057               	movf	main@flag_5s,w,c
   688  00FA5A  B4D8               	btfsc	status,2,c
   689  00FA5C  D003               	goto	l1690
   690                           
   691                           ;main.c: 235: time_adc++;
   692  00FA5E  2A58               	incf	main@time_adc,f,c
   693                           
   694                           ;main.c: 236: time_led++;
   695  00FA60  2A59               	incf	main@time_led,f,c
   696                           
   697                           ;main.c: 237: time_comando++;
   698  00FA62  2A5A               	incf	main@time_comando,f,c
   699  00FA64                     l1690:
   700                           
   701                           ;main.c: 238: }
   702                           ;main.c: 240: if (time_adc==5){
   703  00FA64  0E05               	movlw	5
   704  00FA66  1858               	xorwf	main@time_adc,w,c
   705  00FA68  A4D8               	btfss	status,2,c
   706  00FA6A  D004               	goto	l1696
   707                           
   708                           ;main.c: 241: star_convercion();
   709  00FA6C  EC81  F07A         	call	_star_convercion	;wreg free
   710                           
   711                           ;main.c: 242: time_adc=0;
   712  00FA70  0E00               	movlw	0
   713  00FA72  6E58               	movwf	main@time_adc,c
   714  00FA74                     l1696:
   715                           
   716                           ;main.c: 243: }
   717                           ;main.c: 245: if (time_led==periodo){
   718  00FA74  5032               	movf	_periodo,w,c
   719  00FA76  1859               	xorwf	main@time_led,w,c
   720  00FA78  A4D8               	btfss	status,2,c
   721  00FA7A  D011               	goto	l1710
   722                           
   723                           ;main.c: 246: if (pulsador_s2()){
   724  00FA7C  EC1B  F07B         	call	_pulsador_s2	;wreg free
   725  00FA80  0900               	iorlw	0
   726  00FA82  B4D8               	btfsc	status,2,c
   727  00FA84  D002               	goto	l1702
   728                           
   729                           ;main.c: 247: sec++;
   730  00FA86  2A48               	incf	_sec,f,c
   731                           
   732                           ;main.c: 248: }
   733  00FA88  D006               	goto	l1706
   734  00FA8A                     l1702:
   735                           
   736                           ;main.c: 249: else if (sec==4)
   737  00FA8A  0E04               	movlw	4
   738  00FA8C  1848               	xorwf	_sec,w,c
   739  00FA8E  A4D8               	btfss	status,2,c
   740  00FA90  D002               	goto	l1706
   741                           
   742                           ;main.c: 250: sec=0;
   743  00FA92  0E00               	movlw	0
   744  00FA94  6E48               	movwf	_sec,c
   745  00FA96                     l1706:
   746                           
   747                           ;main.c: 251: set_secuencia();
   748  00FA96  ECBF  F07B         	call	_set_secuencia	;wreg free
   749                           
   750                           ;main.c: 252: time_led=0;
   751  00FA9A  0E00               	movlw	0
   752  00FA9C  6E59               	movwf	main@time_led,c
   753  00FA9E                     l1710:
   754                           
   755                           ;main.c: 253: }
   756                           ;main.c: 254: if (time_comando==6){
   757  00FA9E  0E06               	movlw	6
   758  00FAA0  185A               	xorwf	main@time_comando,w,c
   759  00FAA2  A4D8               	btfss	status,2,c
   760  00FAA4  D004               	goto	l167
   761                           
   762                           ;main.c: 255: flag_read=1;
   763  00FAA6  0E01               	movlw	1
   764  00FAA8  6E5B               	movwf	main@flag_read,c
   765                           
   766                           ;main.c: 256: time_comando=0;
   767  00FAAA  0E00               	movlw	0
   768  00FAAC  6E5A               	movwf	main@time_comando,c
   769  00FAAE                     l167:
   770                           
   771                           ;main.c: 257: }
   772                           ;main.c: 259: if (flag_read){
   773  00FAAE  505B               	movf	main@flag_read,w,c
   774  00FAB0  B4D8               	btfsc	status,2,c
   775  00FAB2  D00A               	goto	l1718
   776                           
   777                           ;main.c: 260: if (set_comandos(read_d())){
   778  00FAB4  ECB3  F07A         	call	_read_d	;wreg free
   779  00FAB8  504B               	movf	?_read_d,w,c
   780  00FABA  EC0B  F07C         	call	_set_comandos
   781  00FABE  0900               	iorlw	0
   782  00FAC0  B4D8               	btfsc	status,2,c
   783  00FAC2  D002               	goto	l1718
   784                           
   785                           ;main.c: 261: flag_read=0;
   786  00FAC4  0E00               	movlw	0
   787  00FAC6  6E5B               	movwf	main@flag_read,c
   788  00FAC8                     l1718:
   789                           
   790                           ;main.c: 262: }
   791                           ;main.c: 263: }
   792                           ;main.c: 266: if (final_convercion()){
   793  00FAC8  EC8F  F07A         	call	_final_convercion	;wreg free
   794  00FACC  0900               	iorlw	0
   795  00FACE  B4D8               	btfsc	status,2,c
   796  00FAD0  D7AF               	goto	l1674
   797                           
   798                           ;main.c: 267: set_periodo(dato_16());
   799  00FAD2  ECE4  F07A         	call	_dato_16	;wreg free
   800  00FAD6  C04B  F04F         	movff	?_dato_16,set_periodo@x
   801  00FADA  C04C  F050         	movff	?_dato_16+1,set_periodo@x+1
   802  00FADE  ECB3  F07C         	call	_set_periodo	;wreg free
   803  00FAE2  D7A6               	goto	l1674
   804  00FAE4                     __end_of_main:
   805                           	opt stack 0
   806                           tblptru	equ	0xFF8
   807                           tblptrh	equ	0xFF7
   808                           tblptrl	equ	0xFF6
   809                           tablat	equ	0xFF5
   810                           postinc0	equ	0xFEE
   811                           wreg	equ	0xFE8
   812                           postdec1	equ	0xFE5
   813                           fsr1l	equ	0xFE1
   814                           status	equ	0xFD8
   815                           
   816 ;; *************** function _transmitir *****************
   817 ;; Defined at:
   818 ;;		line 299 in file "main.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;		None
   821 ;; Auto vars:     Size  Location     Type
   822 ;;		None
   823 ;; Return value:  Size  Location     Type
   824 ;;		None               void
   825 ;; Registers used:
   826 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   834 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   835 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   836 ;;Total ram usage:        2 bytes
   837 ;; Hardware stack levels used:    1
   838 ;; Hardware stack levels required when called:    1
   839 ;; This function calls:
   840 ;;		_trans_dato
   841 ;; This function is called by:
   842 ;;		_main
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           	psect	text1
   847  00FAE4                     __ptext1:
   848                           	opt stack 0
   849  00FAE4                     _transmitir:
   850                           	opt stack 29
   851                           
   852                           ;main.c: 300: switch (est){
   853                           
   854                           ;incstack = 0
   855  00FAE4  D0EE               	goto	l1634
   856  00FAE6                     l1560:
   857                           
   858                           ;main.c: 302: if (msm1[i]!='\r')
   859  00FAE6  0E1C               	movlw	low _msm1
   860  00FAE8  2443               	addwf	_i,w,c
   861  00FAEA  6ED9               	movwf	fsr2l,c
   862  00FAEC  0E00               	movlw	high _msm1
   863  00FAEE  2044               	addwfc	_i+1,w,c
   864  00FAF0  6EDA               	movwf	fsr2h,c
   865  00FAF2  0E0D               	movlw	13
   866  00FAF4  18DE               	xorwf	postinc2,w,c
   867  00FAF6  B4D8               	btfsc	status,2,c
   868  00FAF8  D00C               	goto	l1566
   869                           
   870                           ;main.c: 303: trans_dato(msm1[i++]);
   871  00FAFA  0E1C               	movlw	low _msm1
   872  00FAFC  2443               	addwf	_i,w,c
   873  00FAFE  6ED9               	movwf	fsr2l,c
   874  00FB00  0E00               	movlw	high _msm1
   875  00FB02  2044               	addwfc	_i+1,w,c
   876  00FB04  6EDA               	movwf	fsr2h,c
   877  00FB06  50DF               	movf	indf2,w,c
   878  00FB08  EC89  F07A         	call	_trans_dato
   879  00FB0C  4A43               	infsnz	_i,f,c
   880  00FB0E  2A44               	incf	_i+1,f,c
   881  00FB10  0012               	return	
   882  00FB12                     l1566:
   883                           
   884                           ;main.c: 304: else{
   885                           ;main.c: 305: i=0;
   886  00FB12  0E00               	movlw	0
   887  00FB14  6E44               	movwf	_i+1,c
   888  00FB16  0E00               	movlw	0
   889  00FB18  6E43               	movwf	_i,c
   890                           
   891                           ;main.c: 306: est=1;
   892  00FB1A  0E00               	movlw	0
   893  00FB1C  6E42               	movwf	_est+1,c
   894  00FB1E  0E01               	movlw	1
   895  00FB20  6E41               	movwf	_est,c
   896                           
   897                           ;main.c: 307: trans_dato('\r');
   898  00FB22  0E0D               	movlw	13
   899  00FB24  EC89  F07A         	call	_trans_dato
   900                           
   901                           ;main.c: 308: }
   902                           ;main.c: 309: break;
   903  00FB28  0012               	return	
   904  00FB2A                     l1570:
   905                           
   906                           ;main.c: 311: if (msm2[i]!='\r')
   907  00FB2A  0E82               	movlw	low _msm2
   908  00FB2C  2443               	addwf	_i,w,c
   909  00FB2E  6ED9               	movwf	fsr2l,c
   910  00FB30  0E00               	movlw	high _msm2
   911  00FB32  2044               	addwfc	_i+1,w,c
   912  00FB34  6EDA               	movwf	fsr2h,c
   913  00FB36  0E0D               	movlw	13
   914  00FB38  18DE               	xorwf	postinc2,w,c
   915  00FB3A  B4D8               	btfsc	status,2,c
   916  00FB3C  D00C               	goto	l1576
   917                           
   918                           ;main.c: 312: trans_dato(msm2[i++]);
   919  00FB3E  0E82               	movlw	low _msm2
   920  00FB40  2443               	addwf	_i,w,c
   921  00FB42  6ED9               	movwf	fsr2l,c
   922  00FB44  0E00               	movlw	high _msm2
   923  00FB46  2044               	addwfc	_i+1,w,c
   924  00FB48  6EDA               	movwf	fsr2h,c
   925  00FB4A  50DF               	movf	indf2,w,c
   926  00FB4C  EC89  F07A         	call	_trans_dato
   927  00FB50  4A43               	infsnz	_i,f,c
   928  00FB52  2A44               	incf	_i+1,f,c
   929  00FB54  0012               	return	
   930  00FB56                     l1576:
   931                           
   932                           ;main.c: 313: else{
   933                           ;main.c: 314: i=0;
   934  00FB56  0E00               	movlw	0
   935  00FB58  6E44               	movwf	_i+1,c
   936  00FB5A  0E00               	movlw	0
   937  00FB5C  6E43               	movwf	_i,c
   938                           
   939                           ;main.c: 315: est=2;
   940  00FB5E  0E00               	movlw	0
   941  00FB60  6E42               	movwf	_est+1,c
   942  00FB62  0E02               	movlw	2
   943  00FB64  6E41               	movwf	_est,c
   944                           
   945                           ;main.c: 316: trans_dato('\r');
   946  00FB66  0E0D               	movlw	13
   947  00FB68  EC89  F07A         	call	_trans_dato
   948                           
   949                           ;main.c: 317: }
   950                           ;main.c: 318: break;
   951  00FB6C  0012               	return	
   952  00FB6E                     l1580:
   953                           
   954                           ;main.c: 320: if (msm3[i]!='\r')
   955  00FB6E  0E60               	movlw	low _msm3
   956  00FB70  2443               	addwf	_i,w,c
   957  00FB72  6ED9               	movwf	fsr2l,c
   958  00FB74  0E00               	movlw	high _msm3
   959  00FB76  2044               	addwfc	_i+1,w,c
   960  00FB78  6EDA               	movwf	fsr2h,c
   961  00FB7A  0E0D               	movlw	13
   962  00FB7C  18DE               	xorwf	postinc2,w,c
   963  00FB7E  B4D8               	btfsc	status,2,c
   964  00FB80  D00C               	goto	l1586
   965                           
   966                           ;main.c: 321: trans_dato(msm3[i++]);
   967  00FB82  0E60               	movlw	low _msm3
   968  00FB84  2443               	addwf	_i,w,c
   969  00FB86  6ED9               	movwf	fsr2l,c
   970  00FB88  0E00               	movlw	high _msm3
   971  00FB8A  2044               	addwfc	_i+1,w,c
   972  00FB8C  6EDA               	movwf	fsr2h,c
   973  00FB8E  50DF               	movf	indf2,w,c
   974  00FB90  EC89  F07A         	call	_trans_dato
   975  00FB94  4A43               	infsnz	_i,f,c
   976  00FB96  2A44               	incf	_i+1,f,c
   977  00FB98  0012               	return	
   978  00FB9A                     l1586:
   979                           
   980                           ;main.c: 322: else{
   981                           ;main.c: 323: i=0;
   982  00FB9A  0E00               	movlw	0
   983  00FB9C  6E44               	movwf	_i+1,c
   984  00FB9E  0E00               	movlw	0
   985  00FBA0  6E43               	movwf	_i,c
   986                           
   987                           ;main.c: 324: est=3;
   988  00FBA2  0E00               	movlw	0
   989  00FBA4  6E42               	movwf	_est+1,c
   990  00FBA6  0E03               	movlw	3
   991  00FBA8  6E41               	movwf	_est,c
   992                           
   993                           ;main.c: 325: trans_dato('\r');
   994  00FBAA  0E0D               	movlw	13
   995  00FBAC  EC89  F07A         	call	_trans_dato
   996                           
   997                           ;main.c: 326: }
   998                           ;main.c: 327: break;
   999  00FBB0  0012               	return	
  1000  00FBB2                     l1590:
  1001                           
  1002                           ;main.c: 329: if (msm4[i]!='\r')
  1003  00FBB2  0EC1               	movlw	low _msm4
  1004  00FBB4  2443               	addwf	_i,w,c
  1005  00FBB6  6ED9               	movwf	fsr2l,c
  1006  00FBB8  0E00               	movlw	high _msm4
  1007  00FBBA  2044               	addwfc	_i+1,w,c
  1008  00FBBC  6EDA               	movwf	fsr2h,c
  1009  00FBBE  0E0D               	movlw	13
  1010  00FBC0  18DE               	xorwf	postinc2,w,c
  1011  00FBC2  B4D8               	btfsc	status,2,c
  1012  00FBC4  D00C               	goto	l1596
  1013                           
  1014                           ;main.c: 330: trans_dato(msm4[i++]);
  1015  00FBC6  0EC1               	movlw	low _msm4
  1016  00FBC8  2443               	addwf	_i,w,c
  1017  00FBCA  6ED9               	movwf	fsr2l,c
  1018  00FBCC  0E00               	movlw	high _msm4
  1019  00FBCE  2044               	addwfc	_i+1,w,c
  1020  00FBD0  6EDA               	movwf	fsr2h,c
  1021  00FBD2  50DF               	movf	indf2,w,c
  1022  00FBD4  EC89  F07A         	call	_trans_dato
  1023  00FBD8  4A43               	infsnz	_i,f,c
  1024  00FBDA  2A44               	incf	_i+1,f,c
  1025  00FBDC  0012               	return	
  1026  00FBDE                     l1596:
  1027                           
  1028                           ;main.c: 331: else{
  1029                           ;main.c: 332: i=0;
  1030  00FBDE  0E00               	movlw	0
  1031  00FBE0  6E44               	movwf	_i+1,c
  1032  00FBE2  0E00               	movlw	0
  1033  00FBE4  6E43               	movwf	_i,c
  1034                           
  1035                           ;main.c: 333: est=4;
  1036  00FBE6  0E00               	movlw	0
  1037  00FBE8  6E42               	movwf	_est+1,c
  1038  00FBEA  0E04               	movlw	4
  1039  00FBEC  6E41               	movwf	_est,c
  1040                           
  1041                           ;main.c: 334: trans_dato('\r');
  1042  00FBEE  0E0D               	movlw	13
  1043  00FBF0  EC89  F07A         	call	_trans_dato
  1044                           
  1045                           ;main.c: 335: }
  1046                           ;main.c: 336: break;
  1047  00FBF4  0012               	return	
  1048  00FBF6                     l1600:
  1049                           
  1050                           ;main.c: 338: if (msm5[i]!='\r')
  1051  00FBF6  0EA2               	movlw	low _msm5
  1052  00FBF8  2443               	addwf	_i,w,c
  1053  00FBFA  6ED9               	movwf	fsr2l,c
  1054  00FBFC  0E00               	movlw	high _msm5
  1055  00FBFE  2044               	addwfc	_i+1,w,c
  1056  00FC00  6EDA               	movwf	fsr2h,c
  1057  00FC02  0E0D               	movlw	13
  1058  00FC04  18DE               	xorwf	postinc2,w,c
  1059  00FC06  B4D8               	btfsc	status,2,c
  1060  00FC08  D00C               	goto	l1606
  1061                           
  1062                           ;main.c: 339: trans_dato(msm5[i++]);
  1063  00FC0A  0EA2               	movlw	low _msm5
  1064  00FC0C  2443               	addwf	_i,w,c
  1065  00FC0E  6ED9               	movwf	fsr2l,c
  1066  00FC10  0E00               	movlw	high _msm5
  1067  00FC12  2044               	addwfc	_i+1,w,c
  1068  00FC14  6EDA               	movwf	fsr2h,c
  1069  00FC16  50DF               	movf	indf2,w,c
  1070  00FC18  EC89  F07A         	call	_trans_dato
  1071  00FC1C  4A43               	infsnz	_i,f,c
  1072  00FC1E  2A44               	incf	_i+1,f,c
  1073  00FC20  0012               	return	
  1074  00FC22                     l1606:
  1075                           
  1076                           ;main.c: 340: else{
  1077                           ;main.c: 341: i=0;
  1078  00FC22  0E00               	movlw	0
  1079  00FC24  6E44               	movwf	_i+1,c
  1080  00FC26  0E00               	movlw	0
  1081  00FC28  6E43               	movwf	_i,c
  1082                           
  1083                           ;main.c: 342: est=5;
  1084  00FC2A  0E00               	movlw	0
  1085  00FC2C  6E42               	movwf	_est+1,c
  1086  00FC2E  0E05               	movlw	5
  1087  00FC30  6E41               	movwf	_est,c
  1088                           
  1089                           ;main.c: 343: trans_dato('\r');
  1090  00FC32  0E0D               	movlw	13
  1091  00FC34  EC89  F07A         	call	_trans_dato
  1092                           
  1093                           ;main.c: 344: }
  1094                           ;main.c: 345: break;
  1095  00FC38  0012               	return	
  1096  00FC3A                     l1610:
  1097                           
  1098                           ;main.c: 347: if (msm6[i]!='\r')
  1099  00FC3A  0E01               	movlw	low _msm6
  1100  00FC3C  2443               	addwf	_i,w,c
  1101  00FC3E  6ED9               	movwf	fsr2l,c
  1102  00FC40  0E00               	movlw	high _msm6
  1103  00FC42  2044               	addwfc	_i+1,w,c
  1104  00FC44  6EDA               	movwf	fsr2h,c
  1105  00FC46  0E0D               	movlw	13
  1106  00FC48  18DE               	xorwf	postinc2,w,c
  1107  00FC4A  B4D8               	btfsc	status,2,c
  1108  00FC4C  D00C               	goto	l1616
  1109                           
  1110                           ;main.c: 348: trans_dato(msm6[i++]);
  1111  00FC4E  0E01               	movlw	low _msm6
  1112  00FC50  2443               	addwf	_i,w,c
  1113  00FC52  6ED9               	movwf	fsr2l,c
  1114  00FC54  0E00               	movlw	high _msm6
  1115  00FC56  2044               	addwfc	_i+1,w,c
  1116  00FC58  6EDA               	movwf	fsr2h,c
  1117  00FC5A  50DF               	movf	indf2,w,c
  1118  00FC5C  EC89  F07A         	call	_trans_dato
  1119  00FC60  4A43               	infsnz	_i,f,c
  1120  00FC62  2A44               	incf	_i+1,f,c
  1121  00FC64  0012               	return	
  1122  00FC66                     l1616:
  1123                           
  1124                           ;main.c: 349: else{
  1125                           ;main.c: 350: i=0;
  1126  00FC66  0E00               	movlw	0
  1127  00FC68  6E44               	movwf	_i+1,c
  1128  00FC6A  0E00               	movlw	0
  1129  00FC6C  6E43               	movwf	_i,c
  1130                           
  1131                           ;main.c: 351: est=6;
  1132  00FC6E  0E00               	movlw	0
  1133  00FC70  6E42               	movwf	_est+1,c
  1134  00FC72  0E06               	movlw	6
  1135  00FC74  6E41               	movwf	_est,c
  1136                           
  1137                           ;main.c: 352: trans_dato('\r');
  1138  00FC76  0E0D               	movlw	13
  1139  00FC78  EC89  F07A         	call	_trans_dato
  1140                           
  1141                           ;main.c: 353: }
  1142                           ;main.c: 354: break;
  1143  00FC7C  0012               	return	
  1144  00FC7E                     l1620:
  1145                           
  1146                           ;main.c: 356: if (msm7[i]!='\r')
  1147  00FC7E  0EDE               	movlw	low _msm7
  1148  00FC80  2443               	addwf	_i,w,c
  1149  00FC82  6ED9               	movwf	fsr2l,c
  1150  00FC84  0E00               	movlw	high _msm7
  1151  00FC86  2044               	addwfc	_i+1,w,c
  1152  00FC88  6EDA               	movwf	fsr2h,c
  1153  00FC8A  0E0D               	movlw	13
  1154  00FC8C  18DE               	xorwf	postinc2,w,c
  1155  00FC8E  B4D8               	btfsc	status,2,c
  1156  00FC90  D00C               	goto	l1626
  1157                           
  1158                           ;main.c: 357: trans_dato(msm7[i++]);
  1159  00FC92  0EDE               	movlw	low _msm7
  1160  00FC94  2443               	addwf	_i,w,c
  1161  00FC96  6ED9               	movwf	fsr2l,c
  1162  00FC98  0E00               	movlw	high _msm7
  1163  00FC9A  2044               	addwfc	_i+1,w,c
  1164  00FC9C  6EDA               	movwf	fsr2h,c
  1165  00FC9E  50DF               	movf	indf2,w,c
  1166  00FCA0  EC89  F07A         	call	_trans_dato
  1167  00FCA4  4A43               	infsnz	_i,f,c
  1168  00FCA6  2A44               	incf	_i+1,f,c
  1169  00FCA8  0012               	return	
  1170  00FCAA                     l1626:
  1171                           
  1172                           ;main.c: 358: else{
  1173                           ;main.c: 359: i=0;
  1174  00FCAA  0E00               	movlw	0
  1175  00FCAC  6E44               	movwf	_i+1,c
  1176  00FCAE  0E00               	movlw	0
  1177  00FCB0  6E43               	movwf	_i,c
  1178                           
  1179                           ;main.c: 360: trans_dato('\r');
  1180  00FCB2  0E0D               	movlw	13
  1181  00FCB4  EC89  F07A         	call	_trans_dato
  1182                           
  1183                           ;main.c: 361: est=9;
  1184  00FCB8  0E00               	movlw	0
  1185  00FCBA  6E42               	movwf	_est+1,c
  1186  00FCBC  0E09               	movlw	9
  1187  00FCBE  6E41               	movwf	_est,c
  1188                           
  1189                           ;main.c: 367: }
  1190                           
  1191                           ;main.c: 365: break;
  1192                           
  1193                           ;main.c: 364: default:
  1194                           
  1195                           ;main.c: 362: }
  1196                           ;main.c: 363: break;
  1197  00FCC0  0012               	return	
  1198  00FCC2                     l1634:
  1199  00FCC2  C041  F04C         	movff	_est,??_transmitir
  1200  00FCC6  C042  F04D         	movff	_est+1,??_transmitir+1
  1201                           
  1202                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1203                           ; Switch size 1, requested type "space"
  1204                           ; Number of cases is 1, Range of values is 0 to 0
  1205                           ; switch strategies available:
  1206                           ; Name         Instructions Cycles
  1207                           ; simple_byte            4     3 (average)
  1208                           ;	Chosen strategy is simple_byte
  1209  00FCCA  504D               	movf	??_transmitir+1,w,c
  1210  00FCCC  0A00               	xorlw	0	; case 0
  1211  00FCCE  A4D8               	btfss	status,2,c
  1212  00FCD0  0012               	return	
  1213                           
  1214                           ; Switch size 1, requested type "space"
  1215                           ; Number of cases is 7, Range of values is 0 to 6
  1216                           ; switch strategies available:
  1217                           ; Name         Instructions Cycles
  1218                           ; simple_byte           22    12 (average)
  1219                           ;	Chosen strategy is simple_byte
  1220  00FCD2  504C               	movf	??_transmitir,w,c
  1221  00FCD4  0A00               	xorlw	0	; case 0
  1222  00FCD6  B4D8               	btfsc	status,2,c
  1223  00FCD8  D706               	goto	l1560
  1224  00FCDA  0A01               	xorlw	1	; case 1
  1225  00FCDC  B4D8               	btfsc	status,2,c
  1226  00FCDE  D725               	goto	l1570
  1227  00FCE0  0A03               	xorlw	3	; case 2
  1228  00FCE2  B4D8               	btfsc	status,2,c
  1229  00FCE4  D744               	goto	l1580
  1230  00FCE6  0A01               	xorlw	1	; case 3
  1231  00FCE8  B4D8               	btfsc	status,2,c
  1232  00FCEA  D763               	goto	l1590
  1233  00FCEC  0A07               	xorlw	7	; case 4
  1234  00FCEE  B4D8               	btfsc	status,2,c
  1235  00FCF0  D782               	goto	l1600
  1236  00FCF2  0A01               	xorlw	1	; case 5
  1237  00FCF4  B4D8               	btfsc	status,2,c
  1238  00FCF6  D7A1               	goto	l1610
  1239  00FCF8  0A03               	xorlw	3	; case 6
  1240  00FCFA  A4D8               	btfss	status,2,c
  1241  00FCFC  0012               	return	
  1242  00FCFE  D7BF               	goto	l1620
  1243  00FD00                     __end_of_transmitir:
  1244                           	opt stack 0
  1245                           tblptru	equ	0xFF8
  1246                           tblptrh	equ	0xFF7
  1247                           tblptrl	equ	0xFF6
  1248                           tablat	equ	0xFF5
  1249                           postinc0	equ	0xFEE
  1250                           wreg	equ	0xFE8
  1251                           postdec1	equ	0xFE5
  1252                           fsr1l	equ	0xFE1
  1253                           indf2	equ	0xFDF
  1254                           postinc2	equ	0xFDE
  1255                           fsr2h	equ	0xFDA
  1256                           fsr2l	equ	0xFD9
  1257                           status	equ	0xFD8
  1258                           
  1259 ;; *************** function _trans_dato *****************
  1260 ;; Defined at:
  1261 ;;		line 35 in file "m_uart.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;  x               1    wreg     unsigned char 
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;  x               1    0[COMRAM] unsigned char 
  1266 ;; Return value:  Size  Location     Type
  1267 ;;		None               void
  1268 ;; Registers used:
  1269 ;;		wreg
  1270 ;; Tracked objects:
  1271 ;;		On entry : 0/0
  1272 ;;		On exit  : 0/0
  1273 ;;		Unchanged: 0/0
  1274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1276 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1278 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1279 ;;Total ram usage:        1 bytes
  1280 ;; Hardware stack levels used:    1
  1281 ;; This function calls:
  1282 ;;		Nothing
  1283 ;; This function is called by:
  1284 ;;		_transmitir
  1285 ;;		_send_msm
  1286 ;; This function uses a non-reentrant model
  1287 ;;
  1288                           
  1289                           	psect	text2
  1290  00F512                     __ptext2:
  1291                           	opt stack 0
  1292  00F512                     _trans_dato:
  1293                           	opt stack 29
  1294                           
  1295                           ;incstack = 0
  1296                           ;trans_dato@x stored from wreg
  1297  00F512  6E4B               	movwf	trans_dato@x,c
  1298  00F514                     l325:
  1299  00F514  A2AC               	btfss	4012,1,c	;volatile
  1300  00F516  D7FE               	goto	l325
  1301                           
  1302                           ;m_uart.c: 37: TXREG=x;
  1303  00F518  C04B  FFAD         	movff	trans_dato@x,4013	;volatile
  1304  00F51C  0012               	return		;funcret
  1305  00F51E                     __end_of_trans_dato:
  1306                           	opt stack 0
  1307                           tblptru	equ	0xFF8
  1308                           tblptrh	equ	0xFF7
  1309                           tblptrl	equ	0xFF6
  1310                           tablat	equ	0xFF5
  1311                           postinc0	equ	0xFEE
  1312                           wreg	equ	0xFE8
  1313                           postdec1	equ	0xFE5
  1314                           fsr1l	equ	0xFE1
  1315                           indf2	equ	0xFDF
  1316                           postinc2	equ	0xFDE
  1317                           fsr2h	equ	0xFDA
  1318                           fsr2l	equ	0xFD9
  1319                           status	equ	0xFD8
  1320                           
  1321 ;; *************** function _star_convercion *****************
  1322 ;; Defined at:
  1323 ;;		line 27 in file "adc.c"
  1324 ;; Parameters:    Size  Location     Type
  1325 ;;		None
  1326 ;; Auto vars:     Size  Location     Type
  1327 ;;		None
  1328 ;; Return value:  Size  Location     Type
  1329 ;;		None               void
  1330 ;; Registers used:
  1331 ;;		None
  1332 ;; Tracked objects:
  1333 ;;		On entry : 0/0
  1334 ;;		On exit  : 0/0
  1335 ;;		Unchanged: 0/0
  1336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1341 ;;Total ram usage:        0 bytes
  1342 ;; Hardware stack levels used:    1
  1343 ;; This function calls:
  1344 ;;		Nothing
  1345 ;; This function is called by:
  1346 ;;		_main
  1347 ;; This function uses a non-reentrant model
  1348 ;;
  1349                           
  1350                           	psect	text3
  1351  00F502                     __ptext3:
  1352                           	opt stack 0
  1353  00F502                     _star_convercion:
  1354                           	opt stack 30
  1355                           
  1356                           ;adc.c: 28: ADCON0bits.GO=1;
  1357                           
  1358                           ;incstack = 0
  1359  00F502  82C2               	bsf	4034,1,c	;volatile
  1360  00F504  0012               	return		;funcret
  1361  00F506                     __end_of_star_convercion:
  1362                           	opt stack 0
  1363                           tblptru	equ	0xFF8
  1364                           tblptrh	equ	0xFF7
  1365                           tblptrl	equ	0xFF6
  1366                           tablat	equ	0xFF5
  1367                           postinc0	equ	0xFEE
  1368                           wreg	equ	0xFE8
  1369                           postdec1	equ	0xFE5
  1370                           fsr1l	equ	0xFE1
  1371                           indf2	equ	0xFDF
  1372                           postinc2	equ	0xFDE
  1373                           fsr2h	equ	0xFDA
  1374                           fsr2l	equ	0xFD9
  1375                           status	equ	0xFD8
  1376                           
  1377 ;; *************** function _set_secuencia *****************
  1378 ;; Defined at:
  1379 ;;		line 139 in file "main.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;		None
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;		None
  1384 ;; Return value:  Size  Location     Type
  1385 ;;		None               void
  1386 ;; Registers used:
  1387 ;;		wreg, status,2, status,0, cstack
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1397 ;;Total ram usage:        0 bytes
  1398 ;; Hardware stack levels used:    1
  1399 ;; Hardware stack levels required when called:    3
  1400 ;; This function calls:
  1401 ;;		_rotar_derecha
  1402 ;;		_rotar_izquierda
  1403 ;;		_shit_raid
  1404 ;;		_vasculante
  1405 ;; This function is called by:
  1406 ;;		_main
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           	psect	text4
  1411  00F77E                     __ptext4:
  1412                           	opt stack 0
  1413  00F77E                     _set_secuencia:
  1414                           	opt stack 27
  1415                           
  1416                           ;main.c: 140: switch(sec){
  1417                           
  1418                           ;incstack = 0
  1419  00F77E  D012               	goto	l1498
  1420  00F780                     l1486:
  1421                           
  1422                           ;main.c: 142: rotar_derecha(x);
  1423  00F780  504A               	movf	_x,w,c
  1424  00F782  ECA0  F07B         	call	_rotar_derecha
  1425                           
  1426                           ;main.c: 143: break;
  1427  00F786  0012               	return	
  1428  00F788                     l1488:
  1429                           
  1430                           ;main.c: 145: rotar_izquierda(x);
  1431  00F788  504A               	movf	_x,w,c
  1432  00F78A  EC82  F07B         	call	_rotar_izquierda
  1433                           
  1434                           ;main.c: 146: break;
  1435  00F78E  0012               	return	
  1436  00F790                     l1490:
  1437                           
  1438                           ;main.c: 148: vasculante(x);
  1439  00F790  504A               	movf	_x,w,c
  1440  00F792  EC67  F07B         	call	_vasculante
  1441                           
  1442                           ;main.c: 149: break;
  1443  00F796  0012               	return	
  1444  00F798                     l1492:
  1445                           
  1446                           ;main.c: 151: shit_raid();
  1447  00F798  EC38  F07C         	call	_shit_raid	;wreg free
  1448                           
  1449                           ;main.c: 152: break;
  1450  00F79C  0012               	return	
  1451  00F79E                     l1494:
  1452                           
  1453                           ;main.c: 154: sec=0;
  1454  00F79E  0E00               	movlw	0
  1455  00F7A0  6E48               	movwf	_sec,c
  1456                           
  1457                           ;main.c: 156: }
  1458                           
  1459                           ;main.c: 155: break;
  1460  00F7A2  0012               	return	
  1461  00F7A4                     l1498:
  1462  00F7A4  5048               	movf	_sec,w,c
  1463                           
  1464                           ; Switch size 1, requested type "space"
  1465                           ; Number of cases is 4, Range of values is 0 to 3
  1466                           ; switch strategies available:
  1467                           ; Name         Instructions Cycles
  1468                           ; simple_byte           13     7 (average)
  1469                           ;	Chosen strategy is simple_byte
  1470  00F7A6  0A00               	xorlw	0	; case 0
  1471  00F7A8  B4D8               	btfsc	status,2,c
  1472  00F7AA  D7EA               	goto	l1486
  1473  00F7AC  0A01               	xorlw	1	; case 1
  1474  00F7AE  B4D8               	btfsc	status,2,c
  1475  00F7B0  D7EB               	goto	l1488
  1476  00F7B2  0A03               	xorlw	3	; case 2
  1477  00F7B4  B4D8               	btfsc	status,2,c
  1478  00F7B6  D7EC               	goto	l1490
  1479  00F7B8  0A01               	xorlw	1	; case 3
  1480  00F7BA  B4D8               	btfsc	status,2,c
  1481  00F7BC  D7ED               	goto	l1492
  1482  00F7BE  D7EF               	goto	l1494
  1483  00F7C0                     __end_of_set_secuencia:
  1484                           	opt stack 0
  1485                           tblptru	equ	0xFF8
  1486                           tblptrh	equ	0xFF7
  1487                           tblptrl	equ	0xFF6
  1488                           tablat	equ	0xFF5
  1489                           postinc0	equ	0xFEE
  1490                           wreg	equ	0xFE8
  1491                           postdec1	equ	0xFE5
  1492                           fsr1l	equ	0xFE1
  1493                           indf2	equ	0xFDF
  1494                           postinc2	equ	0xFDE
  1495                           fsr2h	equ	0xFDA
  1496                           fsr2l	equ	0xFD9
  1497                           status	equ	0xFD8
  1498                           
  1499 ;; *************** function _vasculante *****************
  1500 ;; Defined at:
  1501 ;;		line 78 in file "main.c"
  1502 ;; Parameters:    Size  Location     Type
  1503 ;;  x               1    wreg     unsigned char 
  1504 ;; Auto vars:     Size  Location     Type
  1505 ;;  x               1    4[COMRAM] unsigned char 
  1506 ;; Return value:  Size  Location     Type
  1507 ;;		None               void
  1508 ;; Registers used:
  1509 ;;		wreg, status,2, status,0, cstack
  1510 ;; Tracked objects:
  1511 ;;		On entry : 0/0
  1512 ;;		On exit  : 0/0
  1513 ;;		Unchanged: 0/0
  1514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1516 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1518 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1519 ;;Total ram usage:        1 bytes
  1520 ;; Hardware stack levels used:    1
  1521 ;; Hardware stack levels required when called:    2
  1522 ;; This function calls:
  1523 ;;		_rotar_derecha
  1524 ;;		_rotar_izquierda
  1525 ;; This function is called by:
  1526 ;;		_set_secuencia
  1527 ;; This function uses a non-reentrant model
  1528 ;;
  1529                           
  1530                           	psect	text5
  1531  00F6CE                     __ptext5:
  1532                           	opt stack 0
  1533  00F6CE                     _vasculante:
  1534                           	opt stack 27
  1535                           
  1536                           ;incstack = 0
  1537                           ;vasculante@x stored from wreg
  1538  00F6CE  6E4F               	movwf	vasculante@x,c
  1539                           
  1540                           ;main.c: 79: if (d==0){
  1541  00F6D0  5045               	movf	_d,w,c
  1542  00F6D2  A4D8               	btfss	status,2,c
  1543  00F6D4  D00B               	goto	l1470
  1544                           
  1545                           ;main.c: 80: d=rotar_derecha(x);
  1546  00F6D6  504F               	movf	vasculante@x,w,c
  1547  00F6D8  ECA0  F07B         	call	_rotar_derecha
  1548  00F6DC  504C               	movf	?_rotar_derecha,w,c
  1549  00F6DE  6E45               	movwf	_d,c
  1550                           
  1551                           ;main.c: 81: if (a==1)
  1552  00F6E0  0431               	decf	_a,w,c
  1553  00F6E2  A4D8               	btfss	status,2,c
  1554  00F6E4  0012               	return	
  1555                           
  1556                           ;main.c: 82: a=128;
  1557  00F6E6  0E80               	movlw	128
  1558  00F6E8  6E31               	movwf	_a,c
  1559                           
  1560                           ;main.c: 83: }
  1561  00F6EA  0012               	return	
  1562  00F6EC                     l1470:
  1563                           
  1564                           ;main.c: 84: else{
  1565                           ;main.c: 85: d=rotar_izquierda(x);
  1566  00F6EC  504F               	movf	vasculante@x,w,c
  1567  00F6EE  EC82  F07B         	call	_rotar_izquierda
  1568  00F6F2  504C               	movf	?_rotar_izquierda,w,c
  1569  00F6F4  6E45               	movwf	_d,c
  1570                           
  1571                           ;main.c: 86: if (a==128)
  1572  00F6F6  0E80               	movlw	128
  1573  00F6F8  1831               	xorwf	_a,w,c
  1574  00F6FA  A4D8               	btfss	status,2,c
  1575  00F6FC  0012               	return	
  1576                           
  1577                           ;main.c: 87: a=1;
  1578  00F6FE  0E01               	movlw	1
  1579  00F700  6E31               	movwf	_a,c
  1580  00F702  0012               	return	
  1581  00F704                     __end_of_vasculante:
  1582                           	opt stack 0
  1583                           tblptru	equ	0xFF8
  1584                           tblptrh	equ	0xFF7
  1585                           tblptrl	equ	0xFF6
  1586                           tablat	equ	0xFF5
  1587                           postinc0	equ	0xFEE
  1588                           wreg	equ	0xFE8
  1589                           postdec1	equ	0xFE5
  1590                           fsr1l	equ	0xFE1
  1591                           indf2	equ	0xFDF
  1592                           postinc2	equ	0xFDE
  1593                           fsr2h	equ	0xFDA
  1594                           fsr2l	equ	0xFD9
  1595                           status	equ	0xFD8
  1596                           
  1597 ;; *************** function _rotar_izquierda *****************
  1598 ;; Defined at:
  1599 ;;		line 61 in file "main.c"
  1600 ;; Parameters:    Size  Location     Type
  1601 ;;  x               1    wreg     unsigned char 
  1602 ;; Auto vars:     Size  Location     Type
  1603 ;;  x               1    3[COMRAM] unsigned char 
  1604 ;; Return value:  Size  Location     Type
  1605 ;;                  2    1[COMRAM] int 
  1606 ;; Registers used:
  1607 ;;		wreg, status,2, status,0, cstack
  1608 ;; Tracked objects:
  1609 ;;		On entry : 0/0
  1610 ;;		On exit  : 0/0
  1611 ;;		Unchanged: 0/0
  1612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1613 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1614 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1616 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1617 ;;Total ram usage:        3 bytes
  1618 ;; Hardware stack levels used:    1
  1619 ;; Hardware stack levels required when called:    1
  1620 ;; This function calls:
  1621 ;;		_port
  1622 ;; This function is called by:
  1623 ;;		_vasculante
  1624 ;;		_set_secuencia
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628                           	psect	text6
  1629  00F704                     __ptext6:
  1630                           	opt stack 0
  1631  00F704                     _rotar_izquierda:
  1632                           	opt stack 27
  1633                           
  1634                           ;incstack = 0
  1635                           ;rotar_izquierda@x stored from wreg
  1636  00F704  6E4E               	movwf	rotar_izquierda@x,c
  1637                           
  1638                           ;main.c: 62: if (x==1){
  1639  00F706  044E               	decf	rotar_izquierda@x,w,c
  1640  00F708  A4D8               	btfss	status,2,c
  1641  00F70A  D004               	goto	l1446
  1642                           
  1643                           ;main.c: 63: port(a);
  1644  00F70C  5031               	movf	_a,w,c
  1645  00F70E  ECCA  F07A         	call	_port
  1646                           
  1647                           ;main.c: 64: }
  1648  00F712  D004               	goto	l1448
  1649  00F714                     l1446:
  1650                           
  1651                           ;main.c: 65: else{
  1652                           ;main.c: 66: port(0xFF & ~a);
  1653  00F714  5031               	movf	_a,w,c
  1654  00F716  0AFF               	xorlw	255
  1655  00F718  ECCA  F07A         	call	_port
  1656  00F71C                     l1448:
  1657                           
  1658                           ;main.c: 67: }
  1659                           ;main.c: 68: if (a==1){
  1660  00F71C  0431               	decf	_a,w,c
  1661  00F71E  A4D8               	btfss	status,2,c
  1662  00F720  D007               	goto	l1456
  1663                           
  1664                           ;main.c: 69: a=128;
  1665  00F722  0E80               	movlw	128
  1666  00F724  6E31               	movwf	_a,c
  1667                           
  1668                           ;main.c: 70: return 0;
  1669  00F726  0E00               	movlw	0
  1670  00F728  6E4D               	movwf	?_rotar_izquierda+1,c
  1671  00F72A  0E00               	movlw	0
  1672  00F72C  6E4C               	movwf	?_rotar_izquierda,c
  1673  00F72E  0012               	return	
  1674  00F730                     l1456:
  1675                           
  1676                           ;main.c: 72: else
  1677                           ;main.c: 73: a=a>>1;
  1678  00F730  90D8               	bcf	status,0,c
  1679  00F732  3031               	rrcf	_a,w,c
  1680  00F734  6E31               	movwf	_a,c
  1681                           
  1682                           ;main.c: 74: return 1;
  1683  00F736  0E00               	movlw	0
  1684  00F738  6E4D               	movwf	?_rotar_izquierda+1,c
  1685  00F73A  0E01               	movlw	1
  1686  00F73C  6E4C               	movwf	?_rotar_izquierda,c
  1687  00F73E  0012               	return	
  1688  00F740                     __end_of_rotar_izquierda:
  1689                           	opt stack 0
  1690                           tblptru	equ	0xFF8
  1691                           tblptrh	equ	0xFF7
  1692                           tblptrl	equ	0xFF6
  1693                           tablat	equ	0xFF5
  1694                           postinc0	equ	0xFEE
  1695                           wreg	equ	0xFE8
  1696                           postdec1	equ	0xFE5
  1697                           fsr1l	equ	0xFE1
  1698                           indf2	equ	0xFDF
  1699                           postinc2	equ	0xFDE
  1700                           fsr2h	equ	0xFDA
  1701                           fsr2l	equ	0xFD9
  1702                           status	equ	0xFD8
  1703                           
  1704 ;; *************** function _rotar_derecha *****************
  1705 ;; Defined at:
  1706 ;;		line 45 in file "main.c"
  1707 ;; Parameters:    Size  Location     Type
  1708 ;;  x               1    wreg     unsigned char 
  1709 ;; Auto vars:     Size  Location     Type
  1710 ;;  x               1    3[COMRAM] unsigned char 
  1711 ;; Return value:  Size  Location     Type
  1712 ;;                  2    1[COMRAM] int 
  1713 ;; Registers used:
  1714 ;;		wreg, status,2, status,0, cstack
  1715 ;; Tracked objects:
  1716 ;;		On entry : 0/0
  1717 ;;		On exit  : 0/0
  1718 ;;		Unchanged: 0/0
  1719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1720 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1721 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1723 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1724 ;;Total ram usage:        3 bytes
  1725 ;; Hardware stack levels used:    1
  1726 ;; Hardware stack levels required when called:    1
  1727 ;; This function calls:
  1728 ;;		_port
  1729 ;; This function is called by:
  1730 ;;		_vasculante
  1731 ;;		_set_secuencia
  1732 ;; This function uses a non-reentrant model
  1733 ;;
  1734                           
  1735                           	psect	text7
  1736  00F740                     __ptext7:
  1737                           	opt stack 0
  1738  00F740                     _rotar_derecha:
  1739                           	opt stack 27
  1740                           
  1741                           ;incstack = 0
  1742                           ;rotar_derecha@x stored from wreg
  1743  00F740  6E4E               	movwf	rotar_derecha@x,c
  1744                           
  1745                           ;main.c: 46: if (x==1){
  1746  00F742  044E               	decf	rotar_derecha@x,w,c
  1747  00F744  A4D8               	btfss	status,2,c
  1748  00F746  D004               	goto	l1426
  1749                           
  1750                           ;main.c: 47: port(a);
  1751  00F748  5031               	movf	_a,w,c
  1752  00F74A  ECCA  F07A         	call	_port
  1753                           
  1754                           ;main.c: 48: }
  1755  00F74E  D004               	goto	l1428
  1756  00F750                     l1426:
  1757                           
  1758                           ;main.c: 49: else{
  1759                           ;main.c: 50: port(0xFF & ~a);
  1760  00F750  5031               	movf	_a,w,c
  1761  00F752  0AFF               	xorlw	255
  1762  00F754  ECCA  F07A         	call	_port
  1763  00F758                     l1428:
  1764                           
  1765                           ;main.c: 51: }
  1766                           ;main.c: 52: if (a==128){
  1767  00F758  0E80               	movlw	128
  1768  00F75A  1831               	xorwf	_a,w,c
  1769  00F75C  A4D8               	btfss	status,2,c
  1770  00F75E  D007               	goto	l1436
  1771                           
  1772                           ;main.c: 53: a=1;
  1773  00F760  0E01               	movlw	1
  1774  00F762  6E31               	movwf	_a,c
  1775                           
  1776                           ;main.c: 54: return 1;
  1777  00F764  0E00               	movlw	0
  1778  00F766  6E4D               	movwf	?_rotar_derecha+1,c
  1779  00F768  0E01               	movlw	1
  1780  00F76A  6E4C               	movwf	?_rotar_derecha,c
  1781  00F76C  0012               	return	
  1782  00F76E                     l1436:
  1783                           
  1784                           ;main.c: 56: else
  1785                           ;main.c: 57: a=a<<1;
  1786  00F76E  5031               	movf	_a,w,c
  1787  00F770  2431               	addwf	_a,w,c
  1788  00F772  6E31               	movwf	_a,c
  1789                           
  1790                           ;main.c: 58: return 0;
  1791  00F774  0E00               	movlw	0
  1792  00F776  6E4D               	movwf	?_rotar_derecha+1,c
  1793  00F778  0E00               	movlw	0
  1794  00F77A  6E4C               	movwf	?_rotar_derecha,c
  1795  00F77C  0012               	return	
  1796  00F77E                     __end_of_rotar_derecha:
  1797                           	opt stack 0
  1798                           tblptru	equ	0xFF8
  1799                           tblptrh	equ	0xFF7
  1800                           tblptrl	equ	0xFF6
  1801                           tablat	equ	0xFF5
  1802                           postinc0	equ	0xFEE
  1803                           wreg	equ	0xFE8
  1804                           postdec1	equ	0xFE5
  1805                           fsr1l	equ	0xFE1
  1806                           indf2	equ	0xFDF
  1807                           postinc2	equ	0xFDE
  1808                           fsr2h	equ	0xFDA
  1809                           fsr2l	equ	0xFD9
  1810                           status	equ	0xFD8
  1811                           
  1812 ;; *************** function _shit_raid *****************
  1813 ;; Defined at:
  1814 ;;		line 91 in file "main.c"
  1815 ;; Parameters:    Size  Location     Type
  1816 ;;		None
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;  g               1    1[COMRAM] unsigned char 
  1819 ;; Return value:  Size  Location     Type
  1820 ;;		None               void
  1821 ;; Registers used:
  1822 ;;		wreg, status,2, status,0, cstack
  1823 ;; Tracked objects:
  1824 ;;		On entry : 0/0
  1825 ;;		On exit  : 0/0
  1826 ;;		Unchanged: 0/0
  1827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1829 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1831 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1832 ;;Total ram usage:        1 bytes
  1833 ;; Hardware stack levels used:    1
  1834 ;; Hardware stack levels required when called:    1
  1835 ;; This function calls:
  1836 ;;		_port
  1837 ;; This function is called by:
  1838 ;;		_set_secuencia
  1839 ;; This function uses a non-reentrant model
  1840 ;;
  1841                           
  1842                           	psect	text8
  1843  00F870                     __ptext8:
  1844                           	opt stack 0
  1845  00F870                     _shit_raid:
  1846                           	opt stack 28
  1847                           
  1848                           ;main.c: 92: unsigned char g;
  1849                           ;main.c: 93: g=s2 | s1;
  1850                           
  1851                           ;incstack = 0
  1852  00F870  5034               	movf	_s2,w,c
  1853  00F872  1033               	iorwf	_s1,w,c
  1854  00F874  6E4C               	movwf	shit_raid@g,c
  1855                           
  1856                           ;main.c: 94: if (x==1){
  1857  00F876  044A               	decf	_x,w,c
  1858  00F878  A4D8               	btfss	status,2,c
  1859  00F87A  D004               	goto	l1002
  1860                           
  1861                           ;main.c: 95: port(g);
  1862  00F87C  504C               	movf	shit_raid@g,w,c
  1863  00F87E  ECCA  F07A         	call	_port
  1864                           
  1865                           ;main.c: 96: }
  1866  00F882  D004               	goto	l1004
  1867  00F884                     l1002:
  1868                           
  1869                           ;main.c: 97: else{
  1870                           ;main.c: 98: port(0xFF & ~g);
  1871  00F884  504C               	movf	shit_raid@g,w,c
  1872  00F886  0AFF               	xorlw	255
  1873  00F888  ECCA  F07A         	call	_port
  1874  00F88C                     l1004:
  1875                           
  1876                           ;main.c: 99: }
  1877                           ;main.c: 100: if (jj<3){
  1878  00F88C  0E03               	movlw	3
  1879  00F88E  6047               	cpfslt	_jj,c
  1880  00F890  D006               	goto	l1010
  1881                           
  1882                           ;main.c: 101: s1<<=1;
  1883  00F892  90D8               	bcf	status,0,c
  1884  00F894  3633               	rlcf	_s1,f,c
  1885                           
  1886                           ;main.c: 102: s2>>=1;
  1887  00F896  90D8               	bcf	status,0,c
  1888  00F898  3234               	rrcf	_s2,f,c
  1889                           
  1890                           ;main.c: 103: jj++;
  1891  00F89A  2A47               	incf	_jj,f,c
  1892                           
  1893                           ;main.c: 104: }
  1894  00F89C  0012               	return	
  1895  00F89E                     l1010:
  1896                           
  1897                           ;main.c: 105: else if(jj>=3 && jj<6){
  1898  00F89E  0E02               	movlw	2
  1899  00F8A0  6447               	cpfsgt	_jj,c
  1900  00F8A2  D009               	goto	l1018
  1901  00F8A4  0E06               	movlw	6
  1902  00F8A6  6047               	cpfslt	_jj,c
  1903  00F8A8  D006               	goto	l1018
  1904                           
  1905                           ;main.c: 106: s1>>=1;
  1906  00F8AA  90D8               	bcf	status,0,c
  1907  00F8AC  3233               	rrcf	_s1,f,c
  1908                           
  1909                           ;main.c: 107: s2<<=1;
  1910  00F8AE  90D8               	bcf	status,0,c
  1911  00F8B0  3634               	rlcf	_s2,f,c
  1912                           
  1913                           ;main.c: 108: jj++;
  1914  00F8B2  2A47               	incf	_jj,f,c
  1915                           
  1916                           ;main.c: 109: }
  1917  00F8B4  0012               	return	
  1918  00F8B6                     l1018:
  1919                           
  1920                           ;main.c: 110: else if(jj==6){
  1921  00F8B6  0E06               	movlw	6
  1922  00F8B8  1847               	xorwf	_jj,w,c
  1923  00F8BA  A4D8               	btfss	status,2,c
  1924  00F8BC  0012               	return	
  1925                           
  1926                           ;main.c: 111: jj=0;
  1927  00F8BE  0E00               	movlw	0
  1928  00F8C0  6E47               	movwf	_jj,c
  1929                           
  1930                           ;main.c: 112: s1=0x01;
  1931  00F8C2  0E01               	movlw	1
  1932  00F8C4  6E33               	movwf	_s1,c
  1933                           
  1934                           ;main.c: 113: s2=0b10000000;
  1935  00F8C6  0E80               	movlw	128
  1936  00F8C8  6E34               	movwf	_s2,c
  1937  00F8CA  0012               	return	
  1938  00F8CC                     __end_of_shit_raid:
  1939                           	opt stack 0
  1940                           tblptru	equ	0xFF8
  1941                           tblptrh	equ	0xFF7
  1942                           tblptrl	equ	0xFF6
  1943                           tablat	equ	0xFF5
  1944                           postinc0	equ	0xFEE
  1945                           wreg	equ	0xFE8
  1946                           postdec1	equ	0xFE5
  1947                           fsr1l	equ	0xFE1
  1948                           indf2	equ	0xFDF
  1949                           postinc2	equ	0xFDE
  1950                           fsr2h	equ	0xFDA
  1951                           fsr2l	equ	0xFD9
  1952                           status	equ	0xFD8
  1953                           
  1954 ;; *************** function _port *****************
  1955 ;; Defined at:
  1956 ;;		line 14 in file "hw.c"
  1957 ;; Parameters:    Size  Location     Type
  1958 ;;  c               1    wreg     unsigned char 
  1959 ;; Auto vars:     Size  Location     Type
  1960 ;;  c               1    0[COMRAM] unsigned char 
  1961 ;; Return value:  Size  Location     Type
  1962 ;;		None               void
  1963 ;; Registers used:
  1964 ;;		wreg, status,2, status,0
  1965 ;; Tracked objects:
  1966 ;;		On entry : 0/0
  1967 ;;		On exit  : 0/0
  1968 ;;		Unchanged: 0/0
  1969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1971 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1973 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1974 ;;Total ram usage:        1 bytes
  1975 ;; Hardware stack levels used:    1
  1976 ;; This function calls:
  1977 ;;		Nothing
  1978 ;; This function is called by:
  1979 ;;		_rotar_derecha
  1980 ;;		_rotar_izquierda
  1981 ;;		_shit_raid
  1982 ;; This function uses a non-reentrant model
  1983 ;;
  1984                           
  1985                           	psect	text9
  1986  00F594                     __ptext9:
  1987                           	opt stack 0
  1988  00F594                     _port:
  1989                           	opt stack 27
  1990                           
  1991                           ;incstack = 0
  1992                           ;port@c stored from wreg
  1993  00F594  6E4B               	movwf	port@c,c
  1994                           
  1995                           ;hw.c: 15: LATD &=0XF0;
  1996  00F596  0EF0               	movlw	240
  1997  00F598  168C               	andwf	3980,f,c	;volatile
  1998                           
  1999                           ;hw.c: 16: LATB &= 0XF0;
  2000  00F59A  0EF0               	movlw	240
  2001  00F59C  168A               	andwf	3978,f,c	;volatile
  2002                           
  2003                           ;hw.c: 17: LATD |=(c & 0x0F);
  2004  00F59E  504B               	movf	port@c,w,c
  2005  00F5A0  0B0F               	andlw	15
  2006  00F5A2  128C               	iorwf	3980,f,c	;volatile
  2007                           
  2008                           ;hw.c: 18: LATB |=(c>>4);
  2009  00F5A4  384B               	swapf	port@c,w,c
  2010  00F5A6  0B0F               	andlw	15
  2011  00F5A8  128A               	iorwf	3978,f,c	;volatile
  2012  00F5AA  0012               	return		;funcret
  2013  00F5AC                     __end_of_port:
  2014                           	opt stack 0
  2015                           tblptru	equ	0xFF8
  2016                           tblptrh	equ	0xFF7
  2017                           tblptrl	equ	0xFF6
  2018                           tablat	equ	0xFF5
  2019                           postinc0	equ	0xFEE
  2020                           wreg	equ	0xFE8
  2021                           postdec1	equ	0xFE5
  2022                           fsr1l	equ	0xFE1
  2023                           indf2	equ	0xFDF
  2024                           postinc2	equ	0xFDE
  2025                           fsr2h	equ	0xFDA
  2026                           fsr2l	equ	0xFD9
  2027                           status	equ	0xFD8
  2028                           
  2029 ;; *************** function _set_ph *****************
  2030 ;; Defined at:
  2031 ;;		line 207 in file "main.c"
  2032 ;; Parameters:    Size  Location     Type
  2033 ;;		None
  2034 ;; Auto vars:     Size  Location     Type
  2035 ;;		None
  2036 ;; Return value:  Size  Location     Type
  2037 ;;		None               void
  2038 ;; Registers used:
  2039 ;;		wreg, status,2, cstack
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2049 ;;Total ram usage:        0 bytes
  2050 ;; Hardware stack levels used:    1
  2051 ;; Hardware stack levels required when called:    1
  2052 ;; This function calls:
  2053 ;;		_activacion_rx
  2054 ;;		_activacion_tx
  2055 ;;		_conf_adc
  2056 ;;		_config_tx_aurt
  2057 ;;		_set_adc
  2058 ;;		_set_leds
  2059 ;;		_timer_0_conf
  2060 ;;		_timer_0_set
  2061 ;;		_timer_0_star
  2062 ;; This function is called by:
  2063 ;;		_main
  2064 ;; This function uses a non-reentrant model
  2065 ;;
  2066                           
  2067                           	psect	text10
  2068  00F668                     __ptext10:
  2069                           	opt stack 0
  2070  00F668                     _set_ph:
  2071                           	opt stack 29
  2072                           
  2073                           ;main.c: 209: set_leds();
  2074                           
  2075                           ;incstack = 0
  2076  00F668  ECD6  F07A         	call	_set_leds	;wreg free
  2077                           
  2078                           ;main.c: 210: timer_0_conf();
  2079  00F66C  ECAB  F07A         	call	_timer_0_conf	;wreg free
  2080                           
  2081                           ;main.c: 211: timer_0_set(0x19,0xD3);
  2082  00F670  0ED3               	movlw	211
  2083  00F672  6E4B               	movwf	timer_0_set@high,c
  2084  00F674  0E19               	movlw	25
  2085  00F676  EC83  F07A         	call	_timer_0_set
  2086                           
  2087                           ;main.c: 212: timer_0_star();
  2088  00F67A  EC7F  F07A         	call	_timer_0_star	;wreg free
  2089                           
  2090                           ;main.c: 213: conf_adc();
  2091  00F67E  ECF5  F07A         	call	_conf_adc	;wreg free
  2092                           
  2093                           ;main.c: 214: set_adc(1);
  2094  00F682  0E01               	movlw	1
  2095  00F684  ECA4  F07A         	call	_set_adc
  2096                           
  2097                           ;main.c: 215: config_tx_aurt();
  2098  00F688  ECBE  F07A         	call	_config_tx_aurt	;wreg free
  2099                           
  2100                           ;main.c: 216: activacion_tx(1);
  2101  00F68C  0E01               	movlw	1
  2102  00F68E  EC9D  F07A         	call	_activacion_tx
  2103                           
  2104                           ;main.c: 217: activacion_rx(1);
  2105  00F692  0E01               	movlw	1
  2106  00F694  EC96  F07A         	call	_activacion_rx
  2107  00F698  0012               	return		;funcret
  2108  00F69A                     __end_of_set_ph:
  2109                           	opt stack 0
  2110                           tblptru	equ	0xFF8
  2111                           tblptrh	equ	0xFF7
  2112                           tblptrl	equ	0xFF6
  2113                           tablat	equ	0xFF5
  2114                           postinc0	equ	0xFEE
  2115                           wreg	equ	0xFE8
  2116                           postdec1	equ	0xFE5
  2117                           fsr1l	equ	0xFE1
  2118                           indf2	equ	0xFDF
  2119                           postinc2	equ	0xFDE
  2120                           fsr2h	equ	0xFDA
  2121                           fsr2l	equ	0xFD9
  2122                           status	equ	0xFD8
  2123                           
  2124 ;; *************** function _timer_0_conf *****************
  2125 ;; Defined at:
  2126 ;;		line 5 in file "timer.c"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;		None
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;		None
  2131 ;; Return value:  Size  Location     Type
  2132 ;;		None               void
  2133 ;; Registers used:
  2134 ;;		wreg, status,2
  2135 ;; Tracked objects:
  2136 ;;		On entry : 0/0
  2137 ;;		On exit  : 0/0
  2138 ;;		Unchanged: 0/0
  2139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2144 ;;Total ram usage:        0 bytes
  2145 ;; Hardware stack levels used:    1
  2146 ;; This function calls:
  2147 ;;		Nothing
  2148 ;; This function is called by:
  2149 ;;		_set_ph
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           	psect	text11
  2154  00F556                     __ptext11:
  2155                           	opt stack 0
  2156  00F556                     _timer_0_conf:
  2157                           	opt stack 29
  2158                           
  2159                           ;timer.c: 6: T0CONbits.T0PS=101;
  2160                           
  2161                           ;incstack = 0
  2162  00F556  50D5               	movf	4053,w,c	;volatile
  2163  00F558  0BF8               	andlw	-8
  2164  00F55A  0905               	iorlw	5
  2165  00F55C  6ED5               	movwf	4053,c	;volatile
  2166                           
  2167                           ;timer.c: 7: T0CONbits.T08BIT=0;
  2168  00F55E  9CD5               	bcf	4053,6,c	;volatile
  2169                           
  2170                           ;timer.c: 8: T0CONbits.PSA=0;
  2171  00F560  96D5               	bcf	4053,3,c	;volatile
  2172                           
  2173                           ;timer.c: 9: T0CONbits.T0CS=0;
  2174  00F562  9AD5               	bcf	4053,5,c	;volatile
  2175  00F564  0012               	return		;funcret
  2176  00F566                     __end_of_timer_0_conf:
  2177                           	opt stack 0
  2178                           tblptru	equ	0xFF8
  2179                           tblptrh	equ	0xFF7
  2180                           tblptrl	equ	0xFF6
  2181                           tablat	equ	0xFF5
  2182                           postinc0	equ	0xFEE
  2183                           wreg	equ	0xFE8
  2184                           postdec1	equ	0xFE5
  2185                           fsr1l	equ	0xFE1
  2186                           indf2	equ	0xFDF
  2187                           postinc2	equ	0xFDE
  2188                           fsr2h	equ	0xFDA
  2189                           fsr2l	equ	0xFD9
  2190                           status	equ	0xFD8
  2191                           
  2192 ;; *************** function _set_leds *****************
  2193 ;; Defined at:
  2194 ;;		line 4 in file "hw.c"
  2195 ;; Parameters:    Size  Location     Type
  2196 ;;		None
  2197 ;; Auto vars:     Size  Location     Type
  2198 ;;		None
  2199 ;; Return value:  Size  Location     Type
  2200 ;;		None               void
  2201 ;; Registers used:
  2202 ;;		wreg, status,2
  2203 ;; Tracked objects:
  2204 ;;		On entry : 0/0
  2205 ;;		On exit  : 0/0
  2206 ;;		Unchanged: 0/0
  2207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2212 ;;Total ram usage:        0 bytes
  2213 ;; Hardware stack levels used:    1
  2214 ;; This function calls:
  2215 ;;		Nothing
  2216 ;; This function is called by:
  2217 ;;		_set_ph
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221                           	psect	text12
  2222  00F5AC                     __ptext12:
  2223                           	opt stack 0
  2224  00F5AC                     _set_leds:
  2225                           	opt stack 29
  2226                           
  2227                           ;hw.c: 5: PORTD=0;
  2228                           
  2229                           ;incstack = 0
  2230  00F5AC  0E00               	movlw	0
  2231  00F5AE  6E83               	movwf	3971,c	;volatile
  2232                           
  2233                           ;hw.c: 6: LATD=0;
  2234  00F5B0  0E00               	movlw	0
  2235  00F5B2  6E8C               	movwf	3980,c	;volatile
  2236                           
  2237                           ;hw.c: 7: PORTB=0;
  2238  00F5B4  0E00               	movlw	0
  2239  00F5B6  6E81               	movwf	3969,c	;volatile
  2240                           
  2241                           ;hw.c: 8: TRISB=0;
  2242  00F5B8  0E00               	movlw	0
  2243  00F5BA  6E93               	movwf	3987,c	;volatile
  2244                           
  2245                           ;hw.c: 9: TRISD=0xF0;
  2246  00F5BC  0EF0               	movlw	240
  2247  00F5BE  6E95               	movwf	3989,c	;volatile
  2248                           
  2249                           ;hw.c: 10: ANSEL=0XE0;
  2250  00F5C0  0EE0               	movlw	224
  2251  00F5C2  6E7E               	movwf	3966,c	;volatile
  2252                           
  2253                           ;hw.c: 11: TRISA=0XFF;
  2254  00F5C4  6892               	setf	3986,c	;volatile
  2255  00F5C6  0012               	return		;funcret
  2256  00F5C8                     __end_of_set_leds:
  2257                           	opt stack 0
  2258                           tblptru	equ	0xFF8
  2259                           tblptrh	equ	0xFF7
  2260                           tblptrl	equ	0xFF6
  2261                           tablat	equ	0xFF5
  2262                           postinc0	equ	0xFEE
  2263                           wreg	equ	0xFE8
  2264                           postdec1	equ	0xFE5
  2265                           fsr1l	equ	0xFE1
  2266                           indf2	equ	0xFDF
  2267                           postinc2	equ	0xFDE
  2268                           fsr2h	equ	0xFDA
  2269                           fsr2l	equ	0xFD9
  2270                           status	equ	0xFD8
  2271                           
  2272 ;; *************** function _set_adc *****************
  2273 ;; Defined at:
  2274 ;;		line 23 in file "adc.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;  x               1    wreg     unsigned char 
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;  x               1    0[COMRAM] unsigned char 
  2279 ;; Return value:  Size  Location     Type
  2280 ;;		None               void
  2281 ;; Registers used:
  2282 ;;		wreg
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2289 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2291 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2292 ;;Total ram usage:        1 bytes
  2293 ;; Hardware stack levels used:    1
  2294 ;; This function calls:
  2295 ;;		Nothing
  2296 ;; This function is called by:
  2297 ;;		_set_ph
  2298 ;; This function uses a non-reentrant model
  2299 ;;
  2300                           
  2301                           	psect	text13
  2302  00F548                     __ptext13:
  2303                           	opt stack 0
  2304  00F548                     _set_adc:
  2305                           	opt stack 29
  2306                           
  2307                           ;incstack = 0
  2308                           ;set_adc@x stored from wreg
  2309  00F548  6E4B               	movwf	set_adc@x,c
  2310                           
  2311                           ;adc.c: 24: ADCON0bits.ADON=x;
  2312  00F54A  B04B               	btfsc	set_adc@x,0,c
  2313  00F54C  D002               	bra	u135
  2314  00F54E  90C2               	bcf	4034,0,c	;volatile
  2315  00F550  D001               	bra	u136
  2316  00F552                     u135:
  2317  00F552  80C2               	bsf	4034,0,c	;volatile
  2318  00F554                     u136:
  2319  00F554  0012               	return		;funcret
  2320  00F556                     __end_of_set_adc:
  2321                           	opt stack 0
  2322                           tblptru	equ	0xFF8
  2323                           tblptrh	equ	0xFF7
  2324                           tblptrl	equ	0xFF6
  2325                           tablat	equ	0xFF5
  2326                           postinc0	equ	0xFEE
  2327                           wreg	equ	0xFE8
  2328                           postdec1	equ	0xFE5
  2329                           fsr1l	equ	0xFE1
  2330                           indf2	equ	0xFDF
  2331                           postinc2	equ	0xFDE
  2332                           fsr2h	equ	0xFDA
  2333                           fsr2l	equ	0xFD9
  2334                           status	equ	0xFD8
  2335                           
  2336 ;; *************** function _config_tx_aurt *****************
  2337 ;; Defined at:
  2338 ;;		line 3 in file "m_uart.c"
  2339 ;; Parameters:    Size  Location     Type
  2340 ;;		None
  2341 ;; Auto vars:     Size  Location     Type
  2342 ;;		None
  2343 ;; Return value:  Size  Location     Type
  2344 ;;		None               void
  2345 ;; Registers used:
  2346 ;;		wreg, status,2
  2347 ;; Tracked objects:
  2348 ;;		On entry : 0/0
  2349 ;;		On exit  : 0/0
  2350 ;;		Unchanged: 0/0
  2351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2356 ;;Total ram usage:        0 bytes
  2357 ;; Hardware stack levels used:    1
  2358 ;; This function calls:
  2359 ;;		Nothing
  2360 ;; This function is called by:
  2361 ;;		_set_ph
  2362 ;; This function uses a non-reentrant model
  2363 ;;
  2364                           
  2365                           	psect	text14
  2366  00F57C                     __ptext14:
  2367                           	opt stack 0
  2368  00F57C                     _config_tx_aurt:
  2369                           	opt stack 29
  2370                           
  2371                           ;m_uart.c: 5: SPBRGH=0x3;
  2372                           
  2373                           ;incstack = 0
  2374  00F57C  0E03               	movlw	3
  2375  00F57E  6EB0               	movwf	4016,c	;volatile
  2376                           
  2377                           ;m_uart.c: 7: SPBRG=0X40;
  2378  00F580  0E40               	movlw	64
  2379  00F582  6EAF               	movwf	4015,c	;volatile
  2380                           
  2381                           ;m_uart.c: 8: TXSTAbits.SYNC=0;
  2382  00F584  98AC               	bcf	4012,4,c	;volatile
  2383                           
  2384                           ;m_uart.c: 9: TXSTAbits.BRGH=1;
  2385  00F586  84AC               	bsf	4012,2,c	;volatile
  2386                           
  2387                           ;m_uart.c: 10: BAUDCONbits.BRG16=1;
  2388  00F588  86B8               	bsf	4024,3,c	;volatile
  2389                           
  2390                           ;m_uart.c: 11: TRISCbits.RC7=1;
  2391  00F58A  8E94               	bsf	3988,7,c	;volatile
  2392                           
  2393                           ;m_uart.c: 12: TRISCbits.RC6=1;
  2394  00F58C  8C94               	bsf	3988,6,c	;volatile
  2395                           
  2396                           ;m_uart.c: 13: RCSTAbits.SPEN=1;
  2397  00F58E  8EAB               	bsf	4011,7,c	;volatile
  2398                           
  2399                           ;m_uart.c: 14: RCSTAbits.RX9=0;
  2400  00F590  9CAB               	bcf	4011,6,c	;volatile
  2401  00F592  0012               	return		;funcret
  2402  00F594                     __end_of_config_tx_aurt:
  2403                           	opt stack 0
  2404                           tblptru	equ	0xFF8
  2405                           tblptrh	equ	0xFF7
  2406                           tblptrl	equ	0xFF6
  2407                           tablat	equ	0xFF5
  2408                           postinc0	equ	0xFEE
  2409                           wreg	equ	0xFE8
  2410                           postdec1	equ	0xFE5
  2411                           fsr1l	equ	0xFE1
  2412                           indf2	equ	0xFDF
  2413                           postinc2	equ	0xFDE
  2414                           fsr2h	equ	0xFDA
  2415                           fsr2l	equ	0xFD9
  2416                           status	equ	0xFD8
  2417                           
  2418 ;; *************** function _conf_adc *****************
  2419 ;; Defined at:
  2420 ;;		line 12 in file "adc.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;		None
  2423 ;; Auto vars:     Size  Location     Type
  2424 ;;		None
  2425 ;; Return value:  Size  Location     Type
  2426 ;;		None               void
  2427 ;; Registers used:
  2428 ;;		wreg, status,2
  2429 ;; Tracked objects:
  2430 ;;		On entry : 0/0
  2431 ;;		On exit  : 0/0
  2432 ;;		Unchanged: 0/0
  2433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2438 ;;Total ram usage:        0 bytes
  2439 ;; Hardware stack levels used:    1
  2440 ;; This function calls:
  2441 ;;		Nothing
  2442 ;; This function is called by:
  2443 ;;		_set_ph
  2444 ;; This function uses a non-reentrant model
  2445 ;;
  2446                           
  2447                           	psect	text15
  2448  00F5EA                     __ptext15:
  2449                           	opt stack 0
  2450  00F5EA                     _conf_adc:
  2451                           	opt stack 29
  2452                           
  2453                           ;adc.c: 13: TRISAbits.RA0=1;
  2454                           
  2455                           ;incstack = 0
  2456  00F5EA  8092               	bsf	3986,0,c	;volatile
  2457                           
  2458                           ;adc.c: 14: ANSELbits.ANS0=1;
  2459  00F5EC  807E               	bsf	3966,0,c	;volatile
  2460                           
  2461                           ;adc.c: 15: ADCON2bits.ADCS=2;
  2462  00F5EE  50C0               	movf	4032,w,c	;volatile
  2463  00F5F0  0BF8               	andlw	-8
  2464  00F5F2  0902               	iorlw	2
  2465  00F5F4  6EC0               	movwf	4032,c	;volatile
  2466                           
  2467                           ;adc.c: 16: ADCON2bits.ACQT=2;
  2468  00F5F6  50C0               	movf	4032,w,c	;volatile
  2469  00F5F8  0BC7               	andlw	-57
  2470  00F5FA  0910               	iorlw	16
  2471  00F5FC  6EC0               	movwf	4032,c	;volatile
  2472                           
  2473                           ;adc.c: 17: ADCON1=0;
  2474  00F5FE  0E00               	movlw	0
  2475  00F600  6EC1               	movwf	4033,c	;volatile
  2476                           
  2477                           ;adc.c: 18: ADCON0bits.CHS=0;
  2478  00F602  94C2               	bcf	4034,2,c	;volatile
  2479  00F604  96C2               	bcf	4034,3,c	;volatile
  2480  00F606  98C2               	bcf	4034,4,c	;volatile
  2481  00F608  9AC2               	bcf	4034,5,c	;volatile
  2482                           
  2483                           ;adc.c: 19: ADCON2bits.ADFM=1;;
  2484  00F60A  8EC0               	bsf	4032,7,c	;volatile
  2485  00F60C  0012               	return		;funcret
  2486  00F60E                     __end_of_conf_adc:
  2487                           	opt stack 0
  2488                           tblptru	equ	0xFF8
  2489                           tblptrh	equ	0xFF7
  2490                           tblptrl	equ	0xFF6
  2491                           tablat	equ	0xFF5
  2492                           postinc0	equ	0xFEE
  2493                           wreg	equ	0xFE8
  2494                           postdec1	equ	0xFE5
  2495                           fsr1l	equ	0xFE1
  2496                           indf2	equ	0xFDF
  2497                           postinc2	equ	0xFDE
  2498                           fsr2h	equ	0xFDA
  2499                           fsr2l	equ	0xFD9
  2500                           status	equ	0xFD8
  2501                           
  2502 ;; *************** function _activacion_tx *****************
  2503 ;; Defined at:
  2504 ;;		line 20 in file "m_uart.c"
  2505 ;; Parameters:    Size  Location     Type
  2506 ;;  x               1    wreg     unsigned char 
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;  x               1    0[COMRAM] unsigned char 
  2509 ;; Return value:  Size  Location     Type
  2510 ;;		None               void
  2511 ;; Registers used:
  2512 ;;		wreg
  2513 ;; Tracked objects:
  2514 ;;		On entry : 0/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2519 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2521 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2522 ;;Total ram usage:        1 bytes
  2523 ;; Hardware stack levels used:    1
  2524 ;; This function calls:
  2525 ;;		Nothing
  2526 ;; This function is called by:
  2527 ;;		_set_ph
  2528 ;; This function uses a non-reentrant model
  2529 ;;
  2530                           
  2531                           	psect	text16
  2532  00F53A                     __ptext16:
  2533                           	opt stack 0
  2534  00F53A                     _activacion_tx:
  2535                           	opt stack 29
  2536                           
  2537                           ;incstack = 0
  2538                           ;activacion_tx@x stored from wreg
  2539  00F53A  6E4B               	movwf	activacion_tx@x,c
  2540                           
  2541                           ;m_uart.c: 21: TXSTAbits.TXEN=x;
  2542  00F53C  B04B               	btfsc	activacion_tx@x,0,c
  2543  00F53E  D002               	bra	u145
  2544  00F540  9AAC               	bcf	4012,5,c	;volatile
  2545  00F542  D001               	bra	u146
  2546  00F544                     u145:
  2547  00F544  8AAC               	bsf	4012,5,c	;volatile
  2548  00F546                     u146:
  2549  00F546  0012               	return		;funcret
  2550  00F548                     __end_of_activacion_tx:
  2551                           	opt stack 0
  2552                           tblptru	equ	0xFF8
  2553                           tblptrh	equ	0xFF7
  2554                           tblptrl	equ	0xFF6
  2555                           tablat	equ	0xFF5
  2556                           postinc0	equ	0xFEE
  2557                           wreg	equ	0xFE8
  2558                           postdec1	equ	0xFE5
  2559                           fsr1l	equ	0xFE1
  2560                           indf2	equ	0xFDF
  2561                           postinc2	equ	0xFDE
  2562                           fsr2h	equ	0xFDA
  2563                           fsr2l	equ	0xFD9
  2564                           status	equ	0xFD8
  2565                           
  2566 ;; *************** function _activacion_rx *****************
  2567 ;; Defined at:
  2568 ;;		line 24 in file "m_uart.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;  x               1    wreg     unsigned char 
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;  x               1    0[COMRAM] unsigned char 
  2573 ;; Return value:  Size  Location     Type
  2574 ;;		None               void
  2575 ;; Registers used:
  2576 ;;		wreg
  2577 ;; Tracked objects:
  2578 ;;		On entry : 0/0
  2579 ;;		On exit  : 0/0
  2580 ;;		Unchanged: 0/0
  2581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2583 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2585 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2586 ;;Total ram usage:        1 bytes
  2587 ;; Hardware stack levels used:    1
  2588 ;; This function calls:
  2589 ;;		Nothing
  2590 ;; This function is called by:
  2591 ;;		_set_ph
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594                           
  2595                           	psect	text17
  2596  00F52C                     __ptext17:
  2597                           	opt stack 0
  2598  00F52C                     _activacion_rx:
  2599                           	opt stack 29
  2600                           
  2601                           ;incstack = 0
  2602                           ;activacion_rx@x stored from wreg
  2603  00F52C  6E4B               	movwf	activacion_rx@x,c
  2604                           
  2605                           ;m_uart.c: 25: RCSTAbits.CREN=x;
  2606  00F52E  B04B               	btfsc	activacion_rx@x,0,c
  2607  00F530  D002               	bra	u155
  2608  00F532  98AB               	bcf	4011,4,c	;volatile
  2609  00F534  D001               	bra	u156
  2610  00F536                     u155:
  2611  00F536  88AB               	bsf	4011,4,c	;volatile
  2612  00F538                     u156:
  2613  00F538  0012               	return		;funcret
  2614  00F53A                     __end_of_activacion_rx:
  2615                           	opt stack 0
  2616                           tblptru	equ	0xFF8
  2617                           tblptrh	equ	0xFF7
  2618                           tblptrl	equ	0xFF6
  2619                           tablat	equ	0xFF5
  2620                           postinc0	equ	0xFEE
  2621                           wreg	equ	0xFE8
  2622                           postdec1	equ	0xFE5
  2623                           fsr1l	equ	0xFE1
  2624                           indf2	equ	0xFDF
  2625                           postinc2	equ	0xFDE
  2626                           fsr2h	equ	0xFDA
  2627                           fsr2l	equ	0xFD9
  2628                           status	equ	0xFD8
  2629                           
  2630 ;; *************** function _set_periodo *****************
  2631 ;; Defined at:
  2632 ;;		line 160 in file "main.c"
  2633 ;; Parameters:    Size  Location     Type
  2634 ;;  x               2    4[COMRAM] int 
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;		None
  2637 ;; Return value:  Size  Location     Type
  2638 ;;		None               void
  2639 ;; Registers used:
  2640 ;;		wreg, status,2, status,0
  2641 ;; Tracked objects:
  2642 ;;		On entry : 0/0
  2643 ;;		On exit  : 0/0
  2644 ;;		Unchanged: 0/0
  2645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2646 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2649 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2650 ;;Total ram usage:        2 bytes
  2651 ;; Hardware stack levels used:    1
  2652 ;; This function calls:
  2653 ;;		Nothing
  2654 ;; This function is called by:
  2655 ;;		_main
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659                           	psect	text18
  2660  00F966                     __ptext18:
  2661                           	opt stack 0
  2662  00F966                     _set_periodo:
  2663                           	opt stack 30
  2664                           
  2665                           ;main.c: 161: if (x<=200)
  2666                           
  2667                           ;incstack = 0
  2668  00F966  BE50               	btfsc	set_periodo@x+1,7,c
  2669  00F968  D006               	goto	l1502
  2670  00F96A  5050               	movf	set_periodo@x+1,w,c
  2671  00F96C  E107               	bnz	l1504
  2672  00F96E  0EC9               	movlw	201
  2673  00F970  5C4F               	subwf	set_periodo@x,w,c
  2674  00F972  B0D8               	btfsc	status,0,c
  2675  00F974  D003               	goto	l1504
  2676  00F976                     l1502:
  2677                           
  2678                           ;main.c: 162: periodo=1;
  2679  00F976  0E01               	movlw	1
  2680  00F978  6E32               	movwf	_periodo,c
  2681  00F97A  0012               	return	
  2682  00F97C                     l1504:
  2683                           
  2684                           ;main.c: 163: else if (x>=201 && x<=500)
  2685  00F97C  BE50               	btfsc	set_periodo@x+1,7,c
  2686  00F97E  D011               	goto	l1510
  2687  00F980  5050               	movf	set_periodo@x+1,w,c
  2688  00F982  E104               	bnz	u650
  2689  00F984  0EC9               	movlw	201
  2690  00F986  5C4F               	subwf	set_periodo@x,w,c
  2691  00F988  A0D8               	btfss	status,0,c
  2692  00F98A  D00B               	goto	l1510
  2693  00F98C                     u650:
  2694  00F98C  BE50               	btfsc	set_periodo@x+1,7,c
  2695  00F98E  D006               	goto	l1508
  2696  00F990  0EF5               	movlw	245
  2697  00F992  5C4F               	subwf	set_periodo@x,w,c
  2698  00F994  0E01               	movlw	1
  2699  00F996  5850               	subwfb	set_periodo@x+1,w,c
  2700  00F998  B0D8               	btfsc	status,0,c
  2701  00F99A  D003               	goto	l1510
  2702  00F99C                     l1508:
  2703                           
  2704                           ;main.c: 164: periodo=5;
  2705  00F99C  0E05               	movlw	5
  2706  00F99E  6E32               	movwf	_periodo,c
  2707  00F9A0  0012               	return	
  2708  00F9A2                     l1510:
  2709                           
  2710                           ;main.c: 165: else if (x>=501 && x<=700)
  2711  00F9A2  BE50               	btfsc	set_periodo@x+1,7,c
  2712  00F9A4  D011               	goto	l1516
  2713  00F9A6  0EF5               	movlw	245
  2714  00F9A8  5C4F               	subwf	set_periodo@x,w,c
  2715  00F9AA  0E01               	movlw	1
  2716  00F9AC  5850               	subwfb	set_periodo@x+1,w,c
  2717  00F9AE  A0D8               	btfss	status,0,c
  2718  00F9B0  D00B               	goto	l1516
  2719  00F9B2  BE50               	btfsc	set_periodo@x+1,7,c
  2720  00F9B4  D006               	goto	l1514
  2721  00F9B6  0EBD               	movlw	189
  2722  00F9B8  5C4F               	subwf	set_periodo@x,w,c
  2723  00F9BA  0E02               	movlw	2
  2724  00F9BC  5850               	subwfb	set_periodo@x+1,w,c
  2725  00F9BE  B0D8               	btfsc	status,0,c
  2726  00F9C0  D003               	goto	l1516
  2727  00F9C2                     l1514:
  2728                           
  2729                           ;main.c: 166: periodo=10;
  2730  00F9C2  0E0A               	movlw	10
  2731  00F9C4  6E32               	movwf	_periodo,c
  2732  00F9C6  0012               	return	
  2733  00F9C8                     l1516:
  2734                           
  2735                           ;main.c: 167: else if (x>=701 && x<=900)
  2736  00F9C8  BE50               	btfsc	set_periodo@x+1,7,c
  2737  00F9CA  D011               	goto	l1522
  2738  00F9CC  0EBD               	movlw	189
  2739  00F9CE  5C4F               	subwf	set_periodo@x,w,c
  2740  00F9D0  0E02               	movlw	2
  2741  00F9D2  5850               	subwfb	set_periodo@x+1,w,c
  2742  00F9D4  A0D8               	btfss	status,0,c
  2743  00F9D6  D00B               	goto	l1522
  2744  00F9D8  BE50               	btfsc	set_periodo@x+1,7,c
  2745  00F9DA  D006               	goto	l1520
  2746  00F9DC  0E85               	movlw	133
  2747  00F9DE  5C4F               	subwf	set_periodo@x,w,c
  2748  00F9E0  0E03               	movlw	3
  2749  00F9E2  5850               	subwfb	set_periodo@x+1,w,c
  2750  00F9E4  B0D8               	btfsc	status,0,c
  2751  00F9E6  D003               	goto	l1522
  2752  00F9E8                     l1520:
  2753                           
  2754                           ;main.c: 168: periodo=15;
  2755  00F9E8  0E0F               	movlw	15
  2756  00F9EA  6E32               	movwf	_periodo,c
  2757  00F9EC  0012               	return	
  2758  00F9EE                     l1522:
  2759                           
  2760                           ;main.c: 169: else if (x>=901 && x<=1120)
  2761  00F9EE  BE50               	btfsc	set_periodo@x+1,7,c
  2762  00F9F0  0012               	return	
  2763  00F9F2  0E85               	movlw	133
  2764  00F9F4  5C4F               	subwf	set_periodo@x,w,c
  2765  00F9F6  0E03               	movlw	3
  2766  00F9F8  5850               	subwfb	set_periodo@x+1,w,c
  2767  00F9FA  A0D8               	btfss	status,0,c
  2768  00F9FC  0012               	return	
  2769  00F9FE  BE50               	btfsc	set_periodo@x+1,7,c
  2770  00FA00  D006               	goto	l1526
  2771  00FA02  0E61               	movlw	97
  2772  00FA04  5C4F               	subwf	set_periodo@x,w,c
  2773  00FA06  0E04               	movlw	4
  2774  00FA08  5850               	subwfb	set_periodo@x+1,w,c
  2775  00FA0A  B0D8               	btfsc	status,0,c
  2776  00FA0C  0012               	return	
  2777  00FA0E                     l1526:
  2778                           
  2779                           ;main.c: 170: periodo=20;
  2780  00FA0E  0E14               	movlw	20
  2781  00FA10  6E32               	movwf	_periodo,c
  2782  00FA12  0012               	return	
  2783  00FA14                     __end_of_set_periodo:
  2784                           	opt stack 0
  2785                           tblptru	equ	0xFF8
  2786                           tblptrh	equ	0xFF7
  2787                           tblptrl	equ	0xFF6
  2788                           tablat	equ	0xFF5
  2789                           postinc0	equ	0xFEE
  2790                           wreg	equ	0xFE8
  2791                           postdec1	equ	0xFE5
  2792                           fsr1l	equ	0xFE1
  2793                           indf2	equ	0xFDF
  2794                           postinc2	equ	0xFDE
  2795                           fsr2h	equ	0xFDA
  2796                           fsr2l	equ	0xFD9
  2797                           status	equ	0xFD8
  2798                           
  2799 ;; *************** function _set_comandos *****************
  2800 ;; Defined at:
  2801 ;;		line 173 in file "main.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;  c               1    wreg     unsigned char 
  2804 ;; Auto vars:     Size  Location     Type
  2805 ;;  c               1    0[COMRAM] unsigned char 
  2806 ;;  d               1    1[COMRAM] unsigned char 
  2807 ;; Return value:  Size  Location     Type
  2808 ;;                  1    wreg      unsigned char 
  2809 ;; Registers used:
  2810 ;;		wreg, status,2, status,0
  2811 ;; Tracked objects:
  2812 ;;		On entry : 0/0
  2813 ;;		On exit  : 0/0
  2814 ;;		Unchanged: 0/0
  2815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2817 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2819 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2820 ;;Total ram usage:        2 bytes
  2821 ;; Hardware stack levels used:    1
  2822 ;; This function calls:
  2823 ;;		Nothing
  2824 ;; This function is called by:
  2825 ;;		_main
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829                           	psect	text19
  2830  00F816                     __ptext19:
  2831                           	opt stack 0
  2832  00F816                     _set_comandos:
  2833                           	opt stack 30
  2834                           
  2835                           ;incstack = 0
  2836                           ;set_comandos@c stored from wreg
  2837  00F816  6E4B               	movwf	set_comandos@c,c
  2838                           
  2839                           ;main.c: 174: unsigned char d=0;
  2840  00F818  0E00               	movlw	0
  2841  00F81A  6E4C               	movwf	set_comandos@d,c
  2842                           
  2843                           ;main.c: 175: switch (c){
  2844  00F81C  D013               	goto	l1150
  2845  00F81E                     l1134:
  2846                           
  2847                           ;main.c: 177: sec=0;
  2848  00F81E  0E00               	movlw	0
  2849  00F820  D005               	goto	L3
  2850  00F822                     l1136:
  2851                           
  2852                           ;main.c: 181: sec=1;
  2853  00F822  0E01               	movlw	1
  2854  00F824  D003               	goto	L3
  2855  00F826                     l1138:
  2856                           
  2857                           ;main.c: 185: sec=2;
  2858  00F826  0E02               	movlw	2
  2859  00F828  D001               	goto	L3
  2860  00F82A                     l1140:
  2861                           
  2862                           ;main.c: 189: sec=3;
  2863  00F82A  0E03               	movlw	3
  2864  00F82C                     L3:
  2865  00F82C  6E48               	movwf	_sec,c
  2866  00F82E  D002               	goto	L4
  2867  00F830                     l1142:
  2868                           
  2869                           ;main.c: 193: x=0;
  2870  00F830  0E00               	movlw	0
  2871  00F832  D004               	goto	L5
  2872  00F834                     L4:
  2873                           
  2874                           ;main.c: 194: d=1;
  2875  00F834  0E01               	movlw	1
  2876  00F836  6E4C               	movwf	set_comandos@d,c
  2877                           
  2878                           ;main.c: 195: break;
  2879  00F838  D019               	goto	l144
  2880  00F83A                     l1144:
  2881                           
  2882                           ;main.c: 197: x=1;
  2883  00F83A  0E01               	movlw	1
  2884  00F83C                     L5:
  2885  00F83C  6E4A               	movwf	_x,c
  2886  00F83E  D7FA               	goto	L4
  2887  00F840                     l1146:
  2888                           
  2889                           ;main.c: 201: d=0;
  2890  00F840  0E00               	movlw	0
  2891  00F842  D7F9               	goto	L6
  2892  00F844                     l1150:
  2893  00F844  504B               	movf	set_comandos@c,w,c
  2894                           
  2895                           ; Switch size 1, requested type "space"
  2896                           ; Number of cases is 6, Range of values is 108 to 118
  2897                           ; switch strategies available:
  2898                           ; Name         Instructions Cycles
  2899                           ; simple_byte           19    10 (average)
  2900                           ;	Chosen strategy is simple_byte
  2901  00F846  0A6C               	xorlw	108	; case 108
  2902  00F848  B4D8               	btfsc	status,2,c
  2903  00F84A  D7EB               	goto	l1136
  2904  00F84C  0A02               	xorlw	2	; case 110
  2905  00F84E  B4D8               	btfsc	status,2,c
  2906  00F850  D7EF               	goto	l1142
  2907  00F852  0A1C               	xorlw	28	; case 114
  2908  00F854  B4D8               	btfsc	status,2,c
  2909  00F856  D7E3               	goto	l1134
  2910  00F858  0A01               	xorlw	1	; case 115
  2911  00F85A  B4D8               	btfsc	status,2,c
  2912  00F85C  D7E6               	goto	l1140
  2913  00F85E  0A07               	xorlw	7	; case 116
  2914  00F860  B4D8               	btfsc	status,2,c
  2915  00F862  D7EB               	goto	l1144
  2916  00F864  0A02               	xorlw	2	; case 118
  2917  00F866  B4D8               	btfsc	status,2,c
  2918  00F868  D7DE               	goto	l1138
  2919  00F86A  D7EA               	goto	l1146
  2920  00F86C                     l144:
  2921                           
  2922                           ;main.c: 204: return d;
  2923  00F86C  504C               	movf	set_comandos@d,w,c
  2924  00F86E  0012               	return		;funcret
  2925  00F870                     __end_of_set_comandos:
  2926                           	opt stack 0
  2927                           tblptru	equ	0xFF8
  2928                           tblptrh	equ	0xFF7
  2929                           tblptrl	equ	0xFF6
  2930                           tablat	equ	0xFF5
  2931                           postinc0	equ	0xFEE
  2932                           wreg	equ	0xFE8
  2933                           postdec1	equ	0xFE5
  2934                           fsr1l	equ	0xFE1
  2935                           indf2	equ	0xFDF
  2936                           postinc2	equ	0xFDE
  2937                           fsr2h	equ	0xFDA
  2938                           fsr2l	equ	0xFD9
  2939                           status	equ	0xFD8
  2940                           
  2941 ;; *************** function _read_d *****************
  2942 ;; Defined at:
  2943 ;;		line 45 in file "m_uart.c"
  2944 ;; Parameters:    Size  Location     Type
  2945 ;;		None
  2946 ;; Auto vars:     Size  Location     Type
  2947 ;;		None
  2948 ;; Return value:  Size  Location     Type
  2949 ;;                  2    0[COMRAM] int 
  2950 ;; Registers used:
  2951 ;;		wreg, status,2
  2952 ;; Tracked objects:
  2953 ;;		On entry : 0/0
  2954 ;;		On exit  : 0/0
  2955 ;;		Unchanged: 0/0
  2956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2957 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2960 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2961 ;;Total ram usage:        2 bytes
  2962 ;; Hardware stack levels used:    1
  2963 ;; This function calls:
  2964 ;;		Nothing
  2965 ;; This function is called by:
  2966 ;;		_main
  2967 ;; This function uses a non-reentrant model
  2968 ;;
  2969                           
  2970                           	psect	text20
  2971  00F566                     __ptext20:
  2972                           	opt stack 0
  2973  00F566                     _read_d:
  2974                           	opt stack 30
  2975                           
  2976                           ;m_uart.c: 46: if (PIR1bits.RCIF==1)
  2977                           
  2978                           ;incstack = 0
  2979  00F566  AA9E               	btfss	3998,5,c	;volatile
  2980  00F568  D004               	goto	l1646
  2981                           
  2982                           ;m_uart.c: 47: return RCREG;
  2983  00F56A  CFAE F04B          	movff	4014,?_read_d	;volatile
  2984  00F56E  6A4C               	clrf	?_read_d+1,c
  2985  00F570  0012               	return	
  2986  00F572                     l1646:
  2987                           
  2988                           ;m_uart.c: 48: else
  2989                           ;m_uart.c: 49: return 0;
  2990  00F572  0E00               	movlw	0
  2991  00F574  6E4C               	movwf	?_read_d+1,c
  2992  00F576  0E00               	movlw	0
  2993  00F578  6E4B               	movwf	?_read_d,c
  2994  00F57A  0012               	return	
  2995  00F57C                     __end_of_read_d:
  2996                           	opt stack 0
  2997                           tblptru	equ	0xFF8
  2998                           tblptrh	equ	0xFF7
  2999                           tblptrl	equ	0xFF6
  3000                           tablat	equ	0xFF5
  3001                           postinc0	equ	0xFEE
  3002                           wreg	equ	0xFE8
  3003                           postdec1	equ	0xFE5
  3004                           fsr1l	equ	0xFE1
  3005                           indf2	equ	0xFDF
  3006                           postinc2	equ	0xFDE
  3007                           fsr2h	equ	0xFDA
  3008                           fsr2l	equ	0xFD9
  3009                           status	equ	0xFD8
  3010                           
  3011 ;; *************** function _pulsador_s2 *****************
  3012 ;; Defined at:
  3013 ;;		line 118 in file "main.c"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;		None
  3016 ;; Auto vars:     Size  Location     Type
  3017 ;;  n               1    0[COMRAM] unsigned char 
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  1    wreg      unsigned char 
  3020 ;; Registers used:
  3021 ;;		wreg, status,2, status,0
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3028 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3030 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3031 ;;Total ram usage:        1 bytes
  3032 ;; Hardware stack levels used:    1
  3033 ;; This function calls:
  3034 ;;		Nothing
  3035 ;; This function is called by:
  3036 ;;		_main
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           
  3040                           	psect	text21
  3041  00F636                     __ptext21:
  3042                           	opt stack 0
  3043  00F636                     _pulsador_s2:
  3044                           	opt stack 30
  3045                           
  3046                           ;main.c: 119: unsigned char n=0;
  3047                           
  3048                           ;incstack = 0
  3049  00F636  0E00               	movlw	0
  3050  00F638  6E4B               	movwf	pulsador_s2@n,c
  3051                           
  3052                           ;main.c: 120: switch (ss){
  3053  00F63A  D00D               	goto	l1082
  3054  00F63C                     l111:
  3055                           
  3056                           ;main.c: 122: if (PORTAbits.RA5==0){
  3057  00F63C  BA80               	btfsc	3968,5,c	;volatile
  3058  00F63E  D012               	goto	l1084
  3059                           
  3060                           ;main.c: 123: ss=1;
  3061  00F640  0E01               	movlw	1
  3062  00F642  6E49               	movwf	_ss,c
  3063                           
  3064                           ;main.c: 124: n=0;
  3065  00F644  0E00               	movlw	0
  3066  00F646  D005               	goto	L7
  3067  00F648                     l114:
  3068                           
  3069                           ;main.c: 128: if (PORTAbits.RA5==1){
  3070  00F648  AA80               	btfss	3968,5,c	;volatile
  3071  00F64A  D00C               	goto	l1084
  3072                           
  3073                           ;main.c: 129: ss=0;
  3074  00F64C  0E00               	movlw	0
  3075  00F64E  6E49               	movwf	_ss,c
  3076                           
  3077                           ;main.c: 130: n=1;
  3078  00F650  0E01               	movlw	1
  3079  00F652                     L7:
  3080  00F652  6E4B               	movwf	pulsador_s2@n,c
  3081                           
  3082                           ;main.c: 135: }
  3083                           
  3084                           ;main.c: 134: break;
  3085                           
  3086                           ;main.c: 133: default:
  3087                           
  3088                           ;main.c: 131: }
  3089                           ;main.c: 132: break;
  3090  00F654  D007               	goto	l1084
  3091  00F656                     l1082:
  3092  00F656  5049               	movf	_ss,w,c
  3093                           
  3094                           ; Switch size 1, requested type "space"
  3095                           ; Number of cases is 2, Range of values is 0 to 1
  3096                           ; switch strategies available:
  3097                           ; Name         Instructions Cycles
  3098                           ; simple_byte            7     4 (average)
  3099                           ;	Chosen strategy is simple_byte
  3100  00F658  0A00               	xorlw	0	; case 0
  3101  00F65A  B4D8               	btfsc	status,2,c
  3102  00F65C  D7EF               	goto	l111
  3103  00F65E  0A01               	xorlw	1	; case 1
  3104  00F660  B4D8               	btfsc	status,2,c
  3105  00F662  D7F2               	goto	l114
  3106  00F664                     l1084:
  3107                           
  3108                           ;main.c: 136: return n;
  3109  00F664  504B               	movf	pulsador_s2@n,w,c
  3110  00F666  0012               	return	
  3111  00F668                     __end_of_pulsador_s2:
  3112                           	opt stack 0
  3113                           tblptru	equ	0xFF8
  3114                           tblptrh	equ	0xFF7
  3115                           tblptrl	equ	0xFF6
  3116                           tablat	equ	0xFF5
  3117                           postinc0	equ	0xFEE
  3118                           wreg	equ	0xFE8
  3119                           postdec1	equ	0xFE5
  3120                           fsr1l	equ	0xFE1
  3121                           indf2	equ	0xFDF
  3122                           postinc2	equ	0xFDE
  3123                           fsr2h	equ	0xFDA
  3124                           fsr2l	equ	0xFD9
  3125                           status	equ	0xFD8
  3126                           
  3127 ;; *************** function _flag_timer_0 *****************
  3128 ;; Defined at:
  3129 ;;		line 21 in file "timer.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;		None
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;		None
  3134 ;; Return value:  Size  Location     Type
  3135 ;;                  2    2[COMRAM] int 
  3136 ;; Registers used:
  3137 ;;		wreg, status,2, cstack
  3138 ;; Tracked objects:
  3139 ;;		On entry : 0/0
  3140 ;;		On exit  : 0/0
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3143 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3146 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3147 ;;Total ram usage:        2 bytes
  3148 ;; Hardware stack levels used:    1
  3149 ;; Hardware stack levels required when called:    1
  3150 ;; This function calls:
  3151 ;;		_timer_0_set
  3152 ;;		_timer_0_star
  3153 ;; This function is called by:
  3154 ;;		_main
  3155 ;; This function uses a non-reentrant model
  3156 ;;
  3157                           
  3158                           	psect	text22
  3159  00F60E                     __ptext22:
  3160                           	opt stack 0
  3161  00F60E                     _flag_timer_0:
  3162                           	opt stack 29
  3163                           
  3164                           ;timer.c: 22: if(INTCONbits.T0IF){
  3165                           
  3166                           ;incstack = 0
  3167  00F60E  A4F2               	btfss	intcon,2,c	;volatile
  3168  00F610  D00D               	goto	l1554
  3169                           
  3170                           ;timer.c: 23: INTCONbits.T0IF=0;
  3171  00F612  94F2               	bcf	intcon,2,c	;volatile
  3172                           
  3173                           ;timer.c: 24: timer_0_set(0x19,0xD3);
  3174  00F614  0ED3               	movlw	211
  3175  00F616  6E4B               	movwf	timer_0_set@high,c
  3176  00F618  0E19               	movlw	25
  3177  00F61A  EC83  F07A         	call	_timer_0_set
  3178                           
  3179                           ;timer.c: 25: timer_0_star();
  3180  00F61E  EC7F  F07A         	call	_timer_0_star	;wreg free
  3181                           
  3182                           ;timer.c: 26: return 1;
  3183  00F622  0E00               	movlw	0
  3184  00F624  6E4E               	movwf	?_flag_timer_0+1,c
  3185  00F626  0E01               	movlw	1
  3186  00F628  6E4D               	movwf	?_flag_timer_0,c
  3187                           
  3188                           ;timer.c: 27: }
  3189  00F62A  0012               	return	
  3190  00F62C                     l1554:
  3191                           
  3192                           ;timer.c: 28: else
  3193                           ;timer.c: 29: return 0;
  3194  00F62C  0E00               	movlw	0
  3195  00F62E  6E4E               	movwf	?_flag_timer_0+1,c
  3196  00F630  0E00               	movlw	0
  3197  00F632  6E4D               	movwf	?_flag_timer_0,c
  3198  00F634  0012               	return	
  3199  00F636                     __end_of_flag_timer_0:
  3200                           	opt stack 0
  3201                           tblptru	equ	0xFF8
  3202                           tblptrh	equ	0xFF7
  3203                           tblptrl	equ	0xFF6
  3204                           tablat	equ	0xFF5
  3205                           intcon	equ	0xFF2
  3206                           postinc0	equ	0xFEE
  3207                           wreg	equ	0xFE8
  3208                           postdec1	equ	0xFE5
  3209                           fsr1l	equ	0xFE1
  3210                           indf2	equ	0xFDF
  3211                           postinc2	equ	0xFDE
  3212                           fsr2h	equ	0xFDA
  3213                           fsr2l	equ	0xFD9
  3214                           status	equ	0xFD8
  3215                           
  3216 ;; *************** function _timer_0_star *****************
  3217 ;; Defined at:
  3218 ;;		line 17 in file "timer.c"
  3219 ;; Parameters:    Size  Location     Type
  3220 ;;		None
  3221 ;; Auto vars:     Size  Location     Type
  3222 ;;		None
  3223 ;; Return value:  Size  Location     Type
  3224 ;;		None               void
  3225 ;; Registers used:
  3226 ;;		None
  3227 ;; Tracked objects:
  3228 ;;		On entry : 0/0
  3229 ;;		On exit  : 0/0
  3230 ;;		Unchanged: 0/0
  3231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3236 ;;Total ram usage:        0 bytes
  3237 ;; Hardware stack levels used:    1
  3238 ;; This function calls:
  3239 ;;		Nothing
  3240 ;; This function is called by:
  3241 ;;		_set_ph
  3242 ;;		_flag_timer_0
  3243 ;; This function uses a non-reentrant model
  3244 ;;
  3245                           
  3246                           	psect	text23
  3247  00F4FE                     __ptext23:
  3248                           	opt stack 0
  3249  00F4FE                     _timer_0_star:
  3250                           	opt stack 29
  3251                           
  3252                           ;timer.c: 18: T0CONbits.TMR0ON=1;
  3253                           
  3254                           ;incstack = 0
  3255  00F4FE  8ED5               	bsf	4053,7,c	;volatile
  3256  00F500  0012               	return		;funcret
  3257  00F502                     __end_of_timer_0_star:
  3258                           	opt stack 0
  3259                           tblptru	equ	0xFF8
  3260                           tblptrh	equ	0xFF7
  3261                           tblptrl	equ	0xFF6
  3262                           tablat	equ	0xFF5
  3263                           intcon	equ	0xFF2
  3264                           postinc0	equ	0xFEE
  3265                           wreg	equ	0xFE8
  3266                           postdec1	equ	0xFE5
  3267                           fsr1l	equ	0xFE1
  3268                           indf2	equ	0xFDF
  3269                           postinc2	equ	0xFDE
  3270                           fsr2h	equ	0xFDA
  3271                           fsr2l	equ	0xFD9
  3272                           status	equ	0xFD8
  3273                           
  3274 ;; *************** function _timer_0_set *****************
  3275 ;; Defined at:
  3276 ;;		line 12 in file "timer.c"
  3277 ;; Parameters:    Size  Location     Type
  3278 ;;  low             1    wreg     unsigned char 
  3279 ;;  high            1    0[COMRAM] unsigned char 
  3280 ;; Auto vars:     Size  Location     Type
  3281 ;;  low             1    1[COMRAM] unsigned char 
  3282 ;; Return value:  Size  Location     Type
  3283 ;;		None               void
  3284 ;; Registers used:
  3285 ;;		wreg
  3286 ;; Tracked objects:
  3287 ;;		On entry : 0/0
  3288 ;;		On exit  : 0/0
  3289 ;;		Unchanged: 0/0
  3290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3291 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3292 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3294 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3295 ;;Total ram usage:        2 bytes
  3296 ;; Hardware stack levels used:    1
  3297 ;; This function calls:
  3298 ;;		Nothing
  3299 ;; This function is called by:
  3300 ;;		_set_ph
  3301 ;;		_flag_timer_0
  3302 ;; This function uses a non-reentrant model
  3303 ;;
  3304                           
  3305                           	psect	text24
  3306  00F506                     __ptext24:
  3307                           	opt stack 0
  3308  00F506                     _timer_0_set:
  3309                           	opt stack 29
  3310                           
  3311                           ;incstack = 0
  3312                           ;timer_0_set@low stored from wreg
  3313  00F506  6E4C               	movwf	timer_0_set@low,c
  3314                           
  3315                           ;timer.c: 13: TMR0H=high;
  3316  00F508  C04B  FFD7         	movff	timer_0_set@high,4055	;volatile
  3317                           
  3318                           ;timer.c: 14: TMR0L=low;
  3319  00F50C  C04C  FFD6         	movff	timer_0_set@low,4054	;volatile
  3320  00F510  0012               	return		;funcret
  3321  00F512                     __end_of_timer_0_set:
  3322                           	opt stack 0
  3323                           tblptru	equ	0xFF8
  3324                           tblptrh	equ	0xFF7
  3325                           tblptrl	equ	0xFF6
  3326                           tablat	equ	0xFF5
  3327                           intcon	equ	0xFF2
  3328                           postinc0	equ	0xFEE
  3329                           wreg	equ	0xFE8
  3330                           postdec1	equ	0xFE5
  3331                           fsr1l	equ	0xFE1
  3332                           indf2	equ	0xFDF
  3333                           postinc2	equ	0xFDE
  3334                           fsr2h	equ	0xFDA
  3335                           fsr2l	equ	0xFD9
  3336                           status	equ	0xFD8
  3337                           
  3338 ;; *************** function _final_convercion *****************
  3339 ;; Defined at:
  3340 ;;		line 31 in file "adc.c"
  3341 ;; Parameters:    Size  Location     Type
  3342 ;;		None
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;		None
  3345 ;; Return value:  Size  Location     Type
  3346 ;;                  1    wreg      unsigned char 
  3347 ;; Registers used:
  3348 ;;		wreg
  3349 ;; Tracked objects:
  3350 ;;		On entry : 0/0
  3351 ;;		On exit  : 0/0
  3352 ;;		Unchanged: 0/0
  3353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3358 ;;Total ram usage:        0 bytes
  3359 ;; Hardware stack levels used:    1
  3360 ;; This function calls:
  3361 ;;		Nothing
  3362 ;; This function is called by:
  3363 ;;		_main
  3364 ;; This function uses a non-reentrant model
  3365 ;;
  3366                           
  3367                           	psect	text25
  3368  00F51E                     __ptext25:
  3369                           	opt stack 0
  3370  00F51E                     _final_convercion:
  3371                           	opt stack 30
  3372                           
  3373                           ;adc.c: 32: if (PIR1bits.ADIF){
  3374                           
  3375                           ;incstack = 0
  3376  00F51E  AC9E               	btfss	3998,6,c	;volatile
  3377  00F520  D003               	goto	l1286
  3378                           
  3379                           ;adc.c: 33: PIR1bits.ADIF=0;
  3380  00F522  9C9E               	bcf	3998,6,c	;volatile
  3381                           
  3382                           ;adc.c: 34: return 1;
  3383  00F524  0E01               	movlw	1
  3384                           
  3385                           ;adc.c: 35: }
  3386  00F526  0012               	return	
  3387  00F528                     l1286:
  3388                           
  3389                           ;adc.c: 36: else
  3390                           ;adc.c: 37: return 0;
  3391  00F528  0E00               	movlw	0
  3392  00F52A  0012               	return	
  3393  00F52C                     __end_of_final_convercion:
  3394                           	opt stack 0
  3395                           tblptru	equ	0xFF8
  3396                           tblptrh	equ	0xFF7
  3397                           tblptrl	equ	0xFF6
  3398                           tablat	equ	0xFF5
  3399                           intcon	equ	0xFF2
  3400                           postinc0	equ	0xFEE
  3401                           wreg	equ	0xFE8
  3402                           postdec1	equ	0xFE5
  3403                           fsr1l	equ	0xFE1
  3404                           indf2	equ	0xFDF
  3405                           postinc2	equ	0xFDE
  3406                           fsr2h	equ	0xFDA
  3407                           fsr2l	equ	0xFD9
  3408                           status	equ	0xFD8
  3409                           
  3410 ;; *************** function _dato_16 *****************
  3411 ;; Defined at:
  3412 ;;		line 46 in file "adc.c"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;		None
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;  y               2    2[COMRAM] unsigned int 
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  2    0[COMRAM] int 
  3419 ;; Registers used:
  3420 ;;		wreg, status,2, status,0
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3426 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3427 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3429 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3430 ;;Total ram usage:        4 bytes
  3431 ;; Hardware stack levels used:    1
  3432 ;; This function calls:
  3433 ;;		Nothing
  3434 ;; This function is called by:
  3435 ;;		_main
  3436 ;; This function uses a non-reentrant model
  3437 ;;
  3438                           
  3439                           	psect	text26
  3440  00F5C8                     __ptext26:
  3441                           	opt stack 0
  3442  00F5C8                     _dato_16:
  3443                           	opt stack 30
  3444                           
  3445                           ;adc.c: 47: unsigned int y=0;
  3446                           
  3447                           ;incstack = 0
  3448  00F5C8  0E00               	movlw	0
  3449  00F5CA  6E4E               	movwf	dato_16@y+1,c
  3450  00F5CC  0E00               	movlw	0
  3451  00F5CE  6E4D               	movwf	dato_16@y,c
  3452                           
  3453                           ;adc.c: 48: y=ADRESH;
  3454  00F5D0  CFC4 F04D          	movff	4036,dato_16@y	;volatile
  3455  00F5D4  6A4E               	clrf	dato_16@y+1,c
  3456                           
  3457                           ;adc.c: 49: y<<=8;
  3458  00F5D6  504D               	movf	dato_16@y,w,c
  3459  00F5D8  6E4E               	movwf	dato_16@y+1,c
  3460  00F5DA  6A4D               	clrf	dato_16@y,c
  3461                           
  3462                           ;adc.c: 50: y|=ADRESL;
  3463  00F5DC  50C3               	movf	4035,w,c	;volatile
  3464  00F5DE  124D               	iorwf	dato_16@y,f,c
  3465                           
  3466                           ;adc.c: 51: return y;
  3467  00F5E0  C04D  F04B         	movff	dato_16@y,?_dato_16
  3468  00F5E4  C04E  F04C         	movff	dato_16@y+1,?_dato_16+1
  3469  00F5E8  0012               	return	
  3470  00F5EA                     __end_of_dato_16:
  3471                           	opt stack 0
  3472  0000                     tblptru	equ	0xFF8
  3473                           tblptrh	equ	0xFF7
  3474                           tblptrl	equ	0xFF6
  3475                           tablat	equ	0xFF5
  3476                           intcon	equ	0xFF2
  3477                           postinc0	equ	0xFEE
  3478                           wreg	equ	0xFE8
  3479                           postdec1	equ	0xFE5
  3480                           fsr1l	equ	0xFE1
  3481                           indf2	equ	0xFDF
  3482                           postinc2	equ	0xFDE
  3483                           fsr2h	equ	0xFDA
  3484                           fsr2l	equ	0xFD9
  3485                           status	equ	0xFD8
  3486                           tblptru	equ	0xFF8
  3487                           tblptrh	equ	0xFF7
  3488                           tblptrl	equ	0xFF6
  3489                           tablat	equ	0xFF5
  3490                           intcon	equ	0xFF2
  3491                           postinc0	equ	0xFEE
  3492                           wreg	equ	0xFE8
  3493                           postdec1	equ	0xFE5
  3494                           fsr1l	equ	0xFE1
  3495                           indf2	equ	0xFDF
  3496                           postinc2	equ	0xFDE
  3497                           fsr2h	equ	0xFDA
  3498                           fsr2l	equ	0xFD9
  3499                           status	equ	0xFD8
  3500                           
  3501                           	psect	rparam
  3502  0000                     tblptru	equ	0xFF8
  3503                           tblptrh	equ	0xFF7
  3504                           tblptrl	equ	0xFF6
  3505                           tablat	equ	0xFF5
  3506                           intcon	equ	0xFF2
  3507                           postinc0	equ	0xFEE
  3508                           wreg	equ	0xFE8
  3509                           postdec1	equ	0xFE5
  3510                           fsr1l	equ	0xFE1
  3511                           indf2	equ	0xFDF
  3512                           postinc2	equ	0xFDE
  3513                           fsr2h	equ	0xFDA
  3514                           fsr2l	equ	0xFD9
  3515                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        206
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     17      91
    BANK0           160      0     154
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          239      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_set_periodo
    _transmitir->_trans_dato
    _set_secuencia->_vasculante
    _vasculante->_rotar_derecha
    _vasculante->_rotar_izquierda
    _rotar_izquierda->_port
    _rotar_derecha->_port
    _shit_raid->_port
    _set_ph->_timer_0_set
    _set_periodo->_dato_16
    _flag_timer_0->_timer_0_set

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11     6      5    1099
                                              6 COMRAM    11     6      5
                            _dato_16
                   _final_convercion
                       _flag_timer_0
                        _pulsador_s2
                             _read_d
                       _set_comandos
                        _set_periodo
                             _set_ph
                      _set_secuencia
                    _star_convercion
                         _transmitir
 ---------------------------------------------------------------------------------
 (1) _transmitir                                           2     2      0      22
                                              1 COMRAM     2     2      0
                         _trans_dato
 ---------------------------------------------------------------------------------
 (2) _trans_dato                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _star_convercion                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_secuencia                                        0     0      0     312
                      _rotar_derecha
                    _rotar_izquierda
                          _shit_raid
                         _vasculante
 ---------------------------------------------------------------------------------
 (2) _vasculante                                           1     1      0     148
                                              4 COMRAM     1     1      0
                      _rotar_derecha
                    _rotar_izquierda
 ---------------------------------------------------------------------------------
 (3) _rotar_izquierda                                      3     1      2      52
                                              1 COMRAM     3     1      2
                               _port
 ---------------------------------------------------------------------------------
 (3) _rotar_derecha                                        3     1      2      52
                                              1 COMRAM     3     1      2
                               _port
 ---------------------------------------------------------------------------------
 (2) _shit_raid                                            1     1      0      60
                                              1 COMRAM     1     1      0
                               _port
 ---------------------------------------------------------------------------------
 (4) _port                                                 1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _set_ph                                               0     0      0     175
                      _activacion_rx
                      _activacion_tx
                           _conf_adc
                     _config_tx_aurt
                            _set_adc
                           _set_leds
                       _timer_0_conf
                        _timer_0_set
                       _timer_0_star
 ---------------------------------------------------------------------------------
 (2) _timer_0_conf                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _set_leds                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _set_adc                                              1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _config_tx_aurt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _conf_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _activacion_tx                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _activacion_rx                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _set_periodo                                          2     0      2     241
                                              4 COMRAM     2     0      2
                            _dato_16 (ARG)
 ---------------------------------------------------------------------------------
 (1) _set_comandos                                         2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _read_d                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _pulsador_s2                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _flag_timer_0                                         2     0      2     130
                                              2 COMRAM     2     0      2
                        _timer_0_set
                       _timer_0_star
 ---------------------------------------------------------------------------------
 (2) _timer_0_star                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _timer_0_set                                          2     1      1     130
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _final_convercion                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dato_16                                              4     2      2      26
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dato_16
   _final_convercion
   _flag_timer_0
     _timer_0_set
     _timer_0_star
   _pulsador_s2
   _read_d
   _set_comandos
   _set_periodo
     _dato_16 (ARG)
   _set_ph
     _activacion_rx
     _activacion_tx
     _conf_adc
     _config_tx_aurt
     _set_adc
     _set_leds
     _timer_0_conf
     _timer_0_set
     _timer_0_star
   _set_secuencia
     _rotar_derecha
       _port
     _rotar_izquierda
       _port
     _shit_raid
       _port
     _vasculante
       _rotar_derecha
         _port
       _rotar_izquierda
         _port
   _star_convercion
   _transmitir
     _trans_dato

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EEE      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           EF      0       0      33        0.0%
BANK14              EF      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      9A       5       96.2%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      37        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     11      5B       1       95.8%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F5       6        0.0%
DATA                 0      0      F5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Dec  1 19:09:04 2016

                        _a 0031                          _d 0045                          _i 0043  
                        _x 004A                         _s1 0033                         _s2 0034  
                       _jj 0047                         _ss 0049                _pulsador_s2 F636  
             __CFG_CP0$OFF 000000               __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000  
             __CFG_CP3$OFF 000000                        l111 F63C                        l114 F648  
                      l144 F86C                        l325 F514                        l167 FAAE  
             __CFG_CPB$OFF 000000                        u135 F552                        u136 F554  
                      u145 F544                        u146 F546                        u155 F536  
                      u156 F538               __CFG_CPD$OFF 000000                        u650 F98C  
            _rotar_derecha F740                        _est 0041                        _sec 0048  
             __CFG_BORV$18 000000                        wreg 000FE8                main@flag_5s 0057  
             __CFG_LVP$OFF 000000                       l1010 F89E                       l1002 F884  
                     l1004 F88C                       l1018 F8B6                       l1140 F82A  
                     l1142 F830                       l1134 F81E                       l1150 F844  
                     l1144 F83A                       l1136 F822                       l1082 F656  
                     l1146 F840                       l1138 F826                       l1084 F664  
                     l1510 F9A2                       l1502 F976                       l1520 F9E8  
                     l1504 F97C                       l1600 FBF6                       l1522 F9EE  
                     l1514 F9C2                       l1426 F750                       l1610 FC3A  
                     l1516 F9C8                       l1508 F99C                       l1436 F76E  
                     l1428 F758                       l1620 FC7E                       l1286 F528  
                     l1526 FA0E                       l1446 F714                       l1470 F6EC  
                     l1606 FC22                       l1702 FA8A                       l1710 FA9E  
                     l1456 F730                       l1448 F71C                       l1616 FC66  
                     l1560 FAE6                       l1554 F62C                       l1490 F790  
                     l1626 FCAA                       l1570 FB2A                       l1634 FCC2  
                     l1706 FA96                       l1492 F798                       l1580 FB6E  
                     l1646 F572                       l1494 F79E                       l1486 F780  
                     l1590 FBB2                       l1566 FB12                       l1718 FAC8  
                     l1488 F788                       l1576 FB56                       l1498 F7A4  
                     l1586 FB9A                       l1690 FA64                       l1682 FA48  
                     l1674 FA30                       l1596 FBDE                       l1684 FA4C  
                     l1696 FA74                       _LATB 000F8A                       _LATD 000F8C  
             __CFG_PWRT$ON 000000                       _main FA14                       _msm1 001C  
                     _msm2 0082                       _msm3 0060                       _msm4 00C1  
                     _msm5 00A2                       _msm6 0001                       _msm7 00DE  
                     _port F594                       fsr1l 000FE1                       indf2 000FDF  
                     fsr2l 000FD9                       start 0002              __CFG_IESO$OFF 000000  
            __CFG_MCLRE$ON 000000               ___param_bank 000010                      ?_main 0051  
                    ?_port 004B                      _ANSEL 000F7E      __end_of_activacion_rx F53A  
    __end_of_activacion_tx F548             ?_rotar_derecha 004C                      _RCREG 000FAE  
                    _TMR0H 000FD7                      _TMR0L 000FD6                      _SPBRG 000FAF  
                    _PORTB 000F81                      _PORTD 000F83                      _TRISA 000F92  
                    _TRISB 000F93                      _TRISD 000F95            __end_of_dato_16 F5EA  
                    _TXREG 000FAD              __CFG_WRT0$OFF 000000              __CFG_WRT1$OFF 000000  
            __CFG_WRT2$OFF 000000              __CFG_WRT3$OFF 000000             __CFG_EBTR0$OFF 000000  
           __CFG_FCMEN$OFF 000000             __CFG_EBTR1$OFF 000000             __CFG_EBTR2$OFF 000000  
           __CFG_EBTR3$OFF 000000              __CFG_WRTB$OFF 000000              __CFG_WRTC$OFF 000000  
            __CFG_WRTD$OFF 000000             __CFG_EBTRB$OFF 000000               main@time_adc 0058  
             main@time_led 0059            __end_of_set_adc F556             __CFG_BOREN$OFF 000000  
                    tablat 000FF5           _final_convercion F51E                      port@c 004B  
                    status 000FD8            _star_convercion F502            __initialization F7C0  
             __end_of_main FAE4               __end_of_port F5AC                     ??_main 0056  
                   ??_port 004B              __activetblptr 000002              main@flag_read 005B  
     __end_of_flag_timer_0 F636                     _ADCON1 000FC1                     _ADRESH 000FC4  
                   _ADRESL 000FC3            _rotar_izquierda F704             __CFG_WDTEN$OFF 000000  
                   _SPBRGH 000FB0               pulsador_s2@n 004B             __CFG_XINST$OFF 000000  
         __end_of_conf_adc F60E               ?_set_periodo 004F                     _read_d F566  
                ??_dato_16 004D                     clear_0 F7C6            ??_rotar_derecha 004E  
                   _set_ph F668               ?_timer_0_set 004B              main@time_star 0056  
             __pdataCOMRAM 0001           __end_of_set_leds F5C8                  ??_set_adc 004B  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
          __CFG_HFOFST$OFF 000000    __end_of_star_convercion F506           ??_config_tx_aurt 004B  
          __CFG_FOSC$HSPLL 000000                 __accesstop 0060    __end_of__initialization F80C  
          __CFG_PBADEN$OFF 000000              ___rparam_used 000001             __pcstackCOMRAM 004B  
             __pidataBANK0 F8CC               ?_pulsador_s2 004B      __end_of_set_secuencia F7C0  
  __end_of_rotar_izquierda F740                    ?_read_d 004B   __end_of_final_convercion F52C  
                  ?_set_ph 004B         __size_of_shit_raid 005C      __size_of_flag_timer_0 0028  
                ?_conf_adc 004B           ?_star_convercion 004B              ?_set_comandos 004B  
                  __Hparam 0000                    __Lparam 0000                  ?_set_leds 004B  
             _flag_timer_0 F60E            __CFG_STVREN$OFF 000000                    _dato_16 F5C8  
     __size_of_set_periodo 00AE                    __pcinit F7C0            __size_of_read_d 0016  
                _ANSELbits 000F7E                    __ramtop 1000                    __ptext0 FA14  
                  __ptext1 FAE4                    __ptext2 F512                    __ptext3 F502  
                  __ptext4 F77E            __size_of_set_ph 0032                    __ptext5 F6CE  
                  __ptext6 F704                    __ptext7 F740                    __ptext8 F870  
                  __ptext9 F594                  _T0CONbits 000FD5       __size_of_timer_0_set 000C  
         ?_rotar_izquierda 004C                    _periodo 0032                    _set_adc F548  
            ?_timer_0_conf 004B                 ??_conf_adc 004B              ?_timer_0_star 004B  
     end_of_initialization F80C             ??_set_comandos 004B              __Lmediumconst 0000  
        __end_of_shit_raid F8CC     __size_of_activacion_rx 000E     __size_of_activacion_tx 000E  
               ??_set_leds 004B                  _RCSTAbits 000FAB                    postdec1 000FE5  
                  postinc0 000FEE                    postinc2 000FDE                 _vasculante F6CE  
                _PORTAbits 000F80       __size_of_pulsador_s2 0032                  _TRISAbits 000F92  
              vasculante@x 004F                  _TRISCbits 000F94             ??_timer_0_conf 004B  
           ??_timer_0_star 004B                 _trans_dato F512                 _transmitir FAE4  
                _TXSTAbits 000FAC               _conversion16 0035                _BAUDCONbits 000FB8  
            __pidataCOMRAM F69A             __end_of_read_d F57C      __end_of_rotar_derecha F77E  
           __end_of_set_ph F69A              _activacion_rx F52C              _activacion_tx F53A  
      start_initialization F7C0                trans_dato@x 004B            timer_0_set@high 004B  
              __pdataBANK0 0060           __CFG_LPT1OSC$OFF 000000                   ??_read_d 004D  
              ?_vasculante 004B                   ??_set_ph 004D          ?_final_convercion 004B  
           ?_activacion_rx 004B             ?_activacion_tx 004B       __end_of_set_comandos F870  
       ??_final_convercion 004B                __pbssCOMRAM 0035                ?_trans_dato 004B  
           rotar_derecha@x 004E                ?_transmitir 004B          __size_of_conf_adc 0024  
   __size_of_set_secuencia 0042          __CFG_CCP2MX$PORTC 000000    __size_of_config_tx_aurt 0018  
     __end_of_timer_0_conf F566       __end_of_timer_0_star F502          __size_of_set_leds 001C  
                 ?_dato_16 004B                   ?_set_adc 004B              set_comandos@c 004B  
            set_comandos@d 004C        __size_of_vasculante 0036                 shit_raid@g 004C  
 __size_of_star_convercion 0004                   _PIR1bits 000F9E                  _shit_raid F870  
         __CFG_WDTPS$32768 000000              ??_set_periodo 0051        __size_of_trans_dato 000C  
          ??_activacion_rx 004B            ??_activacion_tx 004B        __size_of_transmitir 021C  
            ??_timer_0_set 004C                 _ADCON0bits 000FC2                 _ADCON2bits 000FC0  
            _set_secuencia F77E           main@time_comando 005A                  copy_data0 F7E0  
                copy_data1 F800             activacion_rx@x 004B             activacion_tx@x 004B  
 __size_of_rotar_izquierda 003C                   __Hrparam 0000                   __Lrparam 0000  
               ?_shit_raid 004B             timer_0_set@low 004C         _inicio_transmision 0046  
    __size_of_set_comandos 005A              ??_pulsador_s2 004B           __size_of_dato_16 0022  
      __end_of_set_periodo FA14             ?_set_secuencia 004B        __end_of_timer_0_set F512  
         __size_of_set_adc 000E                   __ptext10 F668                   __ptext11 F556  
                 __ptext20 F566                   __ptext12 F5AC                   __ptext21 F636  
                 __ptext13 F548                   __ptext22 F60E                   __ptext14 F57C  
                 __ptext23 F4FE                   __ptext15 F5EA                   __ptext24 F506  
                 __ptext16 F53A                   __ptext25 F51E                   __ptext17 F52C  
                 __ptext26 F5C8                   __ptext18 F966                   __ptext19 F816  
                 _conf_adc F5EA                   dato_16@y 004D              __size_of_main 00D0  
            __size_of_port 0018      __size_of_timer_0_conf 0010               _set_comandos F816  
    __size_of_timer_0_star 0004                   _set_leds F5AC             _config_tx_aurt F57C  
         rotar_izquierda@x 004E                   main@argc 0051                   main@argv 0053  
             ??_vasculante 004F          ??_star_convercion 004B               set_periodo@x 004F  
               _INTCONbits 000FF2        __end_of_pulsador_s2 F668               ??_trans_dato 004B  
             _timer_0_conf F556               _timer_0_star F4FE               ??_transmitir 004C  
__size_of_final_convercion 000E         __end_of_vasculante F704                   set_adc@x 004B  
   __end_of_config_tx_aurt F594     __size_of_rotar_derecha 003E          ??_rotar_izquierda 004E  
              ??_shit_raid 004C              ?_flag_timer_0 004D                _set_periodo F966  
       __end_of_trans_dato F51E            ??_set_secuencia 0050         __end_of_transmitir FD00  
              _timer_0_set F506            ?_config_tx_aurt 004B             ??_flag_timer_0 004F  
