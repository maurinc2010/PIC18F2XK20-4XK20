

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Dec  3 14:02:51 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    43  0000                     
    44                           	psect	idataCOMRAM
    45  00F8B5                     __pidataCOMRAM:
    46                           	opt stack 0
    47                           
    48                           ;initializer for _msm1
    49  00F8B5  20                 	db	32
    50  00F8B6  20                 	db	32
    51  00F8B7  20                 	db	32
    52  00F8B8  20                 	db	32
    53  00F8B9  20                 	db	32
    54  00F8BA  20                 	db	32
    55  00F8BB  20                 	db	32
    56  00F8BC  4C                 	db	76
    57  00F8BD  69                 	db	105
    58  00F8BE  73                 	db	115
    59  00F8BF  74                 	db	116
    60  00F8C0  61                 	db	97
    61  00F8C1  20                 	db	32
    62  00F8C2  64                 	db	100
    63  00F8C3  65                 	db	101
    64  00F8C4  20                 	db	32
    65  00F8C5  63                 	db	99
    66  00F8C6  6F                 	db	111
    67  00F8C7  6D                 	db	109
    68  00F8C8  61                 	db	97
    69  00F8C9  6E                 	db	110
    70  00F8CA  64                 	db	100
    71  00F8CB  6F                 	db	111
    72  00F8CC  73                 	db	115
    73  00F8CD  20                 	db	32
    74  00F8CE  20                 	db	32
    75  00F8CF  20                 	db	32
    76  00F8D0  20                 	db	32
    77  00F8D1  20                 	db	32
    78  00F8D2  20                 	db	32
    79  00F8D3  20                 	db	32
    80  00F8D4  20                 	db	32
    81  00F8D5  20                 	db	32
    82  00F8D6  20                 	db	32
    83  00F8D7  0A                 	db	10
    84  00F8D8  0D                 	db	13
    85  00F8D9  00                 	db	0
    86                           
    87                           ;initializer for _a
    88  00F8DA  01                 	db	1
    89                           
    90                           ;initializer for _periodo
    91  00F8DB  01                 	db	1
    92                           
    93                           ;initializer for _s1
    94  00F8DC  01                 	db	1
    95                           
    96                           ;initializer for _s2
    97  00F8DD  80                 	db	128
    98                           
    99                           	psect	idataBANK0
   100  00FBB4                     __pidataBANK0:
   101                           	opt stack 0
   102                           
   103                           ;initializer for _msm3
   104  00FBB4  20                 	db	32
   105  00FBB5  52                 	db	82
   106  00FBB6  6F                 	db	111
   107  00FBB7  74                 	db	116
   108  00FBB8  61                 	db	97
   109  00FBB9  72                 	db	114
   110  00FBBA  20                 	db	32
   111  00FBBB  69                 	db	105
   112  00FBBC  7A                 	db	122
   113  00FBBD  71                 	db	113
   114  00FBBE  75                 	db	117
   115  00FBBF  69                 	db	105
   116  00FBC0  65                 	db	101
   117  00FBC1  72                 	db	114
   118  00FBC2  64                 	db	100
   119  00FBC3  61                 	db	97
   120  00FBC4  20                 	db	32
   121  00FBC5  70                 	db	112
   122  00FBC6  75                 	db	117
   123  00FBC7  6C                 	db	108
   124  00FBC8  73                 	db	115
   125  00FBC9  61                 	db	97
   126  00FBCA  72                 	db	114
   127  00FBCB  20                 	db	32
   128  00FBCC  74                 	db	116
   129  00FBCD  65                 	db	101
   130  00FBCE  63                 	db	99
   131  00FBCF  6C                 	db	108
   132  00FBD0  61                 	db	97
   133  00FBD1  3A                 	db	58
   134  00FBD2  20                 	db	32
   135  00FBD3  20                 	db	32
   136  00FBD4  20                 	db	32
   137  00FBD5  20                 	db	32
   138  00FBD6  6C                 	db	108
   139  00FBD7  20                 	db	32
   140  00FBD8  0A                 	db	10
   141  00FBD9  0D                 	db	13
   142  00FBDA  00                 	db	0
   143                           
   144                           ;initializer for _msm5
   145  00FBDB  20                 	db	32
   146  00FBDC  6B                 	db	107
   147  00FBDD  6E                 	db	110
   148  00FBDE  69                 	db	105
   149  00FBDF  67                 	db	103
   150  00FBE0  68                 	db	104
   151  00FBE1  74                 	db	116
   152  00FBE2  20                 	db	32
   153  00FBE3  72                 	db	114
   154  00FBE4  69                 	db	105
   155  00FBE5  64                 	db	100
   156  00FBE6  65                 	db	101
   157  00FBE7  72                 	db	114
   158  00FBE8  20                 	db	32
   159  00FBE9  70                 	db	112
   160  00FBEA  75                 	db	117
   161  00FBEB  6C                 	db	108
   162  00FBEC  73                 	db	115
   163  00FBED  61                 	db	97
   164  00FBEE  72                 	db	114
   165  00FBEF  20                 	db	32
   166  00FBF0  74                 	db	116
   167  00FBF1  65                 	db	101
   168  00FBF2  63                 	db	99
   169  00FBF3  6C                 	db	108
   170  00FBF4  61                 	db	97
   171  00FBF5  3A                 	db	58
   172  00FBF6  20                 	db	32
   173  00FBF7  20                 	db	32
   174  00FBF8  20                 	db	32
   175  00FBF9  20                 	db	32
   176  00FBFA  20                 	db	32
   177  00FBFB  20                 	db	32
   178  00FBFC  20                 	db	32
   179  00FBFD  73                 	db	115
   180  00FBFE  20                 	db	32
   181  00FBFF  0A                 	db	10
   182  00FC00  0D                 	db	13
   183  00FC01  00                 	db	0
   184                           
   185                           ;initializer for _msm6
   186  00FC02  20                 	db	32
   187  00FC03  52                 	db	82
   188  00FC04  6F                 	db	111
   189  00FC05  74                 	db	116
   190  00FC06  61                 	db	97
   191  00FC07  20                 	db	32
   192  00FC08  75                 	db	117
   193  00FC09  6E                 	db	110
   194  00FC0A  20                 	db	32
   195  00FC0B  75                 	db	117
   196  00FC0C  6E                 	db	110
   197  00FC0D  6F                 	db	111
   198  00FC0E  20                 	db	32
   199  00FC0F  70                 	db	112
   200  00FC10  72                 	db	114
   201  00FC11  65                 	db	101
   202  00FC12  73                 	db	115
   203  00FC13  69                 	db	105
   204  00FC14  6F                 	db	111
   205  00FC15  6E                 	db	110
   206  00FC16  61                 	db	97
   207  00FC17  72                 	db	114
   208  00FC18  3A                 	db	58
   209  00FC19  20                 	db	32
   210  00FC1A  20                 	db	32
   211  00FC1B  20                 	db	32
   212  00FC1C  20                 	db	32
   213  00FC1D  20                 	db	32
   214  00FC1E  20                 	db	32
   215  00FC1F  20                 	db	32
   216  00FC20  20                 	db	32
   217  00FC21  20                 	db	32
   218  00FC22  20                 	db	32
   219  00FC23  20                 	db	32
   220  00FC24  74                 	db	116
   221  00FC25  20                 	db	32
   222  00FC26  0A                 	db	10
   223  00FC27  0D                 	db	13
   224  00FC28  00                 	db	0
   225                           
   226                           ;initializer for _msm7
   227  00FC29  20                 	db	32
   228  00FC2A  52                 	db	82
   229  00FC2B  6F                 	db	111
   230  00FC2C  74                 	db	116
   231  00FC2D  61                 	db	97
   232  00FC2E  20                 	db	32
   233  00FC2F  75                 	db	117
   234  00FC30  6E                 	db	110
   235  00FC31  20                 	db	32
   236  00FC32  63                 	db	99
   237  00FC33  65                 	db	101
   238  00FC34  72                 	db	114
   239  00FC35  6F                 	db	111
   240  00FC36  20                 	db	32
   241  00FC37  70                 	db	112
   242  00FC38  72                 	db	114
   243  00FC39  65                 	db	101
   244  00FC3A  63                 	db	99
   245  00FC3B  69                 	db	105
   246  00FC3C  6F                 	db	111
   247  00FC3D  6E                 	db	110
   248  00FC3E  61                 	db	97
   249  00FC3F  72                 	db	114
   250  00FC40  20                 	db	32
   251  00FC41  20                 	db	32
   252  00FC42  20                 	db	32
   253  00FC43  20                 	db	32
   254  00FC44  20                 	db	32
   255  00FC45  20                 	db	32
   256  00FC46  20                 	db	32
   257  00FC47  20                 	db	32
   258  00FC48  20                 	db	32
   259  00FC49  20                 	db	32
   260  00FC4A  20                 	db	32
   261  00FC4B  6E                 	db	110
   262  00FC4C  20                 	db	32
   263  00FC4D  0A                 	db	10
   264  00FC4E  0D                 	db	13
   265  00FC4F  00                 	db	0
   266                           
   267                           	psect	idataBANK1
   268  00FA34                     __pidataBANK1:
   269                           	opt stack 0
   270                           
   271                           ;initializer for _msm2
   272  00FA34  20                 	db	32
   273  00FA35  52                 	db	82
   274  00FA36  6F                 	db	111
   275  00FA37  74                 	db	116
   276  00FA38  61                 	db	97
   277  00FA39  72                 	db	114
   278  00FA3A  20                 	db	32
   279  00FA3B  64                 	db	100
   280  00FA3C  65                 	db	101
   281  00FA3D  72                 	db	114
   282  00FA3E  65                 	db	101
   283  00FA3F  63                 	db	99
   284  00FA40  68                 	db	104
   285  00FA41  61                 	db	97
   286  00FA42  20                 	db	32
   287  00FA43  70                 	db	112
   288  00FA44  75                 	db	117
   289  00FA45  6C                 	db	108
   290  00FA46  73                 	db	115
   291  00FA47  61                 	db	97
   292  00FA48  72                 	db	114
   293  00FA49  20                 	db	32
   294  00FA4A  74                 	db	116
   295  00FA4B  65                 	db	101
   296  00FA4C  63                 	db	99
   297  00FA4D  6C                 	db	108
   298  00FA4E  61                 	db	97
   299  00FA4F  3A                 	db	58
   300  00FA50  20                 	db	32
   301  00FA51  20                 	db	32
   302  00FA52  20                 	db	32
   303  00FA53  20                 	db	32
   304  00FA54  20                 	db	32
   305  00FA55  20                 	db	32
   306  00FA56  72                 	db	114
   307  00FA57  20                 	db	32
   308  00FA58  20                 	db	32
   309  00FA59  20                 	db	32
   310  00FA5A  20                 	db	32
   311  00FA5B  0A                 	db	10
   312  00FA5C  0D                 	db	13
   313  00FA5D  00                 	db	0
   314                           
   315                           ;initializer for _msm4
   316  00FA5E  20                 	db	32
   317  00FA5F  56                 	db	86
   318  00FA60  61                 	db	97
   319  00FA61  73                 	db	115
   320  00FA62  63                 	db	99
   321  00FA63  75                 	db	117
   322  00FA64  6C                 	db	108
   323  00FA65  61                 	db	97
   324  00FA66  6E                 	db	110
   325  00FA67  74                 	db	116
   326  00FA68  65                 	db	101
   327  00FA69  20                 	db	32
   328  00FA6A  70                 	db	112
   329  00FA6B  75                 	db	117
   330  00FA6C  6C                 	db	108
   331  00FA6D  73                 	db	115
   332  00FA6E  61                 	db	97
   333  00FA6F  72                 	db	114
   334  00FA70  20                 	db	32
   335  00FA71  74                 	db	116
   336  00FA72  65                 	db	101
   337  00FA73  63                 	db	99
   338  00FA74  6C                 	db	108
   339  00FA75  61                 	db	97
   340  00FA76  3A                 	db	58
   341  00FA77  20                 	db	32
   342  00FA78  20                 	db	32
   343  00FA79  20                 	db	32
   344  00FA7A  20                 	db	32
   345  00FA7B  20                 	db	32
   346  00FA7C  20                 	db	32
   347  00FA7D  20                 	db	32
   348  00FA7E  20                 	db	32
   349  00FA7F  20                 	db	32
   350  00FA80  76                 	db	118
   351  00FA81  20                 	db	32
   352  00FA82  20                 	db	32
   353  00FA83  20                 	db	32
   354  00FA84  20                 	db	32
   355  00FA85  0A                 	db	10
   356  00FA86  0D                 	db	13
   357  00FA87  00                 	db	0
   358  0000                     _ADCON0bits	set	4034
   359  0000                     _ADCON1	set	4033
   360  0000                     _ADCON2bits	set	4032
   361  0000                     _ADRESH	set	4036
   362  0000                     _ADRESL	set	4035
   363  0000                     _ANSEL	set	3966
   364  0000                     _ANSELbits	set	3966
   365  0000                     _BAUDCONbits	set	4024
   366  0000                     _INTCONbits	set	4082
   367  0000                     _LATB	set	3978
   368  0000                     _LATD	set	3980
   369  0000                     _PIR1bits	set	3998
   370  0000                     _PORTAbits	set	3968
   371  0000                     _PORTB	set	3969
   372  0000                     _PORTD	set	3971
   373  0000                     _RCREG	set	4014
   374  0000                     _RCSTAbits	set	4011
   375  0000                     _SPBRG	set	4015
   376  0000                     _SPBRGH	set	4016
   377  0000                     _T0CONbits	set	4053
   378  0000                     _T1CONbits	set	4045
   379  0000                     _TMR0H	set	4055
   380  0000                     _TMR0L	set	4054
   381  0000                     _TMR1H	set	4047
   382  0000                     _TMR1L	set	4046
   383  0000                     _TRISA	set	3986
   384  0000                     _TRISAbits	set	3986
   385  0000                     _TRISB	set	3987
   386  0000                     _TRISCbits	set	3988
   387  0000                     _TRISD	set	3989
   388  0000                     _TXREG	set	4013
   389  0000                     _TXSTAbits	set	4012
   390                           
   391                           ; #config settings
   392  0000                     
   393                           	psect	cinit
   394  00FB3E                     __pcinit:
   395                           	opt stack 0
   396  00FB3E                     start_initialization:
   397                           	opt stack 0
   398  00FB3E                     __initialization:
   399                           	opt stack 0
   400                           
   401                           ; Clear objects allocated to COMRAM (10 bytes)
   402  00FB3E  EE00  F03D         	lfsr	0,__pbssCOMRAM
   403  00FB42  0E0A               	movlw	10
   404  00FB44                     clear_0:
   405  00FB44  6AEE               	clrf	postinc0,c
   406  00FB46  06E8               	decf	wreg,f,c
   407  00FB48  E1FD               	bnz	clear_0
   408                           
   409                           ; Initialize objects allocated to BANK1 (84 bytes)
   410                           ; load TBLPTR registers with __pidataBANK1
   411  00FB4A  0E34               	movlw	low __pidataBANK1
   412  00FB4C  6EF6               	movwf	tblptrl,c
   413  00FB4E  0EFA               	movlw	high __pidataBANK1
   414  00FB50  6EF7               	movwf	tblptrh,c
   415  00FB52  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   416  00FB54  6EF8               	movwf	tblptru,c
   417  00FB56  EE01  F000         	lfsr	0,__pdataBANK1
   418  00FB5A  EE10 F054          	lfsr	1,84
   419  00FB5E                     copy_data0:
   420  00FB5E  0009               	tblrd		*+
   421  00FB60  CFF5 FFEE          	movff	tablat,postinc0
   422  00FB64  50E5               	movf	postdec1,w,c
   423  00FB66  50E1               	movf	fsr1l,w,c
   424  00FB68  E1FA               	bnz	copy_data0
   425                           
   426                           ; Initialize objects allocated to BANK0 (156 bytes)
   427                           ; load TBLPTR registers with __pidataBANK0
   428  00FB6A  0EB4               	movlw	low __pidataBANK0
   429  00FB6C  6EF6               	movwf	tblptrl,c
   430  00FB6E  0EFB               	movlw	high __pidataBANK0
   431  00FB70  6EF7               	movwf	tblptrh,c
   432  00FB72  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   433  00FB74  6EF8               	movwf	tblptru,c
   434  00FB76  EE00  F060         	lfsr	0,__pdataBANK0
   435  00FB7A  EE10 F09C          	lfsr	1,156
   436  00FB7E                     copy_data1:
   437  00FB7E  0009               	tblrd		*+
   438  00FB80  CFF5 FFEE          	movff	tablat,postinc0
   439  00FB84  50E5               	movf	postdec1,w,c
   440  00FB86  50E1               	movf	fsr1l,w,c
   441  00FB88  E1FA               	bnz	copy_data1
   442                           
   443                           ; Initialize objects allocated to COMRAM (41 bytes)
   444                           ; load TBLPTR registers with __pidataCOMRAM
   445  00FB8A  0EB5               	movlw	low __pidataCOMRAM
   446  00FB8C  6EF6               	movwf	tblptrl,c
   447  00FB8E  0EF8               	movlw	high __pidataCOMRAM
   448  00FB90  6EF7               	movwf	tblptrh,c
   449  00FB92  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   450  00FB94  6EF8               	movwf	tblptru,c
   451  00FB96  EE00  F001         	lfsr	0,__pdataCOMRAM
   452  00FB9A  EE10 F029          	lfsr	1,41
   453  00FB9E                     copy_data2:
   454  00FB9E  0009               	tblrd		*+
   455  00FBA0  CFF5 FFEE          	movff	tablat,postinc0
   456  00FBA4  50E5               	movf	postdec1,w,c
   457  00FBA6  50E1               	movf	fsr1l,w,c
   458  00FBA8  E1FA               	bnz	copy_data2
   459  00FBAA                     end_of_initialization:
   460                           	opt stack 0
   461  00FBAA                     __end_of__initialization:
   462                           	opt stack 0
   463  00FBAA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   464  00FBAC  6EF8               	movwf	tblptru,c
   465  00FBAE  0100               	movlb	0
   466  00FBB0  EF7F  F07E         	goto	_main	;jump to C main() function
   467                           tblptru	equ	0xFF8
   468                           tblptrh	equ	0xFF7
   469                           tblptrl	equ	0xFF6
   470                           tablat	equ	0xFF5
   471                           postinc0	equ	0xFEE
   472                           wreg	equ	0xFE8
   473                           postdec1	equ	0xFE5
   474                           fsr1l	equ	0xFE1
   475                           
   476                           	psect	bssCOMRAM
   477  00003D                     __pbssCOMRAM:
   478                           	opt stack 0
   479  00003D                     _est:
   480                           	opt stack 0
   481  00003D                     	ds	2
   482  00003F                     _i:
   483                           	opt stack 0
   484  00003F                     	ds	2
   485  000041                     _d:
   486                           	opt stack 0
   487  000041                     	ds	1
   488  000042                     _inicio_transmision:
   489                           	opt stack 0
   490  000042                     	ds	1
   491  000043                     _jj:
   492                           	opt stack 0
   493  000043                     	ds	1
   494  000044                     _sec:
   495                           	opt stack 0
   496  000044                     	ds	1
   497  000045                     _ss:
   498                           	opt stack 0
   499  000045                     	ds	1
   500  000046                     _x:
   501                           	opt stack 0
   502  000046                     	ds	1
   503                           tblptru	equ	0xFF8
   504                           tblptrh	equ	0xFF7
   505                           tblptrl	equ	0xFF6
   506                           tablat	equ	0xFF5
   507                           postinc0	equ	0xFEE
   508                           wreg	equ	0xFE8
   509                           postdec1	equ	0xFE5
   510                           fsr1l	equ	0xFE1
   511                           
   512                           	psect	dataCOMRAM
   513  000001                     __pdataCOMRAM:
   514                           	opt stack 0
   515  000001                     _msm1:
   516                           	opt stack 0
   517  000001                     	ds	37
   518  000026                     _a:
   519                           	opt stack 0
   520  000026                     	ds	1
   521  000027                     _periodo:
   522                           	opt stack 0
   523  000027                     	ds	1
   524  000028                     _s1:
   525                           	opt stack 0
   526  000028                     	ds	1
   527  000029                     _s2:
   528                           	opt stack 0
   529  000029                     	ds	1
   530                           tblptru	equ	0xFF8
   531                           tblptrh	equ	0xFF7
   532                           tblptrl	equ	0xFF6
   533                           tablat	equ	0xFF5
   534                           postinc0	equ	0xFEE
   535                           wreg	equ	0xFE8
   536                           postdec1	equ	0xFE5
   537                           fsr1l	equ	0xFE1
   538                           
   539                           	psect	dataBANK0
   540  000060                     __pdataBANK0:
   541                           	opt stack 0
   542  000060                     _msm3:
   543                           	opt stack 0
   544  000060                     	ds	39
   545  000087                     _msm5:
   546                           	opt stack 0
   547  000087                     	ds	39
   548  0000AE                     _msm6:
   549                           	opt stack 0
   550  0000AE                     	ds	39
   551  0000D5                     _msm7:
   552                           	opt stack 0
   553  0000D5                     	ds	39
   554                           tblptru	equ	0xFF8
   555                           tblptrh	equ	0xFF7
   556                           tblptrl	equ	0xFF6
   557                           tablat	equ	0xFF5
   558                           postinc0	equ	0xFEE
   559                           wreg	equ	0xFE8
   560                           postdec1	equ	0xFE5
   561                           fsr1l	equ	0xFE1
   562                           
   563                           	psect	dataBANK1
   564  000100                     __pdataBANK1:
   565                           	opt stack 0
   566  000100                     _msm2:
   567                           	opt stack 0
   568  000100                     	ds	42
   569  00012A                     _msm4:
   570                           	opt stack 0
   571  00012A                     	ds	42
   572                           tblptru	equ	0xFF8
   573                           tblptrh	equ	0xFF7
   574                           tblptrl	equ	0xFF6
   575                           tablat	equ	0xFF5
   576                           postinc0	equ	0xFEE
   577                           wreg	equ	0xFE8
   578                           postdec1	equ	0xFE5
   579                           fsr1l	equ	0xFE1
   580                           
   581                           	psect	cstackCOMRAM
   582  00002A                     __pcstackCOMRAM:
   583                           	opt stack 0
   584  00002A                     ?_read_d:
   585                           	opt stack 0
   586  00002A                     ?_dato_16:
   587                           	opt stack 0
   588  00002A                     pulsador_s2@n:
   589                           	opt stack 0
   590  00002A                     set_comandos@c:
   591                           	opt stack 0
   592  00002A                     timer_1_set@high:
   593                           	opt stack 0
   594  00002A                     port@c:
   595                           	opt stack 0
   596  00002A                     set_adc@x:
   597                           	opt stack 0
   598  00002A                     activacion_tx@x:
   599                           	opt stack 0
   600  00002A                     activacion_rx@x:
   601                           	opt stack 0
   602  00002A                     trans_dato@x:
   603                           	opt stack 0
   604                           
   605                           ; 1 bytes @ 0x0
   606  00002A                     	ds	1
   607  00002B                     ??_transmitir:
   608  00002B                     ?_rotar_derecha:
   609                           	opt stack 0
   610  00002B                     ?_rotar_izquierda:
   611                           	opt stack 0
   612  00002B                     shit_raid@g:
   613                           	opt stack 0
   614  00002B                     set_comandos@d:
   615                           	opt stack 0
   616  00002B                     timer_1_set@low:
   617                           	opt stack 0
   618                           
   619                           ; 1 bytes @ 0x1
   620  00002B                     	ds	1
   621  00002C                     ?_flag_timer_1:
   622                           	opt stack 0
   623  00002C                     dato_16@y:
   624                           	opt stack 0
   625                           
   626                           ; 2 bytes @ 0x2
   627  00002C                     	ds	1
   628  00002D                     rotar_derecha@x:
   629                           	opt stack 0
   630  00002D                     rotar_izquierda@x:
   631                           	opt stack 0
   632                           
   633                           ; 1 bytes @ 0x3
   634  00002D                     	ds	1
   635  00002E                     vasculante@x:
   636                           	opt stack 0
   637  00002E                     set_periodo@x:
   638                           	opt stack 0
   639                           
   640                           ; 2 bytes @ 0x4
   641  00002E                     	ds	1
   642  00002F                     
   643                           ; 0 bytes @ 0x5
   644  00002F                     	ds	1
   645  000030                     
   646                           ; 2 bytes @ 0x6
   647  000030                     	ds	2
   648  000032                     
   649                           ; 3 bytes @ 0x8
   650  000032                     	ds	3
   651  000035                     main@flag_5s:
   652                           	opt stack 0
   653                           
   654                           ; 1 bytes @ 0xB
   655  000035                     	ds	1
   656  000036                     main@time_star:
   657                           	opt stack 0
   658                           
   659                           ; 2 bytes @ 0xC
   660  000036                     	ds	2
   661  000038                     main@time_adc:
   662                           	opt stack 0
   663                           
   664                           ; 1 bytes @ 0xE
   665  000038                     	ds	1
   666  000039                     main@time_led:
   667                           	opt stack 0
   668                           
   669                           ; 1 bytes @ 0xF
   670  000039                     	ds	1
   671  00003A                     main@time_sw:
   672                           	opt stack 0
   673                           
   674                           ; 1 bytes @ 0x10
   675  00003A                     	ds	1
   676  00003B                     main@time_comando:
   677                           	opt stack 0
   678                           
   679                           ; 1 bytes @ 0x11
   680  00003B                     	ds	1
   681  00003C                     main@flag_read:
   682                           	opt stack 0
   683                           
   684                           ; 1 bytes @ 0x12
   685  00003C                     	ds	1
   686                           tblptru	equ	0xFF8
   687                           tblptrh	equ	0xFF7
   688                           tblptrl	equ	0xFF6
   689                           tablat	equ	0xFF5
   690                           postinc0	equ	0xFEE
   691                           wreg	equ	0xFE8
   692                           postdec1	equ	0xFE5
   693                           fsr1l	equ	0xFE1
   694                           
   695 ;;
   696 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   697 ;;
   698 ;; *************** function _main *****************
   699 ;; Defined at:
   700 ;;		line 211 in file "main.c"
   701 ;; Parameters:    Size  Location     Type
   702 ;;  argc            2    6[COMRAM] int 
   703 ;;  argv            3    8[COMRAM] PTR PTR unsigned char 
   704 ;; Auto vars:     Size  Location     Type
   705 ;;  time_star       2   12[COMRAM] int 
   706 ;;  flag_read       1   18[COMRAM] unsigned char 
   707 ;;  time_comando    1   17[COMRAM] unsigned char 
   708 ;;  time_sw         1   16[COMRAM] unsigned char 
   709 ;;  time_led        1   15[COMRAM] unsigned char 
   710 ;;  time_adc        1   14[COMRAM] unsigned char 
   711 ;;  flag_5s         1   11[COMRAM] unsigned char 
   712 ;; Return value:  Size  Location     Type
   713 ;;                  2    6[COMRAM] int 
   714 ;; Registers used:
   715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   716 ;; Tracked objects:
   717 ;;		On entry : 0/0
   718 ;;		On exit  : 0/0
   719 ;;		Unchanged: 0/0
   720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   721 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   722 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   724 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   725 ;;Total ram usage:       13 bytes
   726 ;; Hardware stack levels required when called:    4
   727 ;; This function calls:
   728 ;;		_dato_16
   729 ;;		_final_convercion
   730 ;;		_flag_timer_1
   731 ;;		_pulsador_s2
   732 ;;		_read_d
   733 ;;		_set_comandos
   734 ;;		_set_periodo
   735 ;;		_set_ph
   736 ;;		_set_secuencia
   737 ;;		_star_convercion
   738 ;;		_transmitir
   739 ;; This function is called by:
   740 ;;		Startup code after reset
   741 ;; This function uses a non-reentrant model
   742 ;;
   743                           
   744                           	psect	text0
   745  00FCFE                     __ptext0:
   746                           	opt stack 0
   747  00FCFE                     _main:
   748                           	opt stack 27
   749                           
   750                           ;main.c: 212: set_ph();
   751                           
   752                           ;incstack = 0
   753  00FCFE  EC88  F07C         	call	_set_ph	;wreg free
   754                           
   755                           ;main.c: 213: unsigned char time_adc=0,time_led=0,time_sw=0,time_comando=0;
   756  00FD02  0E00               	movlw	0
   757  00FD04  6E38               	movwf	main@time_adc,c
   758  00FD06  0E00               	movlw	0
   759  00FD08  6E39               	movwf	main@time_led,c
   760  00FD0A  0E00               	movlw	0
   761  00FD0C  6E3A               	movwf	main@time_sw,c
   762  00FD0E  0E00               	movlw	0
   763  00FD10  6E3B               	movwf	main@time_comando,c
   764                           
   765                           ;main.c: 214: unsigned char flag_read=0,flag_5s=0;
   766  00FD12  0E00               	movlw	0
   767  00FD14  6E3C               	movwf	main@flag_read,c
   768  00FD16  0E00               	movlw	0
   769  00FD18  6E35               	movwf	main@flag_5s,c
   770                           
   771                           ;main.c: 215: int time_star=0;
   772  00FD1A  0E00               	movlw	0
   773  00FD1C  6E37               	movwf	main@time_star+1,c
   774  00FD1E  0E00               	movlw	0
   775  00FD20  6E36               	movwf	main@time_star,c
   776  00FD22                     l1682:
   777                           
   778                           ;main.c: 218: if (flag_timer_1()){
   779  00FD22  EC46  F07C         	call	_flag_timer_1	;wreg free
   780  00FD26  502C               	movf	?_flag_timer_1,w,c
   781  00FD28  102D               	iorwf	?_flag_timer_1+1,w,c
   782  00FD2A  B4D8               	btfsc	status,2,c
   783  00FD2C  D015               	goto	l1700
   784                           
   785                           ;main.c: 219: time_star++;
   786  00FD2E  4A36               	infsnz	main@time_star,f,c
   787  00FD30  2A37               	incf	main@time_star+1,f,c
   788                           
   789                           ;main.c: 220: if (time_star>=2000){
   790  00FD32  BE37               	btfsc	main@time_star+1,7,c
   791  00FD34  D00F               	goto	l1698
   792  00FD36  0ED0               	movlw	208
   793  00FD38  5C36               	subwf	main@time_star,w,c
   794  00FD3A  0E07               	movlw	7
   795  00FD3C  5837               	subwfb	main@time_star+1,w,c
   796  00FD3E  A0D8               	btfss	status,0,c
   797  00FD40  D009               	goto	l1698
   798                           
   799                           ;main.c: 221: time_star=2000;
   800  00FD42  0E07               	movlw	7
   801  00FD44  6E37               	movwf	main@time_star+1,c
   802  00FD46  0ED0               	movlw	208
   803  00FD48  6E36               	movwf	main@time_star,c
   804                           
   805                           ;main.c: 222: time_adc++;
   806  00FD4A  2A38               	incf	main@time_adc,f,c
   807                           
   808                           ;main.c: 223: time_led++;
   809  00FD4C  2A39               	incf	main@time_led,f,c
   810                           
   811                           ;main.c: 224: time_comando++;
   812  00FD4E  2A3B               	incf	main@time_comando,f,c
   813                           
   814                           ;main.c: 225: time_sw++;
   815  00FD50  2A3A               	incf	main@time_sw,f,c
   816                           
   817                           ;main.c: 226: }
   818  00FD52  D002               	goto	l1700
   819  00FD54                     l1698:
   820                           
   821                           ;main.c: 227: else
   822                           ;main.c: 228: transmitir();
   823  00FD54  ECF2  F07E         	call	_transmitir	;wreg free
   824  00FD58                     l1700:
   825                           
   826                           ;main.c: 229: }
   827                           ;main.c: 232: if (time_adc==200){
   828  00FD58  0EC8               	movlw	200
   829  00FD5A  1838               	xorwf	main@time_adc,w,c
   830  00FD5C  A4D8               	btfss	status,2,c
   831  00FD5E  D004               	goto	l1706
   832                           
   833                           ;main.c: 233: star_convercion();
   834  00FD60  ECC1  F07B         	call	_star_convercion	;wreg free
   835                           
   836                           ;main.c: 234: time_adc=0;
   837  00FD64  0E00               	movlw	0
   838  00FD66  6E38               	movwf	main@time_adc,c
   839  00FD68                     l1706:
   840                           
   841                           ;main.c: 235: }
   842                           ;main.c: 237: if(time_sw==20){
   843  00FD68  0E14               	movlw	20
   844  00FD6A  183A               	xorwf	main@time_sw,w,c
   845  00FD6C  A4D8               	btfss	status,2,c
   846  00FD6E  D00F               	goto	l1716
   847                           
   848                           ;main.c: 238: if (pulsador_s2())
   849  00FD70  EC6F  F07C         	call	_pulsador_s2	;wreg free
   850  00FD74  0900               	iorlw	0
   851  00FD76  B4D8               	btfsc	status,2,c
   852  00FD78  D002               	goto	l1712
   853                           
   854                           ;main.c: 239: sec++;
   855  00FD7A  2A44               	incf	_sec,f,c
   856  00FD7C  D006               	goto	l162
   857  00FD7E                     l1712:
   858                           
   859                           ;main.c: 240: else if (sec==4)
   860  00FD7E  0E04               	movlw	4
   861  00FD80  1844               	xorwf	_sec,w,c
   862  00FD82  A4D8               	btfss	status,2,c
   863  00FD84  D002               	goto	l162
   864                           
   865                           ;main.c: 241: sec=0;
   866  00FD86  0E00               	movlw	0
   867  00FD88  6E44               	movwf	_sec,c
   868  00FD8A                     l162:
   869                           
   870                           ;main.c: 242: time_sw=0;
   871  00FD8A  0E00               	movlw	0
   872  00FD8C  6E3A               	movwf	main@time_sw,c
   873  00FD8E                     l1716:
   874                           
   875                           ;main.c: 243: }
   876                           ;main.c: 245: if (time_led==periodo){
   877  00FD8E  5027               	movf	_periodo,w,c
   878  00FD90  1839               	xorwf	main@time_led,w,c
   879  00FD92  A4D8               	btfss	status,2,c
   880  00FD94  D004               	goto	l1722
   881                           
   882                           ;main.c: 246: set_secuencia();
   883  00FD96  ECF9  F07C         	call	_set_secuencia	;wreg free
   884                           
   885                           ;main.c: 247: time_led=0;
   886  00FD9A  0E00               	movlw	0
   887  00FD9C  6E39               	movwf	main@time_led,c
   888  00FD9E                     l1722:
   889                           
   890                           ;main.c: 248: }
   891                           ;main.c: 249: if (time_comando==4){
   892  00FD9E  0E04               	movlw	4
   893  00FDA0  183B               	xorwf	main@time_comando,w,c
   894  00FDA2  A4D8               	btfss	status,2,c
   895  00FDA4  D004               	goto	l165
   896                           
   897                           ;main.c: 250: flag_read=1;
   898  00FDA6  0E01               	movlw	1
   899  00FDA8  6E3C               	movwf	main@flag_read,c
   900                           
   901                           ;main.c: 251: time_comando=0;
   902  00FDAA  0E00               	movlw	0
   903  00FDAC  6E3B               	movwf	main@time_comando,c
   904  00FDAE                     l165:
   905                           
   906                           ;main.c: 252: }
   907                           ;main.c: 254: if (flag_read){
   908  00FDAE  503C               	movf	main@flag_read,w,c
   909  00FDB0  B4D8               	btfsc	status,2,c
   910  00FDB2  D00A               	goto	l1730
   911                           
   912                           ;main.c: 255: if (set_comandos(read_d())){
   913  00FDB4  ECF2  F07B         	call	_read_d	;wreg free
   914  00FDB8  502A               	movf	?_read_d,w,c
   915  00FDBA  EC44  F07D         	call	_set_comandos
   916  00FDBE  0900               	iorlw	0
   917  00FDC0  B4D8               	btfsc	status,2,c
   918  00FDC2  D002               	goto	l1730
   919                           
   920                           ;main.c: 256: flag_read=0;
   921  00FDC4  0E00               	movlw	0
   922  00FDC6  6E3C               	movwf	main@flag_read,c
   923  00FDC8                     l1730:
   924                           
   925                           ;main.c: 257: }
   926                           ;main.c: 258: }
   927                           ;main.c: 261: if (final_convercion()){
   928  00FDC8  ECCF  F07B         	call	_final_convercion	;wreg free
   929  00FDCC  0900               	iorlw	0
   930  00FDCE  B4D8               	btfsc	status,2,c
   931  00FDD0  D7A8               	goto	l1682
   932                           
   933                           ;main.c: 262: set_periodo(dato_16());
   934  00FDD2  EC23  F07C         	call	_dato_16	;wreg free
   935  00FDD6  C02A  F02E         	movff	?_dato_16,set_periodo@x
   936  00FDDA  C02B  F02F         	movff	?_dato_16+1,set_periodo@x+1
   937  00FDDE  EC28  F07E         	call	_set_periodo	;wreg free
   938  00FDE2  D79F               	goto	l1682
   939  00FDE4                     __end_of_main:
   940                           	opt stack 0
   941                           tblptru	equ	0xFF8
   942                           tblptrh	equ	0xFF7
   943                           tblptrl	equ	0xFF6
   944                           tablat	equ	0xFF5
   945                           postinc0	equ	0xFEE
   946                           wreg	equ	0xFE8
   947                           postdec1	equ	0xFE5
   948                           fsr1l	equ	0xFE1
   949                           status	equ	0xFD8
   950                           
   951 ;; *************** function _transmitir *****************
   952 ;; Defined at:
   953 ;;		line 271 in file "main.c"
   954 ;; Parameters:    Size  Location     Type
   955 ;;		None
   956 ;; Auto vars:     Size  Location     Type
   957 ;;		None
   958 ;; Return value:  Size  Location     Type
   959 ;;		None               void
   960 ;; Registers used:
   961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   962 ;; Tracked objects:
   963 ;;		On entry : 0/0
   964 ;;		On exit  : 0/0
   965 ;;		Unchanged: 0/0
   966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   969 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   970 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   971 ;;Total ram usage:        2 bytes
   972 ;; Hardware stack levels used:    1
   973 ;; Hardware stack levels required when called:    1
   974 ;; This function calls:
   975 ;;		_trans_dato
   976 ;; This function is called by:
   977 ;;		_main
   978 ;; This function uses a non-reentrant model
   979 ;;
   980                           
   981                           	psect	text1
   982  00FDE4                     __ptext1:
   983                           	opt stack 0
   984  00FDE4                     _transmitir:
   985                           	opt stack 29
   986                           
   987                           ;main.c: 272: switch (est){
   988                           
   989                           ;incstack = 0
   990  00FDE4  D0EE               	goto	l1640
   991  00FDE6                     l1566:
   992                           
   993                           ;main.c: 274: if (msm1[i]!='\r')
   994  00FDE6  0E01               	movlw	low _msm1
   995  00FDE8  243F               	addwf	_i,w,c
   996  00FDEA  6ED9               	movwf	fsr2l,c
   997  00FDEC  0E00               	movlw	high _msm1
   998  00FDEE  2040               	addwfc	_i+1,w,c
   999  00FDF0  6EDA               	movwf	fsr2h,c
  1000  00FDF2  0E0D               	movlw	13
  1001  00FDF4  18DE               	xorwf	postinc2,w,c
  1002  00FDF6  B4D8               	btfsc	status,2,c
  1003  00FDF8  D00C               	goto	l1572
  1004                           
  1005                           ;main.c: 275: trans_dato(msm1[i++]);
  1006  00FDFA  0E01               	movlw	low _msm1
  1007  00FDFC  243F               	addwf	_i,w,c
  1008  00FDFE  6ED9               	movwf	fsr2l,c
  1009  00FE00  0E00               	movlw	high _msm1
  1010  00FE02  2040               	addwfc	_i+1,w,c
  1011  00FE04  6EDA               	movwf	fsr2h,c
  1012  00FE06  50DF               	movf	indf2,w,c
  1013  00FE08  ECC9  F07B         	call	_trans_dato
  1014  00FE0C  4A3F               	infsnz	_i,f,c
  1015  00FE0E  2A40               	incf	_i+1,f,c
  1016  00FE10  0012               	return	
  1017  00FE12                     l1572:
  1018                           
  1019                           ;main.c: 276: else{
  1020                           ;main.c: 277: i=0;
  1021  00FE12  0E00               	movlw	0
  1022  00FE14  6E40               	movwf	_i+1,c
  1023  00FE16  0E00               	movlw	0
  1024  00FE18  6E3F               	movwf	_i,c
  1025                           
  1026                           ;main.c: 278: est=1;
  1027  00FE1A  0E00               	movlw	0
  1028  00FE1C  6E3E               	movwf	_est+1,c
  1029  00FE1E  0E01               	movlw	1
  1030  00FE20  6E3D               	movwf	_est,c
  1031                           
  1032                           ;main.c: 279: trans_dato('\r');
  1033  00FE22  0E0D               	movlw	13
  1034  00FE24  ECC9  F07B         	call	_trans_dato
  1035                           
  1036                           ;main.c: 280: }
  1037                           ;main.c: 281: break;
  1038  00FE28  0012               	return	
  1039  00FE2A                     l1576:
  1040                           
  1041                           ;main.c: 283: if (msm2[i]!='\r')
  1042  00FE2A  0E00               	movlw	low _msm2
  1043  00FE2C  243F               	addwf	_i,w,c
  1044  00FE2E  6ED9               	movwf	fsr2l,c
  1045  00FE30  0E01               	movlw	high _msm2
  1046  00FE32  2040               	addwfc	_i+1,w,c
  1047  00FE34  6EDA               	movwf	fsr2h,c
  1048  00FE36  0E0D               	movlw	13
  1049  00FE38  18DE               	xorwf	postinc2,w,c
  1050  00FE3A  B4D8               	btfsc	status,2,c
  1051  00FE3C  D00C               	goto	l1582
  1052                           
  1053                           ;main.c: 284: trans_dato(msm2[i++]);
  1054  00FE3E  0E00               	movlw	low _msm2
  1055  00FE40  243F               	addwf	_i,w,c
  1056  00FE42  6ED9               	movwf	fsr2l,c
  1057  00FE44  0E01               	movlw	high _msm2
  1058  00FE46  2040               	addwfc	_i+1,w,c
  1059  00FE48  6EDA               	movwf	fsr2h,c
  1060  00FE4A  50DF               	movf	indf2,w,c
  1061  00FE4C  ECC9  F07B         	call	_trans_dato
  1062  00FE50  4A3F               	infsnz	_i,f,c
  1063  00FE52  2A40               	incf	_i+1,f,c
  1064  00FE54  0012               	return	
  1065  00FE56                     l1582:
  1066                           
  1067                           ;main.c: 285: else{
  1068                           ;main.c: 286: i=0;
  1069  00FE56  0E00               	movlw	0
  1070  00FE58  6E40               	movwf	_i+1,c
  1071  00FE5A  0E00               	movlw	0
  1072  00FE5C  6E3F               	movwf	_i,c
  1073                           
  1074                           ;main.c: 287: est=2;
  1075  00FE5E  0E00               	movlw	0
  1076  00FE60  6E3E               	movwf	_est+1,c
  1077  00FE62  0E02               	movlw	2
  1078  00FE64  6E3D               	movwf	_est,c
  1079                           
  1080                           ;main.c: 288: trans_dato('\r');
  1081  00FE66  0E0D               	movlw	13
  1082  00FE68  ECC9  F07B         	call	_trans_dato
  1083                           
  1084                           ;main.c: 289: }
  1085                           ;main.c: 290: break;
  1086  00FE6C  0012               	return	
  1087  00FE6E                     l1586:
  1088                           
  1089                           ;main.c: 292: if (msm3[i]!='\r')
  1090  00FE6E  0E60               	movlw	low _msm3
  1091  00FE70  243F               	addwf	_i,w,c
  1092  00FE72  6ED9               	movwf	fsr2l,c
  1093  00FE74  0E00               	movlw	high _msm3
  1094  00FE76  2040               	addwfc	_i+1,w,c
  1095  00FE78  6EDA               	movwf	fsr2h,c
  1096  00FE7A  0E0D               	movlw	13
  1097  00FE7C  18DE               	xorwf	postinc2,w,c
  1098  00FE7E  B4D8               	btfsc	status,2,c
  1099  00FE80  D00C               	goto	l1592
  1100                           
  1101                           ;main.c: 293: trans_dato(msm3[i++]);
  1102  00FE82  0E60               	movlw	low _msm3
  1103  00FE84  243F               	addwf	_i,w,c
  1104  00FE86  6ED9               	movwf	fsr2l,c
  1105  00FE88  0E00               	movlw	high _msm3
  1106  00FE8A  2040               	addwfc	_i+1,w,c
  1107  00FE8C  6EDA               	movwf	fsr2h,c
  1108  00FE8E  50DF               	movf	indf2,w,c
  1109  00FE90  ECC9  F07B         	call	_trans_dato
  1110  00FE94  4A3F               	infsnz	_i,f,c
  1111  00FE96  2A40               	incf	_i+1,f,c
  1112  00FE98  0012               	return	
  1113  00FE9A                     l1592:
  1114                           
  1115                           ;main.c: 294: else{
  1116                           ;main.c: 295: i=0;
  1117  00FE9A  0E00               	movlw	0
  1118  00FE9C  6E40               	movwf	_i+1,c
  1119  00FE9E  0E00               	movlw	0
  1120  00FEA0  6E3F               	movwf	_i,c
  1121                           
  1122                           ;main.c: 296: est=3;
  1123  00FEA2  0E00               	movlw	0
  1124  00FEA4  6E3E               	movwf	_est+1,c
  1125  00FEA6  0E03               	movlw	3
  1126  00FEA8  6E3D               	movwf	_est,c
  1127                           
  1128                           ;main.c: 297: trans_dato('\r');
  1129  00FEAA  0E0D               	movlw	13
  1130  00FEAC  ECC9  F07B         	call	_trans_dato
  1131                           
  1132                           ;main.c: 298: }
  1133                           ;main.c: 299: break;
  1134  00FEB0  0012               	return	
  1135  00FEB2                     l1596:
  1136                           
  1137                           ;main.c: 301: if (msm4[i]!='\r')
  1138  00FEB2  0E2A               	movlw	low _msm4
  1139  00FEB4  243F               	addwf	_i,w,c
  1140  00FEB6  6ED9               	movwf	fsr2l,c
  1141  00FEB8  0E01               	movlw	high _msm4
  1142  00FEBA  2040               	addwfc	_i+1,w,c
  1143  00FEBC  6EDA               	movwf	fsr2h,c
  1144  00FEBE  0E0D               	movlw	13
  1145  00FEC0  18DE               	xorwf	postinc2,w,c
  1146  00FEC2  B4D8               	btfsc	status,2,c
  1147  00FEC4  D00C               	goto	l1602
  1148                           
  1149                           ;main.c: 302: trans_dato(msm4[i++]);
  1150  00FEC6  0E2A               	movlw	low _msm4
  1151  00FEC8  243F               	addwf	_i,w,c
  1152  00FECA  6ED9               	movwf	fsr2l,c
  1153  00FECC  0E01               	movlw	high _msm4
  1154  00FECE  2040               	addwfc	_i+1,w,c
  1155  00FED0  6EDA               	movwf	fsr2h,c
  1156  00FED2  50DF               	movf	indf2,w,c
  1157  00FED4  ECC9  F07B         	call	_trans_dato
  1158  00FED8  4A3F               	infsnz	_i,f,c
  1159  00FEDA  2A40               	incf	_i+1,f,c
  1160  00FEDC  0012               	return	
  1161  00FEDE                     l1602:
  1162                           
  1163                           ;main.c: 303: else{
  1164                           ;main.c: 304: i=0;
  1165  00FEDE  0E00               	movlw	0
  1166  00FEE0  6E40               	movwf	_i+1,c
  1167  00FEE2  0E00               	movlw	0
  1168  00FEE4  6E3F               	movwf	_i,c
  1169                           
  1170                           ;main.c: 305: est=4;
  1171  00FEE6  0E00               	movlw	0
  1172  00FEE8  6E3E               	movwf	_est+1,c
  1173  00FEEA  0E04               	movlw	4
  1174  00FEEC  6E3D               	movwf	_est,c
  1175                           
  1176                           ;main.c: 306: trans_dato('\r');
  1177  00FEEE  0E0D               	movlw	13
  1178  00FEF0  ECC9  F07B         	call	_trans_dato
  1179                           
  1180                           ;main.c: 307: }
  1181                           ;main.c: 308: break;
  1182  00FEF4  0012               	return	
  1183  00FEF6                     l1606:
  1184                           
  1185                           ;main.c: 310: if (msm5[i]!='\r')
  1186  00FEF6  0E87               	movlw	low _msm5
  1187  00FEF8  243F               	addwf	_i,w,c
  1188  00FEFA  6ED9               	movwf	fsr2l,c
  1189  00FEFC  0E00               	movlw	high _msm5
  1190  00FEFE  2040               	addwfc	_i+1,w,c
  1191  00FF00  6EDA               	movwf	fsr2h,c
  1192  00FF02  0E0D               	movlw	13
  1193  00FF04  18DE               	xorwf	postinc2,w,c
  1194  00FF06  B4D8               	btfsc	status,2,c
  1195  00FF08  D00C               	goto	l1612
  1196                           
  1197                           ;main.c: 311: trans_dato(msm5[i++]);
  1198  00FF0A  0E87               	movlw	low _msm5
  1199  00FF0C  243F               	addwf	_i,w,c
  1200  00FF0E  6ED9               	movwf	fsr2l,c
  1201  00FF10  0E00               	movlw	high _msm5
  1202  00FF12  2040               	addwfc	_i+1,w,c
  1203  00FF14  6EDA               	movwf	fsr2h,c
  1204  00FF16  50DF               	movf	indf2,w,c
  1205  00FF18  ECC9  F07B         	call	_trans_dato
  1206  00FF1C  4A3F               	infsnz	_i,f,c
  1207  00FF1E  2A40               	incf	_i+1,f,c
  1208  00FF20  0012               	return	
  1209  00FF22                     l1612:
  1210                           
  1211                           ;main.c: 312: else{
  1212                           ;main.c: 313: i=0;
  1213  00FF22  0E00               	movlw	0
  1214  00FF24  6E40               	movwf	_i+1,c
  1215  00FF26  0E00               	movlw	0
  1216  00FF28  6E3F               	movwf	_i,c
  1217                           
  1218                           ;main.c: 314: est=5;
  1219  00FF2A  0E00               	movlw	0
  1220  00FF2C  6E3E               	movwf	_est+1,c
  1221  00FF2E  0E05               	movlw	5
  1222  00FF30  6E3D               	movwf	_est,c
  1223                           
  1224                           ;main.c: 315: trans_dato('\r');
  1225  00FF32  0E0D               	movlw	13
  1226  00FF34  ECC9  F07B         	call	_trans_dato
  1227                           
  1228                           ;main.c: 316: }
  1229                           ;main.c: 317: break;
  1230  00FF38  0012               	return	
  1231  00FF3A                     l1616:
  1232                           
  1233                           ;main.c: 319: if (msm6[i]!='\r')
  1234  00FF3A  0EAE               	movlw	low _msm6
  1235  00FF3C  243F               	addwf	_i,w,c
  1236  00FF3E  6ED9               	movwf	fsr2l,c
  1237  00FF40  0E00               	movlw	high _msm6
  1238  00FF42  2040               	addwfc	_i+1,w,c
  1239  00FF44  6EDA               	movwf	fsr2h,c
  1240  00FF46  0E0D               	movlw	13
  1241  00FF48  18DE               	xorwf	postinc2,w,c
  1242  00FF4A  B4D8               	btfsc	status,2,c
  1243  00FF4C  D00C               	goto	l1622
  1244                           
  1245                           ;main.c: 320: trans_dato(msm6[i++]);
  1246  00FF4E  0EAE               	movlw	low _msm6
  1247  00FF50  243F               	addwf	_i,w,c
  1248  00FF52  6ED9               	movwf	fsr2l,c
  1249  00FF54  0E00               	movlw	high _msm6
  1250  00FF56  2040               	addwfc	_i+1,w,c
  1251  00FF58  6EDA               	movwf	fsr2h,c
  1252  00FF5A  50DF               	movf	indf2,w,c
  1253  00FF5C  ECC9  F07B         	call	_trans_dato
  1254  00FF60  4A3F               	infsnz	_i,f,c
  1255  00FF62  2A40               	incf	_i+1,f,c
  1256  00FF64  0012               	return	
  1257  00FF66                     l1622:
  1258                           
  1259                           ;main.c: 321: else{
  1260                           ;main.c: 322: i=0;
  1261  00FF66  0E00               	movlw	0
  1262  00FF68  6E40               	movwf	_i+1,c
  1263  00FF6A  0E00               	movlw	0
  1264  00FF6C  6E3F               	movwf	_i,c
  1265                           
  1266                           ;main.c: 323: est=6;
  1267  00FF6E  0E00               	movlw	0
  1268  00FF70  6E3E               	movwf	_est+1,c
  1269  00FF72  0E06               	movlw	6
  1270  00FF74  6E3D               	movwf	_est,c
  1271                           
  1272                           ;main.c: 324: trans_dato('\r');
  1273  00FF76  0E0D               	movlw	13
  1274  00FF78  ECC9  F07B         	call	_trans_dato
  1275                           
  1276                           ;main.c: 325: }
  1277                           ;main.c: 326: break;
  1278  00FF7C  0012               	return	
  1279  00FF7E                     l1626:
  1280                           
  1281                           ;main.c: 328: if (msm7[i]!='\r')
  1282  00FF7E  0ED5               	movlw	low _msm7
  1283  00FF80  243F               	addwf	_i,w,c
  1284  00FF82  6ED9               	movwf	fsr2l,c
  1285  00FF84  0E00               	movlw	high _msm7
  1286  00FF86  2040               	addwfc	_i+1,w,c
  1287  00FF88  6EDA               	movwf	fsr2h,c
  1288  00FF8A  0E0D               	movlw	13
  1289  00FF8C  18DE               	xorwf	postinc2,w,c
  1290  00FF8E  B4D8               	btfsc	status,2,c
  1291  00FF90  D00C               	goto	l1632
  1292                           
  1293                           ;main.c: 329: trans_dato(msm7[i++]);
  1294  00FF92  0ED5               	movlw	low _msm7
  1295  00FF94  243F               	addwf	_i,w,c
  1296  00FF96  6ED9               	movwf	fsr2l,c
  1297  00FF98  0E00               	movlw	high _msm7
  1298  00FF9A  2040               	addwfc	_i+1,w,c
  1299  00FF9C  6EDA               	movwf	fsr2h,c
  1300  00FF9E  50DF               	movf	indf2,w,c
  1301  00FFA0  ECC9  F07B         	call	_trans_dato
  1302  00FFA4  4A3F               	infsnz	_i,f,c
  1303  00FFA6  2A40               	incf	_i+1,f,c
  1304  00FFA8  0012               	return	
  1305  00FFAA                     l1632:
  1306                           
  1307                           ;main.c: 330: else{
  1308                           ;main.c: 331: i=0;
  1309  00FFAA  0E00               	movlw	0
  1310  00FFAC  6E40               	movwf	_i+1,c
  1311  00FFAE  0E00               	movlw	0
  1312  00FFB0  6E3F               	movwf	_i,c
  1313                           
  1314                           ;main.c: 332: trans_dato('\r');
  1315  00FFB2  0E0D               	movlw	13
  1316  00FFB4  ECC9  F07B         	call	_trans_dato
  1317                           
  1318                           ;main.c: 333: est=9;
  1319  00FFB8  0E00               	movlw	0
  1320  00FFBA  6E3E               	movwf	_est+1,c
  1321  00FFBC  0E09               	movlw	9
  1322  00FFBE  6E3D               	movwf	_est,c
  1323                           
  1324                           ;main.c: 339: }
  1325                           
  1326                           ;main.c: 337: break;
  1327                           
  1328                           ;main.c: 336: default:
  1329                           
  1330                           ;main.c: 334: }
  1331                           ;main.c: 335: break;
  1332  00FFC0  0012               	return	
  1333  00FFC2                     l1640:
  1334  00FFC2  C03D  F02B         	movff	_est,??_transmitir
  1335  00FFC6  C03E  F02C         	movff	_est+1,??_transmitir+1
  1336                           
  1337                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1338                           ; Switch size 1, requested type "space"
  1339                           ; Number of cases is 1, Range of values is 0 to 0
  1340                           ; switch strategies available:
  1341                           ; Name         Instructions Cycles
  1342                           ; simple_byte            4     3 (average)
  1343                           ;	Chosen strategy is simple_byte
  1344  00FFCA  502C               	movf	??_transmitir+1,w,c
  1345  00FFCC  0A00               	xorlw	0	; case 0
  1346  00FFCE  A4D8               	btfss	status,2,c
  1347  00FFD0  0012               	return	
  1348                           
  1349                           ; Switch size 1, requested type "space"
  1350                           ; Number of cases is 7, Range of values is 0 to 6
  1351                           ; switch strategies available:
  1352                           ; Name         Instructions Cycles
  1353                           ; simple_byte           22    12 (average)
  1354                           ;	Chosen strategy is simple_byte
  1355  00FFD2  502B               	movf	??_transmitir,w,c
  1356  00FFD4  0A00               	xorlw	0	; case 0
  1357  00FFD6  B4D8               	btfsc	status,2,c
  1358  00FFD8  D706               	goto	l1566
  1359  00FFDA  0A01               	xorlw	1	; case 1
  1360  00FFDC  B4D8               	btfsc	status,2,c
  1361  00FFDE  D725               	goto	l1576
  1362  00FFE0  0A03               	xorlw	3	; case 2
  1363  00FFE2  B4D8               	btfsc	status,2,c
  1364  00FFE4  D744               	goto	l1586
  1365  00FFE6  0A01               	xorlw	1	; case 3
  1366  00FFE8  B4D8               	btfsc	status,2,c
  1367  00FFEA  D763               	goto	l1596
  1368  00FFEC  0A07               	xorlw	7	; case 4
  1369  00FFEE  B4D8               	btfsc	status,2,c
  1370  00FFF0  D782               	goto	l1606
  1371  00FFF2  0A01               	xorlw	1	; case 5
  1372  00FFF4  B4D8               	btfsc	status,2,c
  1373  00FFF6  D7A1               	goto	l1616
  1374  00FFF8  0A03               	xorlw	3	; case 6
  1375  00FFFA  A4D8               	btfss	status,2,c
  1376  00FFFC  0012               	return	
  1377  00FFFE  D7BF               	goto	l1626
  1378  010000                     __end_of_transmitir:
  1379                           	opt stack 0
  1380                           tblptru	equ	0xFF8
  1381                           tblptrh	equ	0xFF7
  1382                           tblptrl	equ	0xFF6
  1383                           tablat	equ	0xFF5
  1384                           postinc0	equ	0xFEE
  1385                           wreg	equ	0xFE8
  1386                           postdec1	equ	0xFE5
  1387                           fsr1l	equ	0xFE1
  1388                           indf2	equ	0xFDF
  1389                           postinc2	equ	0xFDE
  1390                           fsr2h	equ	0xFDA
  1391                           fsr2l	equ	0xFD9
  1392                           status	equ	0xFD8
  1393                           
  1394 ;; *************** function _trans_dato *****************
  1395 ;; Defined at:
  1396 ;;		line 35 in file "m_uart.c"
  1397 ;; Parameters:    Size  Location     Type
  1398 ;;  x               1    wreg     unsigned char 
  1399 ;; Auto vars:     Size  Location     Type
  1400 ;;  x               1    0[COMRAM] unsigned char 
  1401 ;; Return value:  Size  Location     Type
  1402 ;;		None               void
  1403 ;; Registers used:
  1404 ;;		wreg
  1405 ;; Tracked objects:
  1406 ;;		On entry : 0/0
  1407 ;;		On exit  : 0/0
  1408 ;;		Unchanged: 0/0
  1409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1411 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1413 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1414 ;;Total ram usage:        1 bytes
  1415 ;; Hardware stack levels used:    1
  1416 ;; This function calls:
  1417 ;;		Nothing
  1418 ;; This function is called by:
  1419 ;;		_transmitir
  1420 ;;		_send_msm
  1421 ;; This function uses a non-reentrant model
  1422 ;;
  1423                           
  1424                           	psect	text2
  1425  00F792                     __ptext2:
  1426                           	opt stack 0
  1427  00F792                     _trans_dato:
  1428                           	opt stack 29
  1429                           
  1430                           ;incstack = 0
  1431                           ;trans_dato@x stored from wreg
  1432  00F792  6E2A               	movwf	trans_dato@x,c
  1433  00F794                     l335:
  1434  00F794  A2AC               	btfss	4012,1,c	;volatile
  1435  00F796  D7FE               	goto	l335
  1436                           
  1437                           ;m_uart.c: 37: TXREG=x;
  1438  00F798  C02A  FFAD         	movff	trans_dato@x,4013	;volatile
  1439  00F79C  0012               	return		;funcret
  1440  00F79E                     __end_of_trans_dato:
  1441                           	opt stack 0
  1442                           tblptru	equ	0xFF8
  1443                           tblptrh	equ	0xFF7
  1444                           tblptrl	equ	0xFF6
  1445                           tablat	equ	0xFF5
  1446                           postinc0	equ	0xFEE
  1447                           wreg	equ	0xFE8
  1448                           postdec1	equ	0xFE5
  1449                           fsr1l	equ	0xFE1
  1450                           indf2	equ	0xFDF
  1451                           postinc2	equ	0xFDE
  1452                           fsr2h	equ	0xFDA
  1453                           fsr2l	equ	0xFD9
  1454                           status	equ	0xFD8
  1455                           
  1456 ;; *************** function _star_convercion *****************
  1457 ;; Defined at:
  1458 ;;		line 27 in file "adc.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;		None
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;		None
  1463 ;; Return value:  Size  Location     Type
  1464 ;;		None               void
  1465 ;; Registers used:
  1466 ;;		None
  1467 ;; Tracked objects:
  1468 ;;		On entry : 0/0
  1469 ;;		On exit  : 0/0
  1470 ;;		Unchanged: 0/0
  1471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1476 ;;Total ram usage:        0 bytes
  1477 ;; Hardware stack levels used:    1
  1478 ;; This function calls:
  1479 ;;		Nothing
  1480 ;; This function is called by:
  1481 ;;		_main
  1482 ;; This function uses a non-reentrant model
  1483 ;;
  1484                           
  1485                           	psect	text3
  1486  00F782                     __ptext3:
  1487                           	opt stack 0
  1488  00F782                     _star_convercion:
  1489                           	opt stack 30
  1490                           
  1491                           ;adc.c: 28: ADCON0bits.GO=1;
  1492                           
  1493                           ;incstack = 0
  1494  00F782  82C2               	bsf	4034,1,c	;volatile
  1495  00F784  0012               	return		;funcret
  1496  00F786                     __end_of_star_convercion:
  1497                           	opt stack 0
  1498                           tblptru	equ	0xFF8
  1499                           tblptrh	equ	0xFF7
  1500                           tblptrl	equ	0xFF6
  1501                           tablat	equ	0xFF5
  1502                           postinc0	equ	0xFEE
  1503                           wreg	equ	0xFE8
  1504                           postdec1	equ	0xFE5
  1505                           fsr1l	equ	0xFE1
  1506                           indf2	equ	0xFDF
  1507                           postinc2	equ	0xFDE
  1508                           fsr2h	equ	0xFDA
  1509                           fsr2l	equ	0xFD9
  1510                           status	equ	0xFD8
  1511                           
  1512 ;; *************** function _set_secuencia *****************
  1513 ;; Defined at:
  1514 ;;		line 129 in file "main.c"
  1515 ;; Parameters:    Size  Location     Type
  1516 ;;		None
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;		None
  1519 ;; Return value:  Size  Location     Type
  1520 ;;		None               void
  1521 ;; Registers used:
  1522 ;;		wreg, status,2, status,0, cstack
  1523 ;; Tracked objects:
  1524 ;;		On entry : 0/0
  1525 ;;		On exit  : 0/0
  1526 ;;		Unchanged: 0/0
  1527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1532 ;;Total ram usage:        0 bytes
  1533 ;; Hardware stack levels used:    1
  1534 ;; Hardware stack levels required when called:    3
  1535 ;; This function calls:
  1536 ;;		_rotar_derecha
  1537 ;;		_rotar_izquierda
  1538 ;;		_shit_raid
  1539 ;;		_vasculante
  1540 ;; This function is called by:
  1541 ;;		_main
  1542 ;; This function uses a non-reentrant model
  1543 ;;
  1544                           
  1545                           	psect	text4
  1546  00F9F2                     __ptext4:
  1547                           	opt stack 0
  1548  00F9F2                     _set_secuencia:
  1549                           	opt stack 27
  1550                           
  1551                           ;main.c: 130: switch(sec){
  1552                           
  1553                           ;incstack = 0
  1554  00F9F2  D012               	goto	l1504
  1555  00F9F4                     l1492:
  1556                           
  1557                           ;main.c: 132: rotar_derecha(x);
  1558  00F9F4  5046               	movf	_x,w,c
  1559  00F9F6  ECDA  F07C         	call	_rotar_derecha
  1560                           
  1561                           ;main.c: 133: break;
  1562  00F9FA  0012               	return	
  1563  00F9FC                     l1494:
  1564                           
  1565                           ;main.c: 135: rotar_izquierda(x);
  1566  00F9FC  5046               	movf	_x,w,c
  1567  00F9FE  ECBC  F07C         	call	_rotar_izquierda
  1568                           
  1569                           ;main.c: 136: break;
  1570  00FA02  0012               	return	
  1571  00FA04                     l1496:
  1572                           
  1573                           ;main.c: 138: vasculante(x);
  1574  00FA04  5046               	movf	_x,w,c
  1575  00FA06  ECA1  F07C         	call	_vasculante
  1576                           
  1577                           ;main.c: 139: break;
  1578  00FA0A  0012               	return	
  1579  00FA0C                     l1498:
  1580                           
  1581                           ;main.c: 141: shit_raid();
  1582  00FA0C  EC71  F07D         	call	_shit_raid	;wreg free
  1583                           
  1584                           ;main.c: 142: break;
  1585  00FA10  0012               	return	
  1586  00FA12                     l1500:
  1587                           
  1588                           ;main.c: 144: sec=0;
  1589  00FA12  0E00               	movlw	0
  1590  00FA14  6E44               	movwf	_sec,c
  1591                           
  1592                           ;main.c: 146: }
  1593                           
  1594                           ;main.c: 145: break;
  1595  00FA16  0012               	return	
  1596  00FA18                     l1504:
  1597  00FA18  5044               	movf	_sec,w,c
  1598                           
  1599                           ; Switch size 1, requested type "space"
  1600                           ; Number of cases is 4, Range of values is 0 to 3
  1601                           ; switch strategies available:
  1602                           ; Name         Instructions Cycles
  1603                           ; simple_byte           13     7 (average)
  1604                           ;	Chosen strategy is simple_byte
  1605  00FA1A  0A00               	xorlw	0	; case 0
  1606  00FA1C  B4D8               	btfsc	status,2,c
  1607  00FA1E  D7EA               	goto	l1492
  1608  00FA20  0A01               	xorlw	1	; case 1
  1609  00FA22  B4D8               	btfsc	status,2,c
  1610  00FA24  D7EB               	goto	l1494
  1611  00FA26  0A03               	xorlw	3	; case 2
  1612  00FA28  B4D8               	btfsc	status,2,c
  1613  00FA2A  D7EC               	goto	l1496
  1614  00FA2C  0A01               	xorlw	1	; case 3
  1615  00FA2E  B4D8               	btfsc	status,2,c
  1616  00FA30  D7ED               	goto	l1498
  1617  00FA32  D7EF               	goto	l1500
  1618  00FA34                     __end_of_set_secuencia:
  1619                           	opt stack 0
  1620                           tblptru	equ	0xFF8
  1621                           tblptrh	equ	0xFF7
  1622                           tblptrl	equ	0xFF6
  1623                           tablat	equ	0xFF5
  1624                           postinc0	equ	0xFEE
  1625                           wreg	equ	0xFE8
  1626                           postdec1	equ	0xFE5
  1627                           fsr1l	equ	0xFE1
  1628                           indf2	equ	0xFDF
  1629                           postinc2	equ	0xFDE
  1630                           fsr2h	equ	0xFDA
  1631                           fsr2l	equ	0xFD9
  1632                           status	equ	0xFD8
  1633                           
  1634 ;; *************** function _vasculante *****************
  1635 ;; Defined at:
  1636 ;;		line 68 in file "main.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;  x               1    wreg     unsigned char 
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;  x               1    4[COMRAM] unsigned char 
  1641 ;; Return value:  Size  Location     Type
  1642 ;;		None               void
  1643 ;; Registers used:
  1644 ;;		wreg, status,2, status,0, cstack
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1651 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1653 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1654 ;;Total ram usage:        1 bytes
  1655 ;; Hardware stack levels used:    1
  1656 ;; Hardware stack levels required when called:    2
  1657 ;; This function calls:
  1658 ;;		_rotar_derecha
  1659 ;;		_rotar_izquierda
  1660 ;; This function is called by:
  1661 ;;		_set_secuencia
  1662 ;; This function uses a non-reentrant model
  1663 ;;
  1664                           
  1665                           	psect	text5
  1666  00F942                     __ptext5:
  1667                           	opt stack 0
  1668  00F942                     _vasculante:
  1669                           	opt stack 27
  1670                           
  1671                           ;incstack = 0
  1672                           ;vasculante@x stored from wreg
  1673  00F942  6E2E               	movwf	vasculante@x,c
  1674                           
  1675                           ;main.c: 69: if (d==0){
  1676  00F944  5041               	movf	_d,w,c
  1677  00F946  A4D8               	btfss	status,2,c
  1678  00F948  D00B               	goto	l1476
  1679                           
  1680                           ;main.c: 70: d=rotar_derecha(x);
  1681  00F94A  502E               	movf	vasculante@x,w,c
  1682  00F94C  ECDA  F07C         	call	_rotar_derecha
  1683  00F950  502B               	movf	?_rotar_derecha,w,c
  1684  00F952  6E41               	movwf	_d,c
  1685                           
  1686                           ;main.c: 71: if (a==1)
  1687  00F954  0426               	decf	_a,w,c
  1688  00F956  A4D8               	btfss	status,2,c
  1689  00F958  0012               	return	
  1690                           
  1691                           ;main.c: 72: a=128;
  1692  00F95A  0E80               	movlw	128
  1693  00F95C  6E26               	movwf	_a,c
  1694                           
  1695                           ;main.c: 73: }
  1696  00F95E  0012               	return	
  1697  00F960                     l1476:
  1698                           
  1699                           ;main.c: 74: else{
  1700                           ;main.c: 75: d=rotar_izquierda(x);
  1701  00F960  502E               	movf	vasculante@x,w,c
  1702  00F962  ECBC  F07C         	call	_rotar_izquierda
  1703  00F966  502B               	movf	?_rotar_izquierda,w,c
  1704  00F968  6E41               	movwf	_d,c
  1705                           
  1706                           ;main.c: 76: if (a==128)
  1707  00F96A  0E80               	movlw	128
  1708  00F96C  1826               	xorwf	_a,w,c
  1709  00F96E  A4D8               	btfss	status,2,c
  1710  00F970  0012               	return	
  1711                           
  1712                           ;main.c: 77: a=1;
  1713  00F972  0E01               	movlw	1
  1714  00F974  6E26               	movwf	_a,c
  1715  00F976  0012               	return	
  1716  00F978                     __end_of_vasculante:
  1717                           	opt stack 0
  1718                           tblptru	equ	0xFF8
  1719                           tblptrh	equ	0xFF7
  1720                           tblptrl	equ	0xFF6
  1721                           tablat	equ	0xFF5
  1722                           postinc0	equ	0xFEE
  1723                           wreg	equ	0xFE8
  1724                           postdec1	equ	0xFE5
  1725                           fsr1l	equ	0xFE1
  1726                           indf2	equ	0xFDF
  1727                           postinc2	equ	0xFDE
  1728                           fsr2h	equ	0xFDA
  1729                           fsr2l	equ	0xFD9
  1730                           status	equ	0xFD8
  1731                           
  1732 ;; *************** function _rotar_izquierda *****************
  1733 ;; Defined at:
  1734 ;;		line 51 in file "main.c"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;  x               1    wreg     unsigned char 
  1737 ;; Auto vars:     Size  Location     Type
  1738 ;;  x               1    3[COMRAM] unsigned char 
  1739 ;; Return value:  Size  Location     Type
  1740 ;;                  2    1[COMRAM] int 
  1741 ;; Registers used:
  1742 ;;		wreg, status,2, status,0, cstack
  1743 ;; Tracked objects:
  1744 ;;		On entry : 0/0
  1745 ;;		On exit  : 0/0
  1746 ;;		Unchanged: 0/0
  1747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1748 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1749 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1751 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1752 ;;Total ram usage:        3 bytes
  1753 ;; Hardware stack levels used:    1
  1754 ;; Hardware stack levels required when called:    1
  1755 ;; This function calls:
  1756 ;;		_port
  1757 ;; This function is called by:
  1758 ;;		_vasculante
  1759 ;;		_set_secuencia
  1760 ;; This function uses a non-reentrant model
  1761 ;;
  1762                           
  1763                           	psect	text6
  1764  00F978                     __ptext6:
  1765                           	opt stack 0
  1766  00F978                     _rotar_izquierda:
  1767                           	opt stack 27
  1768                           
  1769                           ;incstack = 0
  1770                           ;rotar_izquierda@x stored from wreg
  1771  00F978  6E2D               	movwf	rotar_izquierda@x,c
  1772                           
  1773                           ;main.c: 52: if (x==1){
  1774  00F97A  042D               	decf	rotar_izquierda@x,w,c
  1775  00F97C  A4D8               	btfss	status,2,c
  1776  00F97E  D004               	goto	l1452
  1777                           
  1778                           ;main.c: 53: port(a);
  1779  00F980  5026               	movf	_a,w,c
  1780  00F982  EC09  F07C         	call	_port
  1781                           
  1782                           ;main.c: 54: }
  1783  00F986  D004               	goto	l1454
  1784  00F988                     l1452:
  1785                           
  1786                           ;main.c: 55: else{
  1787                           ;main.c: 56: port(0xFF & ~a);
  1788  00F988  5026               	movf	_a,w,c
  1789  00F98A  0AFF               	xorlw	255
  1790  00F98C  EC09  F07C         	call	_port
  1791  00F990                     l1454:
  1792                           
  1793                           ;main.c: 57: }
  1794                           ;main.c: 58: if (a==1){
  1795  00F990  0426               	decf	_a,w,c
  1796  00F992  A4D8               	btfss	status,2,c
  1797  00F994  D007               	goto	l1462
  1798                           
  1799                           ;main.c: 59: a=128;
  1800  00F996  0E80               	movlw	128
  1801  00F998  6E26               	movwf	_a,c
  1802                           
  1803                           ;main.c: 60: return 0;
  1804  00F99A  0E00               	movlw	0
  1805  00F99C  6E2C               	movwf	?_rotar_izquierda+1,c
  1806  00F99E  0E00               	movlw	0
  1807  00F9A0  6E2B               	movwf	?_rotar_izquierda,c
  1808  00F9A2  0012               	return	
  1809  00F9A4                     l1462:
  1810                           
  1811                           ;main.c: 62: else
  1812                           ;main.c: 63: a=a>>1;
  1813  00F9A4  90D8               	bcf	status,0,c
  1814  00F9A6  3026               	rrcf	_a,w,c
  1815  00F9A8  6E26               	movwf	_a,c
  1816                           
  1817                           ;main.c: 64: return 1;
  1818  00F9AA  0E00               	movlw	0
  1819  00F9AC  6E2C               	movwf	?_rotar_izquierda+1,c
  1820  00F9AE  0E01               	movlw	1
  1821  00F9B0  6E2B               	movwf	?_rotar_izquierda,c
  1822  00F9B2  0012               	return	
  1823  00F9B4                     __end_of_rotar_izquierda:
  1824                           	opt stack 0
  1825                           tblptru	equ	0xFF8
  1826                           tblptrh	equ	0xFF7
  1827                           tblptrl	equ	0xFF6
  1828                           tablat	equ	0xFF5
  1829                           postinc0	equ	0xFEE
  1830                           wreg	equ	0xFE8
  1831                           postdec1	equ	0xFE5
  1832                           fsr1l	equ	0xFE1
  1833                           indf2	equ	0xFDF
  1834                           postinc2	equ	0xFDE
  1835                           fsr2h	equ	0xFDA
  1836                           fsr2l	equ	0xFD9
  1837                           status	equ	0xFD8
  1838                           
  1839 ;; *************** function _rotar_derecha *****************
  1840 ;; Defined at:
  1841 ;;		line 35 in file "main.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;  x               1    wreg     unsigned char 
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;  x               1    3[COMRAM] unsigned char 
  1846 ;; Return value:  Size  Location     Type
  1847 ;;                  2    1[COMRAM] int 
  1848 ;; Registers used:
  1849 ;;		wreg, status,2, status,0, cstack
  1850 ;; Tracked objects:
  1851 ;;		On entry : 0/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1855 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1856 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1858 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1859 ;;Total ram usage:        3 bytes
  1860 ;; Hardware stack levels used:    1
  1861 ;; Hardware stack levels required when called:    1
  1862 ;; This function calls:
  1863 ;;		_port
  1864 ;; This function is called by:
  1865 ;;		_vasculante
  1866 ;;		_set_secuencia
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870                           	psect	text7
  1871  00F9B4                     __ptext7:
  1872                           	opt stack 0
  1873  00F9B4                     _rotar_derecha:
  1874                           	opt stack 27
  1875                           
  1876                           ;incstack = 0
  1877                           ;rotar_derecha@x stored from wreg
  1878  00F9B4  6E2D               	movwf	rotar_derecha@x,c
  1879                           
  1880                           ;main.c: 36: if (x==1){
  1881  00F9B6  042D               	decf	rotar_derecha@x,w,c
  1882  00F9B8  A4D8               	btfss	status,2,c
  1883  00F9BA  D004               	goto	l1432
  1884                           
  1885                           ;main.c: 37: port(a);
  1886  00F9BC  5026               	movf	_a,w,c
  1887  00F9BE  EC09  F07C         	call	_port
  1888                           
  1889                           ;main.c: 38: }
  1890  00F9C2  D004               	goto	l1434
  1891  00F9C4                     l1432:
  1892                           
  1893                           ;main.c: 39: else{
  1894                           ;main.c: 40: port(0xFF & ~a);
  1895  00F9C4  5026               	movf	_a,w,c
  1896  00F9C6  0AFF               	xorlw	255
  1897  00F9C8  EC09  F07C         	call	_port
  1898  00F9CC                     l1434:
  1899                           
  1900                           ;main.c: 41: }
  1901                           ;main.c: 42: if (a==128){
  1902  00F9CC  0E80               	movlw	128
  1903  00F9CE  1826               	xorwf	_a,w,c
  1904  00F9D0  A4D8               	btfss	status,2,c
  1905  00F9D2  D007               	goto	l1442
  1906                           
  1907                           ;main.c: 43: a=1;
  1908  00F9D4  0E01               	movlw	1
  1909  00F9D6  6E26               	movwf	_a,c
  1910                           
  1911                           ;main.c: 44: return 1;
  1912  00F9D8  0E00               	movlw	0
  1913  00F9DA  6E2C               	movwf	?_rotar_derecha+1,c
  1914  00F9DC  0E01               	movlw	1
  1915  00F9DE  6E2B               	movwf	?_rotar_derecha,c
  1916  00F9E0  0012               	return	
  1917  00F9E2                     l1442:
  1918                           
  1919                           ;main.c: 46: else
  1920                           ;main.c: 47: a=a<<1;
  1921  00F9E2  5026               	movf	_a,w,c
  1922  00F9E4  2426               	addwf	_a,w,c
  1923  00F9E6  6E26               	movwf	_a,c
  1924                           
  1925                           ;main.c: 48: return 0;
  1926  00F9E8  0E00               	movlw	0
  1927  00F9EA  6E2C               	movwf	?_rotar_derecha+1,c
  1928  00F9EC  0E00               	movlw	0
  1929  00F9EE  6E2B               	movwf	?_rotar_derecha,c
  1930  00F9F0  0012               	return	
  1931  00F9F2                     __end_of_rotar_derecha:
  1932                           	opt stack 0
  1933                           tblptru	equ	0xFF8
  1934                           tblptrh	equ	0xFF7
  1935                           tblptrl	equ	0xFF6
  1936                           tablat	equ	0xFF5
  1937                           postinc0	equ	0xFEE
  1938                           wreg	equ	0xFE8
  1939                           postdec1	equ	0xFE5
  1940                           fsr1l	equ	0xFE1
  1941                           indf2	equ	0xFDF
  1942                           postinc2	equ	0xFDE
  1943                           fsr2h	equ	0xFDA
  1944                           fsr2l	equ	0xFD9
  1945                           status	equ	0xFD8
  1946                           
  1947 ;; *************** function _shit_raid *****************
  1948 ;; Defined at:
  1949 ;;		line 81 in file "main.c"
  1950 ;; Parameters:    Size  Location     Type
  1951 ;;		None
  1952 ;; Auto vars:     Size  Location     Type
  1953 ;;  g               1    1[COMRAM] unsigned char 
  1954 ;; Return value:  Size  Location     Type
  1955 ;;		None               void
  1956 ;; Registers used:
  1957 ;;		wreg, status,2, status,0, cstack
  1958 ;; Tracked objects:
  1959 ;;		On entry : 0/0
  1960 ;;		On exit  : 0/0
  1961 ;;		Unchanged: 0/0
  1962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1964 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1966 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1967 ;;Total ram usage:        1 bytes
  1968 ;; Hardware stack levels used:    1
  1969 ;; Hardware stack levels required when called:    1
  1970 ;; This function calls:
  1971 ;;		_port
  1972 ;; This function is called by:
  1973 ;;		_set_secuencia
  1974 ;; This function uses a non-reentrant model
  1975 ;;
  1976                           
  1977                           	psect	text8
  1978  00FAE2                     __ptext8:
  1979                           	opt stack 0
  1980  00FAE2                     _shit_raid:
  1981                           	opt stack 28
  1982                           
  1983                           ;main.c: 82: unsigned char g;
  1984                           ;main.c: 83: g=s2 | s1;
  1985                           
  1986                           ;incstack = 0
  1987  00FAE2  5029               	movf	_s2,w,c
  1988  00FAE4  1028               	iorwf	_s1,w,c
  1989  00FAE6  6E2B               	movwf	shit_raid@g,c
  1990                           
  1991                           ;main.c: 84: if (x==1){
  1992  00FAE8  0446               	decf	_x,w,c
  1993  00FAEA  A4D8               	btfss	status,2,c
  1994  00FAEC  D004               	goto	l1012
  1995                           
  1996                           ;main.c: 85: port(g);
  1997  00FAEE  502B               	movf	shit_raid@g,w,c
  1998  00FAF0  EC09  F07C         	call	_port
  1999                           
  2000                           ;main.c: 86: }
  2001  00FAF4  D004               	goto	l1014
  2002  00FAF6                     l1012:
  2003                           
  2004                           ;main.c: 87: else{
  2005                           ;main.c: 88: port(0xFF & ~g);
  2006  00FAF6  502B               	movf	shit_raid@g,w,c
  2007  00FAF8  0AFF               	xorlw	255
  2008  00FAFA  EC09  F07C         	call	_port
  2009  00FAFE                     l1014:
  2010                           
  2011                           ;main.c: 89: }
  2012                           ;main.c: 90: if (jj<3){
  2013  00FAFE  0E03               	movlw	3
  2014  00FB00  6043               	cpfslt	_jj,c
  2015  00FB02  D006               	goto	l1020
  2016                           
  2017                           ;main.c: 91: s1<<=1;
  2018  00FB04  90D8               	bcf	status,0,c
  2019  00FB06  3628               	rlcf	_s1,f,c
  2020                           
  2021                           ;main.c: 92: s2>>=1;
  2022  00FB08  90D8               	bcf	status,0,c
  2023  00FB0A  3229               	rrcf	_s2,f,c
  2024                           
  2025                           ;main.c: 93: jj++;
  2026  00FB0C  2A43               	incf	_jj,f,c
  2027                           
  2028                           ;main.c: 94: }
  2029  00FB0E  0012               	return	
  2030  00FB10                     l1020:
  2031                           
  2032                           ;main.c: 95: else if(jj>=3 && jj<6){
  2033  00FB10  0E02               	movlw	2
  2034  00FB12  6443               	cpfsgt	_jj,c
  2035  00FB14  D009               	goto	l1028
  2036  00FB16  0E06               	movlw	6
  2037  00FB18  6043               	cpfslt	_jj,c
  2038  00FB1A  D006               	goto	l1028
  2039                           
  2040                           ;main.c: 96: s1>>=1;
  2041  00FB1C  90D8               	bcf	status,0,c
  2042  00FB1E  3228               	rrcf	_s1,f,c
  2043                           
  2044                           ;main.c: 97: s2<<=1;
  2045  00FB20  90D8               	bcf	status,0,c
  2046  00FB22  3629               	rlcf	_s2,f,c
  2047                           
  2048                           ;main.c: 98: jj++;
  2049  00FB24  2A43               	incf	_jj,f,c
  2050                           
  2051                           ;main.c: 99: }
  2052  00FB26  0012               	return	
  2053  00FB28                     l1028:
  2054                           
  2055                           ;main.c: 100: else if(jj==6){
  2056  00FB28  0E06               	movlw	6
  2057  00FB2A  1843               	xorwf	_jj,w,c
  2058  00FB2C  A4D8               	btfss	status,2,c
  2059  00FB2E  0012               	return	
  2060                           
  2061                           ;main.c: 101: jj=0;
  2062  00FB30  0E00               	movlw	0
  2063  00FB32  6E43               	movwf	_jj,c
  2064                           
  2065                           ;main.c: 102: s1=0x01;
  2066  00FB34  0E01               	movlw	1
  2067  00FB36  6E28               	movwf	_s1,c
  2068                           
  2069                           ;main.c: 103: s2=0b10000000;
  2070  00FB38  0E80               	movlw	128
  2071  00FB3A  6E29               	movwf	_s2,c
  2072  00FB3C  0012               	return	
  2073  00FB3E                     __end_of_shit_raid:
  2074                           	opt stack 0
  2075                           tblptru	equ	0xFF8
  2076                           tblptrh	equ	0xFF7
  2077                           tblptrl	equ	0xFF6
  2078                           tablat	equ	0xFF5
  2079                           postinc0	equ	0xFEE
  2080                           wreg	equ	0xFE8
  2081                           postdec1	equ	0xFE5
  2082                           fsr1l	equ	0xFE1
  2083                           indf2	equ	0xFDF
  2084                           postinc2	equ	0xFDE
  2085                           fsr2h	equ	0xFDA
  2086                           fsr2l	equ	0xFD9
  2087                           status	equ	0xFD8
  2088                           
  2089 ;; *************** function _port *****************
  2090 ;; Defined at:
  2091 ;;		line 14 in file "hw.c"
  2092 ;; Parameters:    Size  Location     Type
  2093 ;;  c               1    wreg     unsigned char 
  2094 ;; Auto vars:     Size  Location     Type
  2095 ;;  c               1    0[COMRAM] unsigned char 
  2096 ;; Return value:  Size  Location     Type
  2097 ;;		None               void
  2098 ;; Registers used:
  2099 ;;		wreg, status,2, status,0
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2106 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2108 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2109 ;;Total ram usage:        1 bytes
  2110 ;; Hardware stack levels used:    1
  2111 ;; This function calls:
  2112 ;;		Nothing
  2113 ;; This function is called by:
  2114 ;;		_rotar_derecha
  2115 ;;		_rotar_izquierda
  2116 ;;		_shit_raid
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120                           	psect	text9
  2121  00F812                     __ptext9:
  2122                           	opt stack 0
  2123  00F812                     _port:
  2124                           	opt stack 27
  2125                           
  2126                           ;incstack = 0
  2127                           ;port@c stored from wreg
  2128  00F812  6E2A               	movwf	port@c,c
  2129                           
  2130                           ;hw.c: 15: LATD &=0XF0;
  2131  00F814  0EF0               	movlw	240
  2132  00F816  168C               	andwf	3980,f,c	;volatile
  2133                           
  2134                           ;hw.c: 16: LATB &= 0XF0;
  2135  00F818  0EF0               	movlw	240
  2136  00F81A  168A               	andwf	3978,f,c	;volatile
  2137                           
  2138                           ;hw.c: 17: LATD |=(c & 0x0F);
  2139  00F81C  502A               	movf	port@c,w,c
  2140  00F81E  0B0F               	andlw	15
  2141  00F820  128C               	iorwf	3980,f,c	;volatile
  2142                           
  2143                           ;hw.c: 18: LATB |=(c>>4);
  2144  00F822  382A               	swapf	port@c,w,c
  2145  00F824  0B0F               	andlw	15
  2146  00F826  128A               	iorwf	3978,f,c	;volatile
  2147  00F828  0012               	return		;funcret
  2148  00F82A                     __end_of_port:
  2149                           	opt stack 0
  2150                           tblptru	equ	0xFF8
  2151                           tblptrh	equ	0xFF7
  2152                           tblptrl	equ	0xFF6
  2153                           tablat	equ	0xFF5
  2154                           postinc0	equ	0xFEE
  2155                           wreg	equ	0xFE8
  2156                           postdec1	equ	0xFE5
  2157                           fsr1l	equ	0xFE1
  2158                           indf2	equ	0xFDF
  2159                           postinc2	equ	0xFDE
  2160                           fsr2h	equ	0xFDA
  2161                           fsr2l	equ	0xFD9
  2162                           status	equ	0xFD8
  2163                           
  2164 ;; *************** function _set_ph *****************
  2165 ;; Defined at:
  2166 ;;		line 197 in file "main.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;		None
  2169 ;; Auto vars:     Size  Location     Type
  2170 ;;		None
  2171 ;; Return value:  Size  Location     Type
  2172 ;;		None               void
  2173 ;; Registers used:
  2174 ;;		wreg, status,2, cstack
  2175 ;; Tracked objects:
  2176 ;;		On entry : 0/0
  2177 ;;		On exit  : 0/0
  2178 ;;		Unchanged: 0/0
  2179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2184 ;;Total ram usage:        0 bytes
  2185 ;; Hardware stack levels used:    1
  2186 ;; Hardware stack levels required when called:    1
  2187 ;; This function calls:
  2188 ;;		_activacion_rx
  2189 ;;		_activacion_tx
  2190 ;;		_conf_adc
  2191 ;;		_config_tx_aurt
  2192 ;;		_set_adc
  2193 ;;		_set_leds
  2194 ;;		_timer_1_conf
  2195 ;;		_timer_1_set
  2196 ;;		_timer_1_star
  2197 ;; This function is called by:
  2198 ;;		_main
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202                           	psect	text10
  2203  00F910                     __ptext10:
  2204                           	opt stack 0
  2205  00F910                     _set_ph:
  2206                           	opt stack 29
  2207                           
  2208                           ;main.c: 199: set_leds();
  2209                           
  2210                           ;incstack = 0
  2211  00F910  EC15  F07C         	call	_set_leds	;wreg free
  2212                           
  2213                           ;main.c: 200: timer_1_conf();
  2214  00F914  ECEB  F07B         	call	_timer_1_conf	;wreg free
  2215                           
  2216                           ;main.c: 201: timer_1_set(0x3B,0xF6);
  2217  00F918  0EF6               	movlw	246
  2218  00F91A  6E2A               	movwf	timer_1_set@high,c
  2219  00F91C  0E3B               	movlw	59
  2220  00F91E  ECC3  F07B         	call	_timer_1_set
  2221                           
  2222                           ;main.c: 202: timer_1_star();
  2223  00F922  ECBF  F07B         	call	_timer_1_star	;wreg free
  2224                           
  2225                           ;main.c: 203: conf_adc();
  2226  00F926  EC34  F07C         	call	_conf_adc	;wreg free
  2227                           
  2228                           ;main.c: 204: set_adc(1);
  2229  00F92A  0E01               	movlw	1
  2230  00F92C  ECE4  F07B         	call	_set_adc
  2231                           
  2232                           ;main.c: 205: config_tx_aurt();
  2233  00F930  ECFD  F07B         	call	_config_tx_aurt	;wreg free
  2234                           
  2235                           ;main.c: 206: activacion_tx(1);
  2236  00F934  0E01               	movlw	1
  2237  00F936  ECDD  F07B         	call	_activacion_tx
  2238                           
  2239                           ;main.c: 207: activacion_rx(1);
  2240  00F93A  0E01               	movlw	1
  2241  00F93C  ECD6  F07B         	call	_activacion_rx
  2242  00F940  0012               	return		;funcret
  2243  00F942                     __end_of_set_ph:
  2244                           	opt stack 0
  2245                           tblptru	equ	0xFF8
  2246                           tblptrh	equ	0xFF7
  2247                           tblptrl	equ	0xFF6
  2248                           tablat	equ	0xFF5
  2249                           postinc0	equ	0xFEE
  2250                           wreg	equ	0xFE8
  2251                           postdec1	equ	0xFE5
  2252                           fsr1l	equ	0xFE1
  2253                           indf2	equ	0xFDF
  2254                           postinc2	equ	0xFDE
  2255                           fsr2h	equ	0xFDA
  2256                           fsr2l	equ	0xFD9
  2257                           status	equ	0xFD8
  2258                           
  2259 ;; *************** function _timer_1_conf *****************
  2260 ;; Defined at:
  2261 ;;		line 3 in file "timer.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;		None
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;		None
  2266 ;; Return value:  Size  Location     Type
  2267 ;;		None               void
  2268 ;; Registers used:
  2269 ;;		wreg, status,2
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2279 ;;Total ram usage:        0 bytes
  2280 ;; Hardware stack levels used:    1
  2281 ;; This function calls:
  2282 ;;		Nothing
  2283 ;; This function is called by:
  2284 ;;		_set_ph
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           	psect	text11
  2289  00F7D6                     __ptext11:
  2290                           	opt stack 0
  2291  00F7D6                     _timer_1_conf:
  2292                           	opt stack 29
  2293                           
  2294                           ;timer.c: 4: T1CONbits.RD16=1;
  2295                           
  2296                           ;incstack = 0
  2297  00F7D6  8ECD               	bsf	4045,7,c	;volatile
  2298                           
  2299                           ;timer.c: 5: T1CONbits.T1RUN=0;
  2300  00F7D8  9CCD               	bcf	4045,6,c	;volatile
  2301                           
  2302                           ;timer.c: 6: T1CONbits.T1CKPS=11;
  2303  00F7DA  0E30               	movlw	48
  2304  00F7DC  12CD               	iorwf	4045,f,c	;volatile
  2305                           
  2306                           ;timer.c: 7: T1CONbits.T1SYNC=0;
  2307  00F7DE  94CD               	bcf	4045,2,c	;volatile
  2308                           
  2309                           ;timer.c: 8: T1CONbits.TMR1CS=0;
  2310  00F7E0  92CD               	bcf	4045,1,c	;volatile
  2311  00F7E2  0012               	return		;funcret
  2312  00F7E4                     __end_of_timer_1_conf:
  2313                           	opt stack 0
  2314                           tblptru	equ	0xFF8
  2315                           tblptrh	equ	0xFF7
  2316                           tblptrl	equ	0xFF6
  2317                           tablat	equ	0xFF5
  2318                           postinc0	equ	0xFEE
  2319                           wreg	equ	0xFE8
  2320                           postdec1	equ	0xFE5
  2321                           fsr1l	equ	0xFE1
  2322                           indf2	equ	0xFDF
  2323                           postinc2	equ	0xFDE
  2324                           fsr2h	equ	0xFDA
  2325                           fsr2l	equ	0xFD9
  2326                           status	equ	0xFD8
  2327                           
  2328 ;; *************** function _set_leds *****************
  2329 ;; Defined at:
  2330 ;;		line 4 in file "hw.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;		None
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;		None
  2335 ;; Return value:  Size  Location     Type
  2336 ;;		None               void
  2337 ;; Registers used:
  2338 ;;		wreg, status,2
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2348 ;;Total ram usage:        0 bytes
  2349 ;; Hardware stack levels used:    1
  2350 ;; This function calls:
  2351 ;;		Nothing
  2352 ;; This function is called by:
  2353 ;;		_set_ph
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           	psect	text12
  2358  00F82A                     __ptext12:
  2359                           	opt stack 0
  2360  00F82A                     _set_leds:
  2361                           	opt stack 29
  2362                           
  2363                           ;hw.c: 5: PORTD=0;
  2364                           
  2365                           ;incstack = 0
  2366  00F82A  0E00               	movlw	0
  2367  00F82C  6E83               	movwf	3971,c	;volatile
  2368                           
  2369                           ;hw.c: 6: LATD=0;
  2370  00F82E  0E00               	movlw	0
  2371  00F830  6E8C               	movwf	3980,c	;volatile
  2372                           
  2373                           ;hw.c: 7: PORTB=0;
  2374  00F832  0E00               	movlw	0
  2375  00F834  6E81               	movwf	3969,c	;volatile
  2376                           
  2377                           ;hw.c: 8: TRISB=0;
  2378  00F836  0E00               	movlw	0
  2379  00F838  6E93               	movwf	3987,c	;volatile
  2380                           
  2381                           ;hw.c: 9: TRISD=0xF0;
  2382  00F83A  0EF0               	movlw	240
  2383  00F83C  6E95               	movwf	3989,c	;volatile
  2384                           
  2385                           ;hw.c: 10: ANSEL=0XE0;
  2386  00F83E  0EE0               	movlw	224
  2387  00F840  6E7E               	movwf	3966,c	;volatile
  2388                           
  2389                           ;hw.c: 11: TRISA=0XFF;
  2390  00F842  6892               	setf	3986,c	;volatile
  2391  00F844  0012               	return		;funcret
  2392  00F846                     __end_of_set_leds:
  2393                           	opt stack 0
  2394                           tblptru	equ	0xFF8
  2395                           tblptrh	equ	0xFF7
  2396                           tblptrl	equ	0xFF6
  2397                           tablat	equ	0xFF5
  2398                           postinc0	equ	0xFEE
  2399                           wreg	equ	0xFE8
  2400                           postdec1	equ	0xFE5
  2401                           fsr1l	equ	0xFE1
  2402                           indf2	equ	0xFDF
  2403                           postinc2	equ	0xFDE
  2404                           fsr2h	equ	0xFDA
  2405                           fsr2l	equ	0xFD9
  2406                           status	equ	0xFD8
  2407                           
  2408 ;; *************** function _set_adc *****************
  2409 ;; Defined at:
  2410 ;;		line 23 in file "adc.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;  x               1    wreg     unsigned char 
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;  x               1    0[COMRAM] unsigned char 
  2415 ;; Return value:  Size  Location     Type
  2416 ;;		None               void
  2417 ;; Registers used:
  2418 ;;		wreg
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2425 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2427 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2428 ;;Total ram usage:        1 bytes
  2429 ;; Hardware stack levels used:    1
  2430 ;; This function calls:
  2431 ;;		Nothing
  2432 ;; This function is called by:
  2433 ;;		_set_ph
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           	psect	text13
  2438  00F7C8                     __ptext13:
  2439                           	opt stack 0
  2440  00F7C8                     _set_adc:
  2441                           	opt stack 29
  2442                           
  2443                           ;incstack = 0
  2444                           ;set_adc@x stored from wreg
  2445  00F7C8  6E2A               	movwf	set_adc@x,c
  2446                           
  2447                           ;adc.c: 24: ADCON0bits.ADON=x;
  2448  00F7CA  B02A               	btfsc	set_adc@x,0,c
  2449  00F7CC  D002               	bra	u135
  2450  00F7CE  90C2               	bcf	4034,0,c	;volatile
  2451  00F7D0  D001               	bra	u136
  2452  00F7D2                     u135:
  2453  00F7D2  80C2               	bsf	4034,0,c	;volatile
  2454  00F7D4                     u136:
  2455  00F7D4  0012               	return		;funcret
  2456  00F7D6                     __end_of_set_adc:
  2457                           	opt stack 0
  2458                           tblptru	equ	0xFF8
  2459                           tblptrh	equ	0xFF7
  2460                           tblptrl	equ	0xFF6
  2461                           tablat	equ	0xFF5
  2462                           postinc0	equ	0xFEE
  2463                           wreg	equ	0xFE8
  2464                           postdec1	equ	0xFE5
  2465                           fsr1l	equ	0xFE1
  2466                           indf2	equ	0xFDF
  2467                           postinc2	equ	0xFDE
  2468                           fsr2h	equ	0xFDA
  2469                           fsr2l	equ	0xFD9
  2470                           status	equ	0xFD8
  2471                           
  2472 ;; *************** function _config_tx_aurt *****************
  2473 ;; Defined at:
  2474 ;;		line 3 in file "m_uart.c"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;		None
  2477 ;; Auto vars:     Size  Location     Type
  2478 ;;		None
  2479 ;; Return value:  Size  Location     Type
  2480 ;;		None               void
  2481 ;; Registers used:
  2482 ;;		wreg, status,2
  2483 ;; Tracked objects:
  2484 ;;		On entry : 0/0
  2485 ;;		On exit  : 0/0
  2486 ;;		Unchanged: 0/0
  2487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2492 ;;Total ram usage:        0 bytes
  2493 ;; Hardware stack levels used:    1
  2494 ;; This function calls:
  2495 ;;		Nothing
  2496 ;; This function is called by:
  2497 ;;		_set_ph
  2498 ;; This function uses a non-reentrant model
  2499 ;;
  2500                           
  2501                           	psect	text14
  2502  00F7FA                     __ptext14:
  2503                           	opt stack 0
  2504  00F7FA                     _config_tx_aurt:
  2505                           	opt stack 29
  2506                           
  2507                           ;m_uart.c: 5: SPBRGH=0x3;
  2508                           
  2509                           ;incstack = 0
  2510  00F7FA  0E03               	movlw	3
  2511  00F7FC  6EB0               	movwf	4016,c	;volatile
  2512                           
  2513                           ;m_uart.c: 7: SPBRG=0X40;
  2514  00F7FE  0E40               	movlw	64
  2515  00F800  6EAF               	movwf	4015,c	;volatile
  2516                           
  2517                           ;m_uart.c: 8: TXSTAbits.SYNC=0;
  2518  00F802  98AC               	bcf	4012,4,c	;volatile
  2519                           
  2520                           ;m_uart.c: 9: TXSTAbits.BRGH=1;
  2521  00F804  84AC               	bsf	4012,2,c	;volatile
  2522                           
  2523                           ;m_uart.c: 10: BAUDCONbits.BRG16=1;
  2524  00F806  86B8               	bsf	4024,3,c	;volatile
  2525                           
  2526                           ;m_uart.c: 11: TRISCbits.RC7=1;
  2527  00F808  8E94               	bsf	3988,7,c	;volatile
  2528                           
  2529                           ;m_uart.c: 12: TRISCbits.RC6=1;
  2530  00F80A  8C94               	bsf	3988,6,c	;volatile
  2531                           
  2532                           ;m_uart.c: 13: RCSTAbits.SPEN=1;
  2533  00F80C  8EAB               	bsf	4011,7,c	;volatile
  2534                           
  2535                           ;m_uart.c: 14: RCSTAbits.RX9=0;
  2536  00F80E  9CAB               	bcf	4011,6,c	;volatile
  2537  00F810  0012               	return		;funcret
  2538  00F812                     __end_of_config_tx_aurt:
  2539                           	opt stack 0
  2540                           tblptru	equ	0xFF8
  2541                           tblptrh	equ	0xFF7
  2542                           tblptrl	equ	0xFF6
  2543                           tablat	equ	0xFF5
  2544                           postinc0	equ	0xFEE
  2545                           wreg	equ	0xFE8
  2546                           postdec1	equ	0xFE5
  2547                           fsr1l	equ	0xFE1
  2548                           indf2	equ	0xFDF
  2549                           postinc2	equ	0xFDE
  2550                           fsr2h	equ	0xFDA
  2551                           fsr2l	equ	0xFD9
  2552                           status	equ	0xFD8
  2553                           
  2554 ;; *************** function _conf_adc *****************
  2555 ;; Defined at:
  2556 ;;		line 12 in file "adc.c"
  2557 ;; Parameters:    Size  Location     Type
  2558 ;;		None
  2559 ;; Auto vars:     Size  Location     Type
  2560 ;;		None
  2561 ;; Return value:  Size  Location     Type
  2562 ;;		None               void
  2563 ;; Registers used:
  2564 ;;		wreg, status,2
  2565 ;; Tracked objects:
  2566 ;;		On entry : 0/0
  2567 ;;		On exit  : 0/0
  2568 ;;		Unchanged: 0/0
  2569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2574 ;;Total ram usage:        0 bytes
  2575 ;; Hardware stack levels used:    1
  2576 ;; This function calls:
  2577 ;;		Nothing
  2578 ;; This function is called by:
  2579 ;;		_set_ph
  2580 ;; This function uses a non-reentrant model
  2581 ;;
  2582                           
  2583                           	psect	text15
  2584  00F868                     __ptext15:
  2585                           	opt stack 0
  2586  00F868                     _conf_adc:
  2587                           	opt stack 29
  2588                           
  2589                           ;adc.c: 13: TRISAbits.RA0=1;
  2590                           
  2591                           ;incstack = 0
  2592  00F868  8092               	bsf	3986,0,c	;volatile
  2593                           
  2594                           ;adc.c: 14: ANSELbits.ANS0=1;
  2595  00F86A  807E               	bsf	3966,0,c	;volatile
  2596                           
  2597                           ;adc.c: 15: ADCON2bits.ADCS=2;
  2598  00F86C  50C0               	movf	4032,w,c	;volatile
  2599  00F86E  0BF8               	andlw	-8
  2600  00F870  0902               	iorlw	2
  2601  00F872  6EC0               	movwf	4032,c	;volatile
  2602                           
  2603                           ;adc.c: 16: ADCON2bits.ACQT=2;
  2604  00F874  50C0               	movf	4032,w,c	;volatile
  2605  00F876  0BC7               	andlw	-57
  2606  00F878  0910               	iorlw	16
  2607  00F87A  6EC0               	movwf	4032,c	;volatile
  2608                           
  2609                           ;adc.c: 17: ADCON1=0;
  2610  00F87C  0E00               	movlw	0
  2611  00F87E  6EC1               	movwf	4033,c	;volatile
  2612                           
  2613                           ;adc.c: 18: ADCON0bits.CHS=0;
  2614  00F880  94C2               	bcf	4034,2,c	;volatile
  2615  00F882  96C2               	bcf	4034,3,c	;volatile
  2616  00F884  98C2               	bcf	4034,4,c	;volatile
  2617  00F886  9AC2               	bcf	4034,5,c	;volatile
  2618                           
  2619                           ;adc.c: 19: ADCON2bits.ADFM=1;;
  2620  00F888  8EC0               	bsf	4032,7,c	;volatile
  2621  00F88A  0012               	return		;funcret
  2622  00F88C                     __end_of_conf_adc:
  2623                           	opt stack 0
  2624                           tblptru	equ	0xFF8
  2625                           tblptrh	equ	0xFF7
  2626                           tblptrl	equ	0xFF6
  2627                           tablat	equ	0xFF5
  2628                           postinc0	equ	0xFEE
  2629                           wreg	equ	0xFE8
  2630                           postdec1	equ	0xFE5
  2631                           fsr1l	equ	0xFE1
  2632                           indf2	equ	0xFDF
  2633                           postinc2	equ	0xFDE
  2634                           fsr2h	equ	0xFDA
  2635                           fsr2l	equ	0xFD9
  2636                           status	equ	0xFD8
  2637                           
  2638 ;; *************** function _activacion_tx *****************
  2639 ;; Defined at:
  2640 ;;		line 20 in file "m_uart.c"
  2641 ;; Parameters:    Size  Location     Type
  2642 ;;  x               1    wreg     unsigned char 
  2643 ;; Auto vars:     Size  Location     Type
  2644 ;;  x               1    0[COMRAM] unsigned char 
  2645 ;; Return value:  Size  Location     Type
  2646 ;;		None               void
  2647 ;; Registers used:
  2648 ;;		wreg
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2655 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2657 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2658 ;;Total ram usage:        1 bytes
  2659 ;; Hardware stack levels used:    1
  2660 ;; This function calls:
  2661 ;;		Nothing
  2662 ;; This function is called by:
  2663 ;;		_set_ph
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           
  2667                           	psect	text16
  2668  00F7BA                     __ptext16:
  2669                           	opt stack 0
  2670  00F7BA                     _activacion_tx:
  2671                           	opt stack 29
  2672                           
  2673                           ;incstack = 0
  2674                           ;activacion_tx@x stored from wreg
  2675  00F7BA  6E2A               	movwf	activacion_tx@x,c
  2676                           
  2677                           ;m_uart.c: 21: TXSTAbits.TXEN=x;
  2678  00F7BC  B02A               	btfsc	activacion_tx@x,0,c
  2679  00F7BE  D002               	bra	u145
  2680  00F7C0  9AAC               	bcf	4012,5,c	;volatile
  2681  00F7C2  D001               	bra	u146
  2682  00F7C4                     u145:
  2683  00F7C4  8AAC               	bsf	4012,5,c	;volatile
  2684  00F7C6                     u146:
  2685  00F7C6  0012               	return		;funcret
  2686  00F7C8                     __end_of_activacion_tx:
  2687                           	opt stack 0
  2688                           tblptru	equ	0xFF8
  2689                           tblptrh	equ	0xFF7
  2690                           tblptrl	equ	0xFF6
  2691                           tablat	equ	0xFF5
  2692                           postinc0	equ	0xFEE
  2693                           wreg	equ	0xFE8
  2694                           postdec1	equ	0xFE5
  2695                           fsr1l	equ	0xFE1
  2696                           indf2	equ	0xFDF
  2697                           postinc2	equ	0xFDE
  2698                           fsr2h	equ	0xFDA
  2699                           fsr2l	equ	0xFD9
  2700                           status	equ	0xFD8
  2701                           
  2702 ;; *************** function _activacion_rx *****************
  2703 ;; Defined at:
  2704 ;;		line 24 in file "m_uart.c"
  2705 ;; Parameters:    Size  Location     Type
  2706 ;;  x               1    wreg     unsigned char 
  2707 ;; Auto vars:     Size  Location     Type
  2708 ;;  x               1    0[COMRAM] unsigned char 
  2709 ;; Return value:  Size  Location     Type
  2710 ;;		None               void
  2711 ;; Registers used:
  2712 ;;		wreg
  2713 ;; Tracked objects:
  2714 ;;		On entry : 0/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2719 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2721 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2722 ;;Total ram usage:        1 bytes
  2723 ;; Hardware stack levels used:    1
  2724 ;; This function calls:
  2725 ;;		Nothing
  2726 ;; This function is called by:
  2727 ;;		_set_ph
  2728 ;; This function uses a non-reentrant model
  2729 ;;
  2730                           
  2731                           	psect	text17
  2732  00F7AC                     __ptext17:
  2733                           	opt stack 0
  2734  00F7AC                     _activacion_rx:
  2735                           	opt stack 29
  2736                           
  2737                           ;incstack = 0
  2738                           ;activacion_rx@x stored from wreg
  2739  00F7AC  6E2A               	movwf	activacion_rx@x,c
  2740                           
  2741                           ;m_uart.c: 25: RCSTAbits.CREN=x;
  2742  00F7AE  B02A               	btfsc	activacion_rx@x,0,c
  2743  00F7B0  D002               	bra	u155
  2744  00F7B2  98AB               	bcf	4011,4,c	;volatile
  2745  00F7B4  D001               	bra	u156
  2746  00F7B6                     u155:
  2747  00F7B6  88AB               	bsf	4011,4,c	;volatile
  2748  00F7B8                     u156:
  2749  00F7B8  0012               	return		;funcret
  2750  00F7BA                     __end_of_activacion_rx:
  2751                           	opt stack 0
  2752                           tblptru	equ	0xFF8
  2753                           tblptrh	equ	0xFF7
  2754                           tblptrl	equ	0xFF6
  2755                           tablat	equ	0xFF5
  2756                           postinc0	equ	0xFEE
  2757                           wreg	equ	0xFE8
  2758                           postdec1	equ	0xFE5
  2759                           fsr1l	equ	0xFE1
  2760                           indf2	equ	0xFDF
  2761                           postinc2	equ	0xFDE
  2762                           fsr2h	equ	0xFDA
  2763                           fsr2l	equ	0xFD9
  2764                           status	equ	0xFD8
  2765                           
  2766 ;; *************** function _set_periodo *****************
  2767 ;; Defined at:
  2768 ;;		line 150 in file "main.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;  x               2    4[COMRAM] int 
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;		None
  2773 ;; Return value:  Size  Location     Type
  2774 ;;		None               void
  2775 ;; Registers used:
  2776 ;;		wreg, status,2, status,0
  2777 ;; Tracked objects:
  2778 ;;		On entry : 0/0
  2779 ;;		On exit  : 0/0
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2782 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2785 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2786 ;;Total ram usage:        2 bytes
  2787 ;; Hardware stack levels used:    1
  2788 ;; This function calls:
  2789 ;;		Nothing
  2790 ;; This function is called by:
  2791 ;;		_main
  2792 ;; This function uses a non-reentrant model
  2793 ;;
  2794                           
  2795                           	psect	text18
  2796  00FC50                     __ptext18:
  2797                           	opt stack 0
  2798  00FC50                     _set_periodo:
  2799                           	opt stack 30
  2800                           
  2801                           ;main.c: 151: if (x<=200)
  2802                           
  2803                           ;incstack = 0
  2804  00FC50  BE2F               	btfsc	set_periodo@x+1,7,c
  2805  00FC52  D006               	goto	l1508
  2806  00FC54  502F               	movf	set_periodo@x+1,w,c
  2807  00FC56  E107               	bnz	l1510
  2808  00FC58  0EC9               	movlw	201
  2809  00FC5A  5C2E               	subwf	set_periodo@x,w,c
  2810  00FC5C  B0D8               	btfsc	status,0,c
  2811  00FC5E  D003               	goto	l1510
  2812  00FC60                     l1508:
  2813                           
  2814                           ;main.c: 152: periodo=10;
  2815  00FC60  0E0A               	movlw	10
  2816  00FC62  6E27               	movwf	_periodo,c
  2817  00FC64  0012               	return	
  2818  00FC66                     l1510:
  2819                           
  2820                           ;main.c: 153: else if (x>=201 && x<=500)
  2821  00FC66  BE2F               	btfsc	set_periodo@x+1,7,c
  2822  00FC68  D011               	goto	l1516
  2823  00FC6A  502F               	movf	set_periodo@x+1,w,c
  2824  00FC6C  E104               	bnz	u610
  2825  00FC6E  0EC9               	movlw	201
  2826  00FC70  5C2E               	subwf	set_periodo@x,w,c
  2827  00FC72  A0D8               	btfss	status,0,c
  2828  00FC74  D00B               	goto	l1516
  2829  00FC76                     u610:
  2830  00FC76  BE2F               	btfsc	set_periodo@x+1,7,c
  2831  00FC78  D006               	goto	l1514
  2832  00FC7A  0EF5               	movlw	245
  2833  00FC7C  5C2E               	subwf	set_periodo@x,w,c
  2834  00FC7E  0E01               	movlw	1
  2835  00FC80  582F               	subwfb	set_periodo@x+1,w,c
  2836  00FC82  B0D8               	btfsc	status,0,c
  2837  00FC84  D003               	goto	l1516
  2838  00FC86                     l1514:
  2839                           
  2840                           ;main.c: 154: periodo=20;
  2841  00FC86  0E14               	movlw	20
  2842  00FC88  6E27               	movwf	_periodo,c
  2843  00FC8A  0012               	return	
  2844  00FC8C                     l1516:
  2845                           
  2846                           ;main.c: 155: else if (x>=501 && x<=700)
  2847  00FC8C  BE2F               	btfsc	set_periodo@x+1,7,c
  2848  00FC8E  D011               	goto	l1522
  2849  00FC90  0EF5               	movlw	245
  2850  00FC92  5C2E               	subwf	set_periodo@x,w,c
  2851  00FC94  0E01               	movlw	1
  2852  00FC96  582F               	subwfb	set_periodo@x+1,w,c
  2853  00FC98  A0D8               	btfss	status,0,c
  2854  00FC9A  D00B               	goto	l1522
  2855  00FC9C  BE2F               	btfsc	set_periodo@x+1,7,c
  2856  00FC9E  D006               	goto	l1520
  2857  00FCA0  0EBD               	movlw	189
  2858  00FCA2  5C2E               	subwf	set_periodo@x,w,c
  2859  00FCA4  0E02               	movlw	2
  2860  00FCA6  582F               	subwfb	set_periodo@x+1,w,c
  2861  00FCA8  B0D8               	btfsc	status,0,c
  2862  00FCAA  D003               	goto	l1522
  2863  00FCAC                     l1520:
  2864                           
  2865                           ;main.c: 156: periodo=30;
  2866  00FCAC  0E1E               	movlw	30
  2867  00FCAE  6E27               	movwf	_periodo,c
  2868  00FCB0  0012               	return	
  2869  00FCB2                     l1522:
  2870                           
  2871                           ;main.c: 157: else if (x>=701 && x<=900)
  2872  00FCB2  BE2F               	btfsc	set_periodo@x+1,7,c
  2873  00FCB4  D011               	goto	l1528
  2874  00FCB6  0EBD               	movlw	189
  2875  00FCB8  5C2E               	subwf	set_periodo@x,w,c
  2876  00FCBA  0E02               	movlw	2
  2877  00FCBC  582F               	subwfb	set_periodo@x+1,w,c
  2878  00FCBE  A0D8               	btfss	status,0,c
  2879  00FCC0  D00B               	goto	l1528
  2880  00FCC2  BE2F               	btfsc	set_periodo@x+1,7,c
  2881  00FCC4  D006               	goto	l1526
  2882  00FCC6  0E85               	movlw	133
  2883  00FCC8  5C2E               	subwf	set_periodo@x,w,c
  2884  00FCCA  0E03               	movlw	3
  2885  00FCCC  582F               	subwfb	set_periodo@x+1,w,c
  2886  00FCCE  B0D8               	btfsc	status,0,c
  2887  00FCD0  D003               	goto	l1528
  2888  00FCD2                     l1526:
  2889                           
  2890                           ;main.c: 158: periodo=40;
  2891  00FCD2  0E28               	movlw	40
  2892  00FCD4  6E27               	movwf	_periodo,c
  2893  00FCD6  0012               	return	
  2894  00FCD8                     l1528:
  2895                           
  2896                           ;main.c: 159: else if (x>=901 && x<=1120)
  2897  00FCD8  BE2F               	btfsc	set_periodo@x+1,7,c
  2898  00FCDA  0012               	return	
  2899  00FCDC  0E85               	movlw	133
  2900  00FCDE  5C2E               	subwf	set_periodo@x,w,c
  2901  00FCE0  0E03               	movlw	3
  2902  00FCE2  582F               	subwfb	set_periodo@x+1,w,c
  2903  00FCE4  A0D8               	btfss	status,0,c
  2904  00FCE6  0012               	return	
  2905  00FCE8  BE2F               	btfsc	set_periodo@x+1,7,c
  2906  00FCEA  D006               	goto	l1532
  2907  00FCEC  0E61               	movlw	97
  2908  00FCEE  5C2E               	subwf	set_periodo@x,w,c
  2909  00FCF0  0E04               	movlw	4
  2910  00FCF2  582F               	subwfb	set_periodo@x+1,w,c
  2911  00FCF4  B0D8               	btfsc	status,0,c
  2912  00FCF6  0012               	return	
  2913  00FCF8                     l1532:
  2914                           
  2915                           ;main.c: 160: periodo=60;
  2916  00FCF8  0E3C               	movlw	60
  2917  00FCFA  6E27               	movwf	_periodo,c
  2918  00FCFC  0012               	return	
  2919  00FCFE                     __end_of_set_periodo:
  2920                           	opt stack 0
  2921                           tblptru	equ	0xFF8
  2922                           tblptrh	equ	0xFF7
  2923                           tblptrl	equ	0xFF6
  2924                           tablat	equ	0xFF5
  2925                           postinc0	equ	0xFEE
  2926                           wreg	equ	0xFE8
  2927                           postdec1	equ	0xFE5
  2928                           fsr1l	equ	0xFE1
  2929                           indf2	equ	0xFDF
  2930                           postinc2	equ	0xFDE
  2931                           fsr2h	equ	0xFDA
  2932                           fsr2l	equ	0xFD9
  2933                           status	equ	0xFD8
  2934                           
  2935 ;; *************** function _set_comandos *****************
  2936 ;; Defined at:
  2937 ;;		line 163 in file "main.c"
  2938 ;; Parameters:    Size  Location     Type
  2939 ;;  c               1    wreg     unsigned char 
  2940 ;; Auto vars:     Size  Location     Type
  2941 ;;  c               1    0[COMRAM] unsigned char 
  2942 ;;  d               1    1[COMRAM] unsigned char 
  2943 ;; Return value:  Size  Location     Type
  2944 ;;                  1    wreg      unsigned char 
  2945 ;; Registers used:
  2946 ;;		wreg, status,2, status,0
  2947 ;; Tracked objects:
  2948 ;;		On entry : 0/0
  2949 ;;		On exit  : 0/0
  2950 ;;		Unchanged: 0/0
  2951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2953 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2955 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2956 ;;Total ram usage:        2 bytes
  2957 ;; Hardware stack levels used:    1
  2958 ;; This function calls:
  2959 ;;		Nothing
  2960 ;; This function is called by:
  2961 ;;		_main
  2962 ;; This function uses a non-reentrant model
  2963 ;;
  2964                           
  2965                           	psect	text19
  2966  00FA88                     __ptext19:
  2967                           	opt stack 0
  2968  00FA88                     _set_comandos:
  2969                           	opt stack 30
  2970                           
  2971                           ;incstack = 0
  2972                           ;set_comandos@c stored from wreg
  2973  00FA88  6E2A               	movwf	set_comandos@c,c
  2974                           
  2975                           ;main.c: 164: unsigned char d=0;
  2976  00FA8A  0E00               	movlw	0
  2977  00FA8C  6E2B               	movwf	set_comandos@d,c
  2978                           
  2979                           ;main.c: 165: switch (c){
  2980  00FA8E  D013               	goto	l1160
  2981  00FA90                     l1144:
  2982                           
  2983                           ;main.c: 167: sec=0;
  2984  00FA90  0E00               	movlw	0
  2985  00FA92  D005               	goto	L3
  2986  00FA94                     l1146:
  2987                           
  2988                           ;main.c: 171: sec=1;
  2989  00FA94  0E01               	movlw	1
  2990  00FA96  D003               	goto	L3
  2991  00FA98                     l1148:
  2992                           
  2993                           ;main.c: 175: sec=2;
  2994  00FA98  0E02               	movlw	2
  2995  00FA9A  D001               	goto	L3
  2996  00FA9C                     l1150:
  2997                           
  2998                           ;main.c: 179: sec=3;
  2999  00FA9C  0E03               	movlw	3
  3000  00FA9E                     L3:
  3001  00FA9E  6E44               	movwf	_sec,c
  3002  00FAA0  D002               	goto	L4
  3003  00FAA2                     l1152:
  3004                           
  3005                           ;main.c: 183: x=0;
  3006  00FAA2  0E00               	movlw	0
  3007  00FAA4  D004               	goto	L5
  3008  00FAA6                     L4:
  3009                           
  3010                           ;main.c: 184: d=1;
  3011  00FAA6  0E01               	movlw	1
  3012  00FAA8  6E2B               	movwf	set_comandos@d,c
  3013                           
  3014                           ;main.c: 185: break;
  3015  00FAAA  D019               	goto	l142
  3016  00FAAC                     l1154:
  3017                           
  3018                           ;main.c: 187: x=1;
  3019  00FAAC  0E01               	movlw	1
  3020  00FAAE                     L5:
  3021  00FAAE  6E46               	movwf	_x,c
  3022  00FAB0  D7FA               	goto	L4
  3023  00FAB2                     l1156:
  3024                           
  3025                           ;main.c: 191: d=0;
  3026  00FAB2  0E00               	movlw	0
  3027  00FAB4  D7F9               	goto	L6
  3028  00FAB6                     l1160:
  3029  00FAB6  502A               	movf	set_comandos@c,w,c
  3030                           
  3031                           ; Switch size 1, requested type "space"
  3032                           ; Number of cases is 6, Range of values is 108 to 118
  3033                           ; switch strategies available:
  3034                           ; Name         Instructions Cycles
  3035                           ; simple_byte           19    10 (average)
  3036                           ;	Chosen strategy is simple_byte
  3037  00FAB8  0A6C               	xorlw	108	; case 108
  3038  00FABA  B4D8               	btfsc	status,2,c
  3039  00FABC  D7EB               	goto	l1146
  3040  00FABE  0A02               	xorlw	2	; case 110
  3041  00FAC0  B4D8               	btfsc	status,2,c
  3042  00FAC2  D7EF               	goto	l1152
  3043  00FAC4  0A1C               	xorlw	28	; case 114
  3044  00FAC6  B4D8               	btfsc	status,2,c
  3045  00FAC8  D7E3               	goto	l1144
  3046  00FACA  0A01               	xorlw	1	; case 115
  3047  00FACC  B4D8               	btfsc	status,2,c
  3048  00FACE  D7E6               	goto	l1150
  3049  00FAD0  0A07               	xorlw	7	; case 116
  3050  00FAD2  B4D8               	btfsc	status,2,c
  3051  00FAD4  D7EB               	goto	l1154
  3052  00FAD6  0A02               	xorlw	2	; case 118
  3053  00FAD8  B4D8               	btfsc	status,2,c
  3054  00FADA  D7DE               	goto	l1148
  3055  00FADC  D7EA               	goto	l1156
  3056  00FADE                     l142:
  3057                           
  3058                           ;main.c: 194: return d;
  3059  00FADE  502B               	movf	set_comandos@d,w,c
  3060  00FAE0  0012               	return		;funcret
  3061  00FAE2                     __end_of_set_comandos:
  3062                           	opt stack 0
  3063                           tblptru	equ	0xFF8
  3064                           tblptrh	equ	0xFF7
  3065                           tblptrl	equ	0xFF6
  3066                           tablat	equ	0xFF5
  3067                           postinc0	equ	0xFEE
  3068                           wreg	equ	0xFE8
  3069                           postdec1	equ	0xFE5
  3070                           fsr1l	equ	0xFE1
  3071                           indf2	equ	0xFDF
  3072                           postinc2	equ	0xFDE
  3073                           fsr2h	equ	0xFDA
  3074                           fsr2l	equ	0xFD9
  3075                           status	equ	0xFD8
  3076                           
  3077 ;; *************** function _read_d *****************
  3078 ;; Defined at:
  3079 ;;		line 45 in file "m_uart.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;		None
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;		None
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  2    0[COMRAM] int 
  3086 ;; Registers used:
  3087 ;;		wreg, status,2
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3093 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3096 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3097 ;;Total ram usage:        2 bytes
  3098 ;; Hardware stack levels used:    1
  3099 ;; This function calls:
  3100 ;;		Nothing
  3101 ;; This function is called by:
  3102 ;;		_main
  3103 ;; This function uses a non-reentrant model
  3104 ;;
  3105                           
  3106                           	psect	text20
  3107  00F7E4                     __ptext20:
  3108                           	opt stack 0
  3109  00F7E4                     _read_d:
  3110                           	opt stack 30
  3111                           
  3112                           ;m_uart.c: 46: if (PIR1bits.RCIF==1)
  3113                           
  3114                           ;incstack = 0
  3115  00F7E4  AA9E               	btfss	3998,5,c	;volatile
  3116  00F7E6  D004               	goto	l1652
  3117                           
  3118                           ;m_uart.c: 47: return RCREG;
  3119  00F7E8  CFAE F02A          	movff	4014,?_read_d	;volatile
  3120  00F7EC  6A2B               	clrf	?_read_d+1,c
  3121  00F7EE  0012               	return	
  3122  00F7F0                     l1652:
  3123                           
  3124                           ;m_uart.c: 48: else
  3125                           ;m_uart.c: 49: return 0;
  3126  00F7F0  0E00               	movlw	0
  3127  00F7F2  6E2B               	movwf	?_read_d+1,c
  3128  00F7F4  0E00               	movlw	0
  3129  00F7F6  6E2A               	movwf	?_read_d,c
  3130  00F7F8  0012               	return	
  3131  00F7FA                     __end_of_read_d:
  3132                           	opt stack 0
  3133                           tblptru	equ	0xFF8
  3134                           tblptrh	equ	0xFF7
  3135                           tblptrl	equ	0xFF6
  3136                           tablat	equ	0xFF5
  3137                           postinc0	equ	0xFEE
  3138                           wreg	equ	0xFE8
  3139                           postdec1	equ	0xFE5
  3140                           fsr1l	equ	0xFE1
  3141                           indf2	equ	0xFDF
  3142                           postinc2	equ	0xFDE
  3143                           fsr2h	equ	0xFDA
  3144                           fsr2l	equ	0xFD9
  3145                           status	equ	0xFD8
  3146                           
  3147 ;; *************** function _pulsador_s2 *****************
  3148 ;; Defined at:
  3149 ;;		line 108 in file "main.c"
  3150 ;; Parameters:    Size  Location     Type
  3151 ;;		None
  3152 ;; Auto vars:     Size  Location     Type
  3153 ;;  n               1    0[COMRAM] unsigned char 
  3154 ;; Return value:  Size  Location     Type
  3155 ;;                  1    wreg      unsigned char 
  3156 ;; Registers used:
  3157 ;;		wreg, status,2, status,0
  3158 ;; Tracked objects:
  3159 ;;		On entry : 0/0
  3160 ;;		On exit  : 0/0
  3161 ;;		Unchanged: 0/0
  3162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3164 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3166 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3167 ;;Total ram usage:        1 bytes
  3168 ;; Hardware stack levels used:    1
  3169 ;; This function calls:
  3170 ;;		Nothing
  3171 ;; This function is called by:
  3172 ;;		_main
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175                           
  3176                           	psect	text21
  3177  00F8DE                     __ptext21:
  3178                           	opt stack 0
  3179  00F8DE                     _pulsador_s2:
  3180                           	opt stack 30
  3181                           
  3182                           ;main.c: 109: unsigned char n=0;
  3183                           
  3184                           ;incstack = 0
  3185  00F8DE  0E00               	movlw	0
  3186  00F8E0  6E2A               	movwf	pulsador_s2@n,c
  3187                           
  3188                           ;main.c: 110: switch (ss){
  3189  00F8E2  D00D               	goto	l1092
  3190  00F8E4                     l109:
  3191                           
  3192                           ;main.c: 112: if (PORTAbits.RA5==0){
  3193  00F8E4  BA80               	btfsc	3968,5,c	;volatile
  3194  00F8E6  D012               	goto	l1094
  3195                           
  3196                           ;main.c: 113: ss=1;
  3197  00F8E8  0E01               	movlw	1
  3198  00F8EA  6E45               	movwf	_ss,c
  3199                           
  3200                           ;main.c: 114: n=0;
  3201  00F8EC  0E00               	movlw	0
  3202  00F8EE  D005               	goto	L7
  3203  00F8F0                     l112:
  3204                           
  3205                           ;main.c: 118: if (PORTAbits.RA5==1){
  3206  00F8F0  AA80               	btfss	3968,5,c	;volatile
  3207  00F8F2  D00C               	goto	l1094
  3208                           
  3209                           ;main.c: 119: ss=0;
  3210  00F8F4  0E00               	movlw	0
  3211  00F8F6  6E45               	movwf	_ss,c
  3212                           
  3213                           ;main.c: 120: n=1;
  3214  00F8F8  0E01               	movlw	1
  3215  00F8FA                     L7:
  3216  00F8FA  6E2A               	movwf	pulsador_s2@n,c
  3217                           
  3218                           ;main.c: 125: }
  3219                           
  3220                           ;main.c: 124: break;
  3221                           
  3222                           ;main.c: 123: default:
  3223                           
  3224                           ;main.c: 121: }
  3225                           ;main.c: 122: break;
  3226  00F8FC  D007               	goto	l1094
  3227  00F8FE                     l1092:
  3228  00F8FE  5045               	movf	_ss,w,c
  3229                           
  3230                           ; Switch size 1, requested type "space"
  3231                           ; Number of cases is 2, Range of values is 0 to 1
  3232                           ; switch strategies available:
  3233                           ; Name         Instructions Cycles
  3234                           ; simple_byte            7     4 (average)
  3235                           ;	Chosen strategy is simple_byte
  3236  00F900  0A00               	xorlw	0	; case 0
  3237  00F902  B4D8               	btfsc	status,2,c
  3238  00F904  D7EF               	goto	l109
  3239  00F906  0A01               	xorlw	1	; case 1
  3240  00F908  B4D8               	btfsc	status,2,c
  3241  00F90A  D7F2               	goto	l112
  3242  00F90C                     l1094:
  3243                           
  3244                           ;main.c: 126: return n;
  3245  00F90C  502A               	movf	pulsador_s2@n,w,c
  3246  00F90E  0012               	return	
  3247  00F910                     __end_of_pulsador_s2:
  3248                           	opt stack 0
  3249                           tblptru	equ	0xFF8
  3250                           tblptrh	equ	0xFF7
  3251                           tblptrl	equ	0xFF6
  3252                           tablat	equ	0xFF5
  3253                           postinc0	equ	0xFEE
  3254                           wreg	equ	0xFE8
  3255                           postdec1	equ	0xFE5
  3256                           fsr1l	equ	0xFE1
  3257                           indf2	equ	0xFDF
  3258                           postinc2	equ	0xFDE
  3259                           fsr2h	equ	0xFDA
  3260                           fsr2l	equ	0xFD9
  3261                           status	equ	0xFD8
  3262                           
  3263 ;; *************** function _flag_timer_1 *****************
  3264 ;; Defined at:
  3265 ;;		line 20 in file "timer.c"
  3266 ;; Parameters:    Size  Location     Type
  3267 ;;		None
  3268 ;; Auto vars:     Size  Location     Type
  3269 ;;		None
  3270 ;; Return value:  Size  Location     Type
  3271 ;;                  2    2[COMRAM] int 
  3272 ;; Registers used:
  3273 ;;		wreg, status,2, cstack
  3274 ;; Tracked objects:
  3275 ;;		On entry : 0/0
  3276 ;;		On exit  : 0/0
  3277 ;;		Unchanged: 0/0
  3278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3279 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3282 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3283 ;;Total ram usage:        2 bytes
  3284 ;; Hardware stack levels used:    1
  3285 ;; Hardware stack levels required when called:    1
  3286 ;; This function calls:
  3287 ;;		_timer_1_set
  3288 ;;		_timer_1_star
  3289 ;; This function is called by:
  3290 ;;		_main
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294                           	psect	text22
  3295  00F88C                     __ptext22:
  3296                           	opt stack 0
  3297  00F88C                     _flag_timer_1:
  3298                           	opt stack 29
  3299                           
  3300                           ;timer.c: 21: if(PIR1bits.TMR1IF){
  3301                           
  3302                           ;incstack = 0
  3303  00F88C  A09E               	btfss	3998,0,c	;volatile
  3304  00F88E  D00D               	goto	l1560
  3305                           
  3306                           ;timer.c: 22: PIR1bits.TMR1IF=0;
  3307  00F890  909E               	bcf	3998,0,c	;volatile
  3308                           
  3309                           ;timer.c: 23: timer_1_set(0x3B,0xF6);
  3310  00F892  0EF6               	movlw	246
  3311  00F894  6E2A               	movwf	timer_1_set@high,c
  3312  00F896  0E3B               	movlw	59
  3313  00F898  ECC3  F07B         	call	_timer_1_set
  3314                           
  3315                           ;timer.c: 24: timer_1_star();
  3316  00F89C  ECBF  F07B         	call	_timer_1_star	;wreg free
  3317                           
  3318                           ;timer.c: 25: return 1;
  3319  00F8A0  0E00               	movlw	0
  3320  00F8A2  6E2D               	movwf	?_flag_timer_1+1,c
  3321  00F8A4  0E01               	movlw	1
  3322  00F8A6  6E2C               	movwf	?_flag_timer_1,c
  3323                           
  3324                           ;timer.c: 26: }
  3325  00F8A8  0012               	return	
  3326  00F8AA                     l1560:
  3327                           
  3328                           ;timer.c: 27: else
  3329                           ;timer.c: 28: return 0;
  3330  00F8AA  0E00               	movlw	0
  3331  00F8AC  6E2D               	movwf	?_flag_timer_1+1,c
  3332  00F8AE  0E00               	movlw	0
  3333  00F8B0  6E2C               	movwf	?_flag_timer_1,c
  3334  00F8B2  0012               	return	
  3335  00F8B4                     __end_of_flag_timer_1:
  3336                           	opt stack 0
  3337                           tblptru	equ	0xFF8
  3338                           tblptrh	equ	0xFF7
  3339                           tblptrl	equ	0xFF6
  3340                           tablat	equ	0xFF5
  3341                           postinc0	equ	0xFEE
  3342                           wreg	equ	0xFE8
  3343                           postdec1	equ	0xFE5
  3344                           fsr1l	equ	0xFE1
  3345                           indf2	equ	0xFDF
  3346                           postinc2	equ	0xFDE
  3347                           fsr2h	equ	0xFDA
  3348                           fsr2l	equ	0xFD9
  3349                           status	equ	0xFD8
  3350                           
  3351 ;; *************** function _timer_1_star *****************
  3352 ;; Defined at:
  3353 ;;		line 16 in file "timer.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;		None
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;		None
  3358 ;; Return value:  Size  Location     Type
  3359 ;;		None               void
  3360 ;; Registers used:
  3361 ;;		None
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3371 ;;Total ram usage:        0 bytes
  3372 ;; Hardware stack levels used:    1
  3373 ;; This function calls:
  3374 ;;		Nothing
  3375 ;; This function is called by:
  3376 ;;		_set_ph
  3377 ;;		_flag_timer_1
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           	psect	text23
  3382  00F77E                     __ptext23:
  3383                           	opt stack 0
  3384  00F77E                     _timer_1_star:
  3385                           	opt stack 29
  3386                           
  3387                           ;timer.c: 17: T1CONbits.TMR1ON=1;
  3388                           
  3389                           ;incstack = 0
  3390  00F77E  80CD               	bsf	4045,0,c	;volatile
  3391  00F780  0012               	return		;funcret
  3392  00F782                     __end_of_timer_1_star:
  3393                           	opt stack 0
  3394                           tblptru	equ	0xFF8
  3395                           tblptrh	equ	0xFF7
  3396                           tblptrl	equ	0xFF6
  3397                           tablat	equ	0xFF5
  3398                           postinc0	equ	0xFEE
  3399                           wreg	equ	0xFE8
  3400                           postdec1	equ	0xFE5
  3401                           fsr1l	equ	0xFE1
  3402                           indf2	equ	0xFDF
  3403                           postinc2	equ	0xFDE
  3404                           fsr2h	equ	0xFDA
  3405                           fsr2l	equ	0xFD9
  3406                           status	equ	0xFD8
  3407                           
  3408 ;; *************** function _timer_1_set *****************
  3409 ;; Defined at:
  3410 ;;		line 12 in file "timer.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;  low             1    wreg     unsigned char 
  3413 ;;  high            1    0[COMRAM] unsigned char 
  3414 ;; Auto vars:     Size  Location     Type
  3415 ;;  low             1    1[COMRAM] unsigned char 
  3416 ;; Return value:  Size  Location     Type
  3417 ;;		None               void
  3418 ;; Registers used:
  3419 ;;		wreg
  3420 ;; Tracked objects:
  3421 ;;		On entry : 0/0
  3422 ;;		On exit  : 0/0
  3423 ;;		Unchanged: 0/0
  3424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3425 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3426 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3428 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3429 ;;Total ram usage:        2 bytes
  3430 ;; Hardware stack levels used:    1
  3431 ;; This function calls:
  3432 ;;		Nothing
  3433 ;; This function is called by:
  3434 ;;		_set_ph
  3435 ;;		_flag_timer_1
  3436 ;; This function uses a non-reentrant model
  3437 ;;
  3438                           
  3439                           	psect	text24
  3440  00F786                     __ptext24:
  3441                           	opt stack 0
  3442  00F786                     _timer_1_set:
  3443                           	opt stack 29
  3444                           
  3445                           ;incstack = 0
  3446                           ;timer_1_set@low stored from wreg
  3447  00F786  6E2B               	movwf	timer_1_set@low,c
  3448                           
  3449                           ;timer.c: 13: TMR1H=high;
  3450  00F788  C02A  FFCF         	movff	timer_1_set@high,4047	;volatile
  3451                           
  3452                           ;timer.c: 14: TMR1L=low;
  3453  00F78C  C02B  FFCE         	movff	timer_1_set@low,4046	;volatile
  3454  00F790  0012               	return		;funcret
  3455  00F792                     __end_of_timer_1_set:
  3456                           	opt stack 0
  3457                           tblptru	equ	0xFF8
  3458                           tblptrh	equ	0xFF7
  3459                           tblptrl	equ	0xFF6
  3460                           tablat	equ	0xFF5
  3461                           postinc0	equ	0xFEE
  3462                           wreg	equ	0xFE8
  3463                           postdec1	equ	0xFE5
  3464                           fsr1l	equ	0xFE1
  3465                           indf2	equ	0xFDF
  3466                           postinc2	equ	0xFDE
  3467                           fsr2h	equ	0xFDA
  3468                           fsr2l	equ	0xFD9
  3469                           status	equ	0xFD8
  3470                           
  3471 ;; *************** function _final_convercion *****************
  3472 ;; Defined at:
  3473 ;;		line 31 in file "adc.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;		None
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;		None
  3478 ;; Return value:  Size  Location     Type
  3479 ;;                  1    wreg      unsigned char 
  3480 ;; Registers used:
  3481 ;;		wreg
  3482 ;; Tracked objects:
  3483 ;;		On entry : 0/0
  3484 ;;		On exit  : 0/0
  3485 ;;		Unchanged: 0/0
  3486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3491 ;;Total ram usage:        0 bytes
  3492 ;; Hardware stack levels used:    1
  3493 ;; This function calls:
  3494 ;;		Nothing
  3495 ;; This function is called by:
  3496 ;;		_main
  3497 ;; This function uses a non-reentrant model
  3498 ;;
  3499                           
  3500                           	psect	text25
  3501  00F79E                     __ptext25:
  3502                           	opt stack 0
  3503  00F79E                     _final_convercion:
  3504                           	opt stack 30
  3505                           
  3506                           ;adc.c: 32: if (PIR1bits.ADIF){
  3507                           
  3508                           ;incstack = 0
  3509  00F79E  AC9E               	btfss	3998,6,c	;volatile
  3510  00F7A0  D003               	goto	l1296
  3511                           
  3512                           ;adc.c: 33: PIR1bits.ADIF=0;
  3513  00F7A2  9C9E               	bcf	3998,6,c	;volatile
  3514                           
  3515                           ;adc.c: 34: return 1;
  3516  00F7A4  0E01               	movlw	1
  3517                           
  3518                           ;adc.c: 35: }
  3519  00F7A6  0012               	return	
  3520  00F7A8                     l1296:
  3521                           
  3522                           ;adc.c: 36: else
  3523                           ;adc.c: 37: return 0;
  3524  00F7A8  0E00               	movlw	0
  3525  00F7AA  0012               	return	
  3526  00F7AC                     __end_of_final_convercion:
  3527                           	opt stack 0
  3528                           tblptru	equ	0xFF8
  3529                           tblptrh	equ	0xFF7
  3530                           tblptrl	equ	0xFF6
  3531                           tablat	equ	0xFF5
  3532                           postinc0	equ	0xFEE
  3533                           wreg	equ	0xFE8
  3534                           postdec1	equ	0xFE5
  3535                           fsr1l	equ	0xFE1
  3536                           indf2	equ	0xFDF
  3537                           postinc2	equ	0xFDE
  3538                           fsr2h	equ	0xFDA
  3539                           fsr2l	equ	0xFD9
  3540                           status	equ	0xFD8
  3541                           
  3542 ;; *************** function _dato_16 *****************
  3543 ;; Defined at:
  3544 ;;		line 46 in file "adc.c"
  3545 ;; Parameters:    Size  Location     Type
  3546 ;;		None
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;  y               2    2[COMRAM] unsigned int 
  3549 ;; Return value:  Size  Location     Type
  3550 ;;                  2    0[COMRAM] int 
  3551 ;; Registers used:
  3552 ;;		wreg, status,2, status,0
  3553 ;; Tracked objects:
  3554 ;;		On entry : 0/0
  3555 ;;		On exit  : 0/0
  3556 ;;		Unchanged: 0/0
  3557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3558 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3559 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3561 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3562 ;;Total ram usage:        4 bytes
  3563 ;; Hardware stack levels used:    1
  3564 ;; This function calls:
  3565 ;;		Nothing
  3566 ;; This function is called by:
  3567 ;;		_main
  3568 ;; This function uses a non-reentrant model
  3569 ;;
  3570                           
  3571                           	psect	text26
  3572  00F846                     __ptext26:
  3573                           	opt stack 0
  3574  00F846                     _dato_16:
  3575                           	opt stack 30
  3576                           
  3577                           ;adc.c: 47: unsigned int y=0;
  3578                           
  3579                           ;incstack = 0
  3580  00F846  0E00               	movlw	0
  3581  00F848  6E2D               	movwf	dato_16@y+1,c
  3582  00F84A  0E00               	movlw	0
  3583  00F84C  6E2C               	movwf	dato_16@y,c
  3584                           
  3585                           ;adc.c: 48: y=ADRESH;
  3586  00F84E  CFC4 F02C          	movff	4036,dato_16@y	;volatile
  3587  00F852  6A2D               	clrf	dato_16@y+1,c
  3588                           
  3589                           ;adc.c: 49: y<<=8;
  3590  00F854  502C               	movf	dato_16@y,w,c
  3591  00F856  6E2D               	movwf	dato_16@y+1,c
  3592  00F858  6A2C               	clrf	dato_16@y,c
  3593                           
  3594                           ;adc.c: 50: y|=ADRESL;
  3595  00F85A  50C3               	movf	4035,w,c	;volatile
  3596  00F85C  122C               	iorwf	dato_16@y,f,c
  3597                           
  3598                           ;adc.c: 51: return y;
  3599  00F85E  C02C  F02A         	movff	dato_16@y,?_dato_16
  3600  00F862  C02D  F02B         	movff	dato_16@y+1,?_dato_16+1
  3601  00F866  0012               	return	
  3602  00F868                     __end_of_dato_16:
  3603                           	opt stack 0
  3604  0000                     tblptru	equ	0xFF8
  3605                           tblptrh	equ	0xFF7
  3606                           tblptrl	equ	0xFF6
  3607                           tablat	equ	0xFF5
  3608                           postinc0	equ	0xFEE
  3609                           wreg	equ	0xFE8
  3610                           postdec1	equ	0xFE5
  3611                           fsr1l	equ	0xFE1
  3612                           indf2	equ	0xFDF
  3613                           postinc2	equ	0xFDE
  3614                           fsr2h	equ	0xFDA
  3615                           fsr2l	equ	0xFD9
  3616                           status	equ	0xFD8
  3617                           tblptru	equ	0xFF8
  3618                           tblptrh	equ	0xFF7
  3619                           tblptrl	equ	0xFF6
  3620                           tablat	equ	0xFF5
  3621                           postinc0	equ	0xFEE
  3622                           wreg	equ	0xFE8
  3623                           postdec1	equ	0xFE5
  3624                           fsr1l	equ	0xFE1
  3625                           indf2	equ	0xFDF
  3626                           postinc2	equ	0xFDE
  3627                           fsr2h	equ	0xFDA
  3628                           fsr2l	equ	0xFD9
  3629                           status	equ	0xFD8
  3630                           
  3631                           	psect	rparam
  3632  0000                     tblptru	equ	0xFF8
  3633                           tblptrh	equ	0xFF7
  3634                           tblptrl	equ	0xFF6
  3635                           tablat	equ	0xFF5
  3636                           postinc0	equ	0xFEE
  3637                           wreg	equ	0xFE8
  3638                           postdec1	equ	0xFE5
  3639                           fsr1l	equ	0xFE1
  3640                           indf2	equ	0xFDF
  3641                           postinc2	equ	0xFDE
  3642                           fsr2h	equ	0xFDA
  3643                           fsr2l	equ	0xFD9
  3644                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        281
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     19      70
    BANK0           160      0     156
    BANK1           256      0      84
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_set_periodo
    _transmitir->_trans_dato
    _set_secuencia->_vasculante
    _vasculante->_rotar_derecha
    _vasculante->_rotar_izquierda
    _rotar_izquierda->_port
    _rotar_derecha->_port
    _shit_raid->_port
    _set_ph->_timer_1_set
    _set_periodo->_dato_16
    _flag_timer_1->_timer_1_set

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13     8      5    1102
                                              6 COMRAM    13     8      5
                            _dato_16
                   _final_convercion
                       _flag_timer_1
                        _pulsador_s2
                             _read_d
                       _set_comandos
                        _set_periodo
                             _set_ph
                      _set_secuencia
                    _star_convercion
                         _transmitir
 ---------------------------------------------------------------------------------
 (1) _transmitir                                           2     2      0      22
                                              1 COMRAM     2     2      0
                         _trans_dato
 ---------------------------------------------------------------------------------
 (2) _trans_dato                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _star_convercion                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_secuencia                                        0     0      0     312
                      _rotar_derecha
                    _rotar_izquierda
                          _shit_raid
                         _vasculante
 ---------------------------------------------------------------------------------
 (2) _vasculante                                           1     1      0     148
                                              4 COMRAM     1     1      0
                      _rotar_derecha
                    _rotar_izquierda
 ---------------------------------------------------------------------------------
 (3) _rotar_izquierda                                      3     1      2      52
                                              1 COMRAM     3     1      2
                               _port
 ---------------------------------------------------------------------------------
 (3) _rotar_derecha                                        3     1      2      52
                                              1 COMRAM     3     1      2
                               _port
 ---------------------------------------------------------------------------------
 (2) _shit_raid                                            1     1      0      60
                                              1 COMRAM     1     1      0
                               _port
 ---------------------------------------------------------------------------------
 (4) _port                                                 1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _set_ph                                               0     0      0     175
                      _activacion_rx
                      _activacion_tx
                           _conf_adc
                     _config_tx_aurt
                            _set_adc
                           _set_leds
                       _timer_1_conf
                        _timer_1_set
                       _timer_1_star
 ---------------------------------------------------------------------------------
 (2) _timer_1_conf                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _set_leds                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _set_adc                                              1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _config_tx_aurt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _conf_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _activacion_tx                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _activacion_rx                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _set_periodo                                          2     0      2     241
                                              4 COMRAM     2     0      2
                            _dato_16 (ARG)
 ---------------------------------------------------------------------------------
 (1) _set_comandos                                         2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _read_d                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _pulsador_s2                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _flag_timer_1                                         2     0      2     130
                                              2 COMRAM     2     0      2
                        _timer_1_set
                       _timer_1_star
 ---------------------------------------------------------------------------------
 (2) _timer_1_star                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _timer_1_set                                          2     1      1     130
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _final_convercion                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dato_16                                              4     2      2      26
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dato_16
   _final_convercion
   _flag_timer_1
     _timer_1_set
     _timer_1_star
   _pulsador_s2
   _read_d
   _set_comandos
   _set_periodo
     _dato_16 (ARG)
   _set_ph
     _activacion_rx
     _activacion_tx
     _conf_adc
     _config_tx_aurt
     _set_adc
     _set_leds
     _timer_1_conf
     _timer_1_set
     _timer_1_star
   _set_secuencia
     _rotar_derecha
       _port
     _rotar_izquierda
       _port
     _shit_raid
       _port
     _vasculante
       _rotar_derecha
         _port
       _rotar_izquierda
         _port
   _star_convercion
   _transmitir
     _trans_dato

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      54       7       32.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      9C       5       97.5%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     13      46       1       73.7%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     136      32        0.0%
DATA                 0      0     136       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Dec  3 14:02:51 2016

                        _a 0026                          _d 0041                          _i 003F  
                        _x 0046                         _s1 0028                         _s2 0029  
                       _jj 0043                         _ss 0045                _pulsador_s2 F8DE  
             __CFG_CP0$OFF 000000               __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000  
             __CFG_CP3$OFF 000000                        l112 F8F0                        l109 F8E4  
                      l142 FADE                        l162 FD8A                        l165 FDAE  
                      l335 F794               __CFG_CPB$OFF 000000                        u135 F7D2  
                      u136 F7D4                        u145 F7C4                        u146 F7C6  
                      u155 F7B6                        u156 F7B8                        u610 FC76  
             __CFG_CPD$OFF 000000              _rotar_derecha F9B4                        _est 003D  
                      _sec 0044               __CFG_BORV$18 000000                        wreg 000FE8  
              main@flag_5s 0035               __CFG_LVP$OFF 000000                       l1020 FB10  
                     l1012 FAF6                       l1014 FAFE                       l1028 FB28  
                     l1150 FA9C                       l1152 FAA2                       l1144 FA90  
                     l1160 FAB6                       l1154 FAAC                       l1146 FA94  
                     l1092 F8FE                       l1156 FAB2                       l1148 FA98  
                     l1500 FA12                       l1094 F90C                       l1510 FC66  
                     l1520 FCAC                       l1432 F9C4                       l1504 FA18  
                     l1522 FCB2                       l1514 FC86                       l1442 F9E2  
                     l1434 F9CC                       l1602 FEDE                       l1532 FCF8  
                     l1516 FC8C                       l1508 FC60                       l1452 F988  
                     l1612 FF22                       l1700 FD58                       l1526 FCD2  
                     l1462 F9A4                       l1454 F990                       l1622 FF66  
                     l1606 FEF6                       l1296 F7A8                       l1560 F8AA  
                     l1528 FCD8                       l1632 FFAA                       l1616 FF3A  
                     l1640 FFC2                       l1712 FD7E                       l1626 FF7E  
                     l1730 FDC8                       l1722 FD9E                       l1706 FD68  
                     l1652 F7F0                       l1476 F960                       l1492 F9F4  
                     l1572 FE12                       l1716 FD8E                       l1494 F9FC  
                     l1582 FE56                       l1566 FDE6                       l1496 FA04  
                     l1592 FE9A                       l1576 FE2A                       l1498 FA0C  
                     l1586 FE6E                       l1682 FD22                       l1596 FEB2  
                     l1698 FD54                       _LATB 000F8A                       _LATD 000F8C  
             __CFG_PWRT$ON 000000                       _main FCFE                       _msm1 0001  
                     _msm2 0100                       _msm3 0060                       _msm4 012A  
                     _msm5 0087                       _msm6 00AE                       _msm7 00D5  
                     _port F812                       fsr1l 000FE1                       indf2 000FDF  
                     fsr2l 000FD9                main@time_sw 003A                       start 0000  
            __CFG_IESO$OFF 000000              __CFG_MCLRE$ON 000000               ___param_bank 000010  
                    ?_main 0030                      ?_port 002A                      _ANSEL 000F7E  
    __end_of_activacion_rx F7BA      __end_of_activacion_tx F7C8             ?_rotar_derecha 002B  
                    _RCREG 000FAE                      _TMR0H 000FD7                      _TMR1H 000FCF  
                    _TMR0L 000FD6                      _TMR1L 000FCE                      _SPBRG 000FAF  
                    _PORTB 000F81                      _PORTD 000F83                      _TRISA 000F92  
                    _TRISB 000F93                      _TRISD 000F95            __end_of_dato_16 F868  
                    _TXREG 000FAD              __CFG_WRT0$OFF 000000              __CFG_WRT1$OFF 000000  
            __CFG_WRT2$OFF 000000              __CFG_WRT3$OFF 000000             __CFG_EBTR0$OFF 000000  
           __CFG_FCMEN$OFF 000000             __CFG_EBTR1$OFF 000000             __CFG_EBTR2$OFF 000000  
           __CFG_EBTR3$OFF 000000              __CFG_WRTB$OFF 000000              __CFG_WRTC$OFF 000000  
            __CFG_WRTD$OFF 000000             __CFG_EBTRB$OFF 000000               main@time_adc 0038  
             main@time_led 0039            __end_of_set_adc F7D6             __CFG_BOREN$OFF 000000  
                    tablat 000FF5           _final_convercion F79E                      port@c 002A  
                    status 000FD8            _star_convercion F782            __initialization FB3E  
             __end_of_main FDE4               __end_of_port F82A                     ??_main 0035  
                   ??_port 002A              __activetblptr 000002              main@flag_read 003C  
     __end_of_flag_timer_1 F8B4                     _ADCON1 000FC1                     _ADRESH 000FC4  
                   _ADRESL 000FC3            _rotar_izquierda F978             __CFG_WDTEN$OFF 000000  
                   _SPBRGH 000FB0               pulsador_s2@n 002A             __CFG_XINST$OFF 000000  
         __end_of_conf_adc F88C               ?_set_periodo 002E                     _read_d F7E4  
                ??_dato_16 002C                     clear_0 FB44            ??_rotar_derecha 002D  
                   _set_ph F910               ?_timer_1_set 002A              main@time_star 0036  
             __pdataCOMRAM 0001           __end_of_set_leds F846                  ??_set_adc 002A  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
          __CFG_HFOFST$OFF 000000    __end_of_star_convercion F786           ??_config_tx_aurt 002A  
          __CFG_FOSC$HSPLL 000000                 __accesstop 0060    __end_of__initialization FBAA  
          __CFG_PBADEN$OFF 000000              ___rparam_used 000001             __pcstackCOMRAM 002A  
             __pidataBANK0 FBB4               __pidataBANK1 FA34               ?_pulsador_s2 002A  
    __end_of_set_secuencia FA34    __end_of_rotar_izquierda F9B4                    ?_read_d 002A  
 __end_of_final_convercion F7AC                    ?_set_ph 002A         __size_of_shit_raid 005C  
    __size_of_flag_timer_1 0028                  ?_conf_adc 002A           ?_star_convercion 002A  
            ?_set_comandos 002A                    __Hparam 0000                    __Lparam 0000  
                ?_set_leds 002A               _flag_timer_1 F88C            __CFG_STVREN$OFF 000000  
                  _dato_16 F846       __size_of_set_periodo 00AE                    __pcinit FB3E  
          __size_of_read_d 0016                  _ANSELbits 000F7E                    __ramtop 1000  
                  __ptext0 FCFE                    __ptext1 FDE4                    __ptext2 F792  
                  __ptext3 F782                    __ptext4 F9F2            __size_of_set_ph 0032  
                  __ptext5 F942                    __ptext6 F978                    __ptext7 F9B4  
                  __ptext8 FAE2                    __ptext9 F812                  _T0CONbits 000FD5  
                _T1CONbits 000FCD       __size_of_timer_1_set 000C           ?_rotar_izquierda 002B  
                  _periodo 0027                    _set_adc F7C8              ?_timer_1_conf 002A  
               ??_conf_adc 002A              ?_timer_1_star 002A       end_of_initialization FBAA  
           ??_set_comandos 002A              __Lmediumconst 0000          __end_of_shit_raid FB3E  
   __size_of_activacion_rx 000E     __size_of_activacion_tx 000E                 ??_set_leds 002A  
                _RCSTAbits 000FAB                    postdec1 000FE5                    postinc0 000FEE  
                  postinc2 000FDE                 _vasculante F942                  _PORTAbits 000F80  
     __size_of_pulsador_s2 0032                  _TRISAbits 000F92                vasculante@x 002E  
                _TRISCbits 000F94             ??_timer_1_conf 002A             ??_timer_1_star 002A  
               _trans_dato F792                 _transmitir FDE4                  _TXSTAbits 000FAC  
              _BAUDCONbits 000FB8              __pidataCOMRAM F8B5             __end_of_read_d F7FA  
    __end_of_rotar_derecha F9F2             __end_of_set_ph F942              _activacion_rx F7AC  
            _activacion_tx F7BA        start_initialization FB3E                trans_dato@x 002A  
              __pdataBANK0 0060                __pdataBANK1 0100           __CFG_LPT1OSC$OFF 000000  
                 ??_read_d 002C            timer_1_set@high 002A                ?_vasculante 002A  
                 ??_set_ph 002C          ?_final_convercion 002A             ?_activacion_rx 002A  
           ?_activacion_tx 002A       __end_of_set_comandos FAE2         ??_final_convercion 002A  
              __pbssCOMRAM 003D                ?_trans_dato 002A             rotar_derecha@x 002D  
              ?_transmitir 002A          __size_of_conf_adc 0024     __size_of_set_secuencia 0042  
        __CFG_CCP2MX$PORTC 000000    __size_of_config_tx_aurt 0018       __end_of_timer_1_conf F7E4  
     __end_of_timer_1_star F782          __size_of_set_leds 001C                   ?_dato_16 002A  
                 ?_set_adc 002A              set_comandos@c 002A              set_comandos@d 002B  
      __size_of_vasculante 0036                 shit_raid@g 002B   __size_of_star_convercion 0004  
                 _PIR1bits 000F9E                  _shit_raid FAE2           __CFG_WDTPS$32768 000000  
            ??_set_periodo 0030        __size_of_trans_dato 000C            ??_activacion_rx 002A  
          ??_activacion_tx 002A        __size_of_transmitir 021C              ??_timer_1_set 002B  
               _ADCON0bits 000FC2                 _ADCON2bits 000FC0              _set_secuencia F9F2  
         main@time_comando 003B                  copy_data0 FB5E                  copy_data1 FB7E  
                copy_data2 FB9E             activacion_rx@x 002A             activacion_tx@x 002A  
 __size_of_rotar_izquierda 003C                   __Hrparam 0000                   __Lrparam 0000  
               ?_shit_raid 002A         _inicio_transmision 0042             timer_1_set@low 002B  
    __size_of_set_comandos 005A              ??_pulsador_s2 002A           __size_of_dato_16 0022  
      __end_of_set_periodo FCFE             ?_set_secuencia 002A        __end_of_timer_1_set F792  
         __size_of_set_adc 000E                   __ptext10 F910                   __ptext11 F7D6  
                 __ptext20 F7E4                   __ptext12 F82A                   __ptext21 F8DE  
                 __ptext13 F7C8                   __ptext22 F88C                   __ptext14 F7FA  
                 __ptext23 F77E                   __ptext15 F868                   __ptext24 F786  
                 __ptext16 F7BA                   __ptext25 F79E                   __ptext17 F7AC  
                 __ptext26 F846                   __ptext18 FC50                   __ptext19 FA88  
                 _conf_adc F868                   dato_16@y 002C              __size_of_main 00E6  
            __size_of_port 0018      __size_of_timer_1_conf 000E               _set_comandos FA88  
    __size_of_timer_1_star 0004                   _set_leds F82A             _config_tx_aurt F7FA  
         rotar_izquierda@x 002D                   main@argc 0030                   main@argv 0032  
             ??_vasculante 002E          ??_star_convercion 002A               set_periodo@x 002E  
               _INTCONbits 000FF2        __end_of_pulsador_s2 F910               ??_trans_dato 002A  
             _timer_1_conf F7D6               _timer_1_star F77E               ??_transmitir 002B  
__size_of_final_convercion 000E         __end_of_vasculante F978                   set_adc@x 002A  
   __end_of_config_tx_aurt F812     __size_of_rotar_derecha 003E          ??_rotar_izquierda 002D  
              ??_shit_raid 002B              ?_flag_timer_1 002C                _set_periodo FC50  
       __end_of_trans_dato F79E            ??_set_secuencia 002F         __end_of_transmitir 0000  
              _timer_1_set F786            ?_config_tx_aurt 002A             ??_flag_timer_1 002E  
