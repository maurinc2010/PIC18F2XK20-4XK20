

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Nov 30 19:28:17 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    32  0000                     
    33                           	psect	idataCOMRAM
    34  00FC44                     __pidataCOMRAM:
    35                           	opt stack 0
    36                           
    37                           ;initializer for _msm
    38  00FC44  56                 	db	86
    39  00FC45  61                 	db	97
    40  00FC46  6C                 	db	108
    41  00FC47  6F                 	db	111
    42  00FC48  72                 	db	114
    43  00FC49  20                 	db	32
    44  00FC4A  63                 	db	99
    45  00FC4B  6F                 	db	111
    46  00FC4C  6E                 	db	110
    47  00FC4D  76                 	db	118
    48  00FC4E  65                 	db	101
    49  00FC4F  72                 	db	114
    50  00FC50  73                 	db	115
    51  00FC51  69                 	db	105
    52  00FC52  6F                 	db	111
    53  00FC53  6E                 	db	110
    54  00FC54  20                 	db	32
    55  00FC55  0D                 	db	13
    56  00FC56  00                 	db	0
    57                           
    58                           ;initializer for _a
    59  00FC57  FF                 	db	255
    60  0000                     _ADCON0bits	set	4034
    61  0000                     _ADCON1	set	4033
    62  0000                     _ADCON2bits	set	4032
    63  0000                     _ADRESH	set	4036
    64  0000                     _ADRESL	set	4035
    65  0000                     _ANSEL	set	3966
    66  0000                     _ANSELbits	set	3966
    67  0000                     _BAUDCONbits	set	4024
    68  0000                     _INTCONbits	set	4082
    69  0000                     _LATB	set	3978
    70  0000                     _LATD	set	3980
    71  0000                     _PIR1bits	set	3998
    72  0000                     _PORTB	set	3969
    73  0000                     _PORTD	set	3971
    74  0000                     _RCREG	set	4014
    75  0000                     _RCSTAbits	set	4011
    76  0000                     _SPBRG	set	4015
    77  0000                     _SPBRGH	set	4016
    78  0000                     _T0CONbits	set	4053
    79  0000                     _TMR0H	set	4055
    80  0000                     _TMR0L	set	4054
    81  0000                     _TRISA	set	3986
    82  0000                     _TRISAbits	set	3986
    83  0000                     _TRISB	set	3987
    84  0000                     _TRISCbits	set	3988
    85  0000                     _TRISD	set	3989
    86  0000                     _TXREG	set	4013
    87  0000                     _TXSTAbits	set	4012
    88                           
    89                           ; #config settings
    90  0000                     
    91                           	psect	cinit
    92  00FD3E                     __pcinit:
    93                           	opt stack 0
    94  00FD3E                     start_initialization:
    95                           	opt stack 0
    96  00FD3E                     __initialization:
    97                           	opt stack 0
    98                           
    99                           ; Clear objects allocated to COMRAM (20 bytes)
   100  00FD3E  EE00  F018         	lfsr	0,__pbssCOMRAM
   101  00FD42  0E14               	movlw	20
   102  00FD44                     clear_0:
   103  00FD44  6AEE               	clrf	postinc0,c
   104  00FD46  06E8               	decf	wreg,f,c
   105  00FD48  E1FD               	bnz	clear_0
   106                           
   107                           ; Initialize objects allocated to COMRAM (20 bytes)
   108                           ; load TBLPTR registers with __pidataCOMRAM
   109  00FD4A  0E44               	movlw	low __pidataCOMRAM
   110  00FD4C  6EF6               	movwf	tblptrl,c
   111  00FD4E  0EFC               	movlw	high __pidataCOMRAM
   112  00FD50  6EF7               	movwf	tblptrh,c
   113  00FD52  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   114  00FD54  6EF8               	movwf	tblptru,c
   115  00FD56  EE00  F02C         	lfsr	0,__pdataCOMRAM
   116  00FD5A  EE10 F014          	lfsr	1,20
   117  00FD5E                     copy_data0:
   118  00FD5E  0009               	tblrd		*+
   119  00FD60  CFF5 FFEE          	movff	tablat,postinc0
   120  00FD64  50E5               	movf	postdec1,w,c
   121  00FD66  50E1               	movf	fsr1l,w,c
   122  00FD68  E1FA               	bnz	copy_data0
   123  00FD6A                     end_of_initialization:
   124                           	opt stack 0
   125  00FD6A                     __end_of__initialization:
   126                           	opt stack 0
   127  00FD6A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   128  00FD6C  6EF8               	movwf	tblptru,c
   129  00FD6E  0100               	movlb	0
   130  00FD70  EF04  F07F         	goto	_main	;jump to C main() function
   131                           tblptru	equ	0xFF8
   132                           tblptrh	equ	0xFF7
   133                           tblptrl	equ	0xFF6
   134                           tablat	equ	0xFF5
   135                           postinc0	equ	0xFEE
   136                           wreg	equ	0xFE8
   137                           postdec1	equ	0xFE5
   138                           fsr1l	equ	0xFE1
   139                           
   140                           	psect	bssCOMRAM
   141  000018                     __pbssCOMRAM:
   142                           	opt stack 0
   143  000018                     _conversion16:
   144                           	opt stack 0
   145  000018                     	ds	12
   146  000024                     _est:
   147                           	opt stack 0
   148  000024                     	ds	2
   149  000026                     _i:
   150                           	opt stack 0
   151  000026                     	ds	2
   152  000028                     _d:
   153                           	opt stack 0
   154  000028                     	ds	1
   155  000029                     _inicio_transmision:
   156                           	opt stack 0
   157  000029                     	ds	1
   158  00002A                     _m:
   159                           	opt stack 0
   160  00002A                     	ds	1
   161  00002B                     _ope:
   162                           	opt stack 0
   163  00002B                     	ds	1
   164                           tblptru	equ	0xFF8
   165                           tblptrh	equ	0xFF7
   166                           tblptrl	equ	0xFF6
   167                           tablat	equ	0xFF5
   168                           postinc0	equ	0xFEE
   169                           wreg	equ	0xFE8
   170                           postdec1	equ	0xFE5
   171                           fsr1l	equ	0xFE1
   172                           
   173                           	psect	dataCOMRAM
   174  00002C                     __pdataCOMRAM:
   175                           	opt stack 0
   176  00002C                     _msm:
   177                           	opt stack 0
   178  00002C                     	ds	19
   179  00003F                     _a:
   180                           	opt stack 0
   181  00003F                     	ds	1
   182                           tblptru	equ	0xFF8
   183                           tblptrh	equ	0xFF7
   184                           tblptrl	equ	0xFF6
   185                           tablat	equ	0xFF5
   186                           postinc0	equ	0xFEE
   187                           wreg	equ	0xFE8
   188                           postdec1	equ	0xFE5
   189                           fsr1l	equ	0xFE1
   190                           
   191                           	psect	cstackCOMRAM
   192  000001                     __pcstackCOMRAM:
   193                           	opt stack 0
   194  000001                     ?_dato_16:
   195                           	opt stack 0
   196  000001                     ?___lwdiv:
   197                           	opt stack 0
   198  000001                     ?___lwmod:
   199                           	opt stack 0
   200  000001                     timer_0_set@high:
   201                           	opt stack 0
   202  000001                     port@c:
   203                           	opt stack 0
   204  000001                     set_adc@x:
   205                           	opt stack 0
   206  000001                     activacion_tx@x:
   207                           	opt stack 0
   208  000001                     trans_dato@x:
   209                           	opt stack 0
   210  000001                     ___lwdiv@dividend:
   211                           	opt stack 0
   212  000001                     ___lwmod@dividend:
   213                           	opt stack 0
   214                           
   215                           ; 2 bytes @ 0x0
   216  000001                     	ds	1
   217  000002                     timer_0_set@low:
   218                           	opt stack 0
   219                           
   220                           ; 1 bytes @ 0x1
   221  000002                     	ds	1
   222  000003                     ?_flag_timer_0:
   223                           	opt stack 0
   224  000003                     dato_16@y:
   225                           	opt stack 0
   226  000003                     ___lwdiv@divisor:
   227                           	opt stack 0
   228  000003                     ___lwmod@divisor:
   229                           	opt stack 0
   230                           
   231                           ; 2 bytes @ 0x2
   232  000003                     	ds	2
   233  000005                     ___lwmod@counter:
   234                           	opt stack 0
   235  000005                     ___lwdiv@quotient:
   236                           	opt stack 0
   237                           
   238                           ; 2 bytes @ 0x4
   239  000005                     	ds	2
   240  000007                     ___lwdiv@counter:
   241                           	opt stack 0
   242                           
   243                           ; 1 bytes @ 0x6
   244  000007                     	ds	1
   245  000008                     ??_int_ascii:
   246                           
   247                           ; 0 bytes @ 0x7
   248  000008                     	ds	2
   249  00000A                     int_ascii@aux2:
   250                           	opt stack 0
   251                           
   252                           ; 2 bytes @ 0x9
   253  00000A                     	ds	2
   254  00000C                     int_ascii@aux1:
   255                           	opt stack 0
   256                           
   257                           ; 2 bytes @ 0xB
   258  00000C                     	ds	2
   259  00000E                     int_ascii@j:
   260                           	opt stack 0
   261                           
   262                           ; 1 bytes @ 0xD
   263  00000E                     	ds	1
   264  00000F                     ??_transmitir:
   265                           
   266                           ; 0 bytes @ 0xE
   267  00000F                     	ds	2
   268  000011                     
   269                           ; 2 bytes @ 0x10
   270  000011                     	ds	2
   271  000013                     
   272                           ; 3 bytes @ 0x12
   273  000013                     	ds	3
   274  000016                     main@contador1:
   275                           	opt stack 0
   276                           
   277                           ; 1 bytes @ 0x15
   278  000016                     	ds	1
   279  000017                     main@contador:
   280                           	opt stack 0
   281                           
   282                           ; 1 bytes @ 0x16
   283  000017                     	ds	1
   284                           tblptru	equ	0xFF8
   285                           tblptrh	equ	0xFF7
   286                           tblptrl	equ	0xFF6
   287                           tablat	equ	0xFF5
   288                           postinc0	equ	0xFEE
   289                           wreg	equ	0xFE8
   290                           postdec1	equ	0xFE5
   291                           fsr1l	equ	0xFE1
   292                           
   293 ;;
   294 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   295 ;;
   296 ;; *************** function _main *****************
   297 ;; Defined at:
   298 ;;		line 49 in file "main.c"
   299 ;; Parameters:    Size  Location     Type
   300 ;;  argc            2   16[COMRAM] int 
   301 ;;  argv            3   18[COMRAM] PTR PTR unsigned char 
   302 ;; Auto vars:     Size  Location     Type
   303 ;;  contador        1   22[COMRAM] unsigned char 
   304 ;;  contador1       1   21[COMRAM] unsigned char 
   305 ;; Return value:  Size  Location     Type
   306 ;;                  2   16[COMRAM] int 
   307 ;; Registers used:
   308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   309 ;; Tracked objects:
   310 ;;		On entry : 0/0
   311 ;;		On exit  : 0/0
   312 ;;		Unchanged: 0/0
   313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   314 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   315 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   317 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   318 ;;Total ram usage:        7 bytes
   319 ;; Hardware stack levels required when called:    3
   320 ;; This function calls:
   321 ;;		_dato_16
   322 ;;		_final_convercion
   323 ;;		_flag_timer_0
   324 ;;		_port
   325 ;;		_set_ph
   326 ;;		_star_convercion
   327 ;;		_transmitir
   328 ;; This function is called by:
   329 ;;		Startup code after reset
   330 ;; This function uses a non-reentrant model
   331 ;;
   332                           
   333                           	psect	text0
   334  00FE08                     __ptext0:
   335                           	opt stack 0
   336  00FE08                     _main:
   337                           	opt stack 28
   338                           
   339                           ;main.c: 50: set_ph();
   340                           
   341                           ;incstack = 0
   342  00FE08  EC89  F07E         	call	_set_ph	;wreg free
   343                           
   344                           ;main.c: 51: unsigned char contador=0,contador1=0;
   345  00FE0C  0E00               	movlw	0
   346  00FE0E  6E17               	movwf	main@contador,c
   347  00FE10  0E00               	movlw	0
   348  00FE12  6E16               	movwf	main@contador1,c
   349  00FE14                     l1242:
   350                           
   351                           ;main.c: 54: if (flag_timer_0()){
   352  00FE14  EC75  F07E         	call	_flag_timer_0	;wreg free
   353  00FE18  5003               	movf	?_flag_timer_0,w,c
   354  00FE1A  1004               	iorwf	?_flag_timer_0+1,w,c
   355  00FE1C  B4D8               	btfsc	status,2,c
   356  00FE1E  D010               	goto	l1256
   357                           
   358                           ;main.c: 55: contador1++;
   359  00FE20  2A16               	incf	main@contador1,f,c
   360                           
   361                           ;main.c: 56: contador++;
   362  00FE22  2A17               	incf	main@contador,f,c
   363                           
   364                           ;main.c: 57: if(contador==2){
   365  00FE24  0E02               	movlw	2
   366  00FE26  1817               	xorwf	main@contador,w,c
   367  00FE28  A4D8               	btfss	status,2,c
   368  00FE2A  D004               	goto	l1252
   369                           
   370                           ;main.c: 58: contador=0;
   371  00FE2C  0E00               	movlw	0
   372  00FE2E  6E17               	movwf	main@contador,c
   373                           
   374                           ;main.c: 59: star_convercion();
   375  00FE30  ECF7  F07D         	call	_star_convercion	;wreg free
   376  00FE34                     l1252:
   377                           
   378                           ;main.c: 60: }
   379                           ;main.c: 61: if(contador1==125){
   380  00FE34  0E7D               	movlw	125
   381  00FE36  1816               	xorwf	main@contador1,w,c
   382  00FE38  A4D8               	btfss	status,2,c
   383  00FE3A  D002               	goto	l1256
   384                           
   385                           ;main.c: 63: inicio_transmision=1;
   386  00FE3C  0E01               	movlw	1
   387  00FE3E  6E29               	movwf	_inicio_transmision,c
   388  00FE40                     l1256:
   389                           
   390                           ;main.c: 64: }
   391                           ;main.c: 65: }
   392                           ;main.c: 66: if(final_convercion()){
   393  00FE40  EC05  F07E         	call	_final_convercion	;wreg free
   394  00FE44  0900               	iorlw	0
   395  00FE46  B4D8               	btfsc	status,2,c
   396  00FE48  D009               	goto	l1260
   397                           
   398                           ;main.c: 67: conversion16.dato=dato_16();
   399  00FE4A  EC52  F07E         	call	_dato_16	;wreg free
   400  00FE4E  C001  F018         	movff	?_dato_16,_conversion16
   401  00FE52  C002  F019         	movff	?_dato_16+1,_conversion16+1
   402                           
   403                           ;main.c: 68: port(conversion16.dato);
   404  00FE56  5018               	movf	_conversion16,w,c
   405  00FE58  EC2C  F07E         	call	_port
   406  00FE5C                     l1260:
   407                           
   408                           ;main.c: 69: }
   409                           ;main.c: 70: if(inicio_transmision){
   410  00FE5C  5029               	movf	_inicio_transmision,w,c
   411  00FE5E  B4D8               	btfsc	status,2,c
   412  00FE60  D7D9               	goto	l1242
   413                           
   414                           ;main.c: 71: transmitir();
   415  00FE62  EC34  F07F         	call	_transmitir	;wreg free
   416  00FE66  D7D6               	goto	l1242
   417  00FE68                     __end_of_main:
   418                           	opt stack 0
   419                           tblptru	equ	0xFF8
   420                           tblptrh	equ	0xFF7
   421                           tblptrl	equ	0xFF6
   422                           tablat	equ	0xFF5
   423                           postinc0	equ	0xFEE
   424                           wreg	equ	0xFE8
   425                           postdec1	equ	0xFE5
   426                           fsr1l	equ	0xFE1
   427                           status	equ	0xFD8
   428                           
   429 ;; *************** function _transmitir *****************
   430 ;; Defined at:
   431 ;;		line 103 in file "main.c"
   432 ;; Parameters:    Size  Location     Type
   433 ;;		None
   434 ;; Auto vars:     Size  Location     Type
   435 ;;		None
   436 ;; Return value:  Size  Location     Type
   437 ;;		None               void
   438 ;; Registers used:
   439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   440 ;; Tracked objects:
   441 ;;		On entry : 0/0
   442 ;;		On exit  : 0/0
   443 ;;		Unchanged: 0/0
   444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   447 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   448 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   449 ;;Total ram usage:        2 bytes
   450 ;; Hardware stack levels used:    1
   451 ;; Hardware stack levels required when called:    2
   452 ;; This function calls:
   453 ;;		_int_ascii
   454 ;;		_trans_dato
   455 ;; This function is called by:
   456 ;;		_main
   457 ;; This function uses a non-reentrant model
   458 ;;
   459                           
   460                           	psect	text1
   461  00FE68                     __ptext1:
   462                           	opt stack 0
   463  00FE68                     _transmitir:
   464                           	opt stack 28
   465                           
   466                           ;main.c: 104: switch (est){
   467                           
   468                           ;incstack = 0
   469  00FE68  D047               	goto	l1230
   470  00FE6A                     l1204:
   471                           
   472                           ;main.c: 106: int_ascii();
   473  00FE6A  EC8F  F07F         	call	_int_ascii	;wreg free
   474                           
   475                           ;main.c: 107: est=1;
   476  00FE6E  0E00               	movlw	0
   477  00FE70  6E25               	movwf	_est+1,c
   478  00FE72  0E01               	movlw	1
   479  00FE74  6E24               	movwf	_est,c
   480                           
   481                           ;main.c: 108: break;
   482  00FE76  0012               	return	
   483  00FE78                     l1208:
   484                           
   485                           ;main.c: 110: if (msm[i]!='\r')
   486  00FE78  0E2C               	movlw	low _msm
   487  00FE7A  2426               	addwf	_i,w,c
   488  00FE7C  6ED9               	movwf	fsr2l,c
   489  00FE7E  0E00               	movlw	high _msm
   490  00FE80  2027               	addwfc	_i+1,w,c
   491  00FE82  6EDA               	movwf	fsr2h,c
   492  00FE84  0E0D               	movlw	13
   493  00FE86  18DE               	xorwf	postinc2,w,c
   494  00FE88  B4D8               	btfsc	status,2,c
   495  00FE8A  D00C               	goto	l1214
   496                           
   497                           ;main.c: 111: trans_dato(msm[i++]);
   498  00FE8C  0E2C               	movlw	low _msm
   499  00FE8E  2426               	addwf	_i,w,c
   500  00FE90  6ED9               	movwf	fsr2l,c
   501  00FE92  0E00               	movlw	high _msm
   502  00FE94  2027               	addwfc	_i+1,w,c
   503  00FE96  6EDA               	movwf	fsr2h,c
   504  00FE98  50DF               	movf	indf2,w,c
   505  00FE9A  ECFF  F07D         	call	_trans_dato
   506  00FE9E  4A26               	infsnz	_i,f,c
   507  00FEA0  2A27               	incf	_i+1,f,c
   508  00FEA2  0012               	return	
   509  00FEA4                     l1214:
   510                           
   511                           ;main.c: 112: else{
   512                           ;main.c: 113: i=0;
   513  00FEA4  0E00               	movlw	0
   514  00FEA6  6E27               	movwf	_i+1,c
   515  00FEA8  0E00               	movlw	0
   516  00FEAA  6E26               	movwf	_i,c
   517                           
   518                           ;main.c: 114: est=2;
   519  00FEAC  0E00               	movlw	0
   520  00FEAE  6E25               	movwf	_est+1,c
   521  00FEB0  0E02               	movlw	2
   522  00FEB2  6E24               	movwf	_est,c
   523                           
   524                           ;main.c: 115: }
   525                           ;main.c: 116: break;
   526  00FEB4  0012               	return	
   527  00FEB6                     l1216:
   528                           
   529                           ;main.c: 118: if (i<=4){
   530  00FEB6  5027               	movf	_i+1,w,c
   531  00FEB8  E110               	bnz	l1222
   532  00FEBA  0E05               	movlw	5
   533  00FEBC  5C26               	subwf	_i,w,c
   534  00FEBE  B0D8               	btfsc	status,0,c
   535  00FEC0  D00C               	goto	l1222
   536                           
   537                           ;main.c: 119: trans_dato(conversion16.digitos2[i]);
   538  00FEC2  0E1F               	movlw	low (_conversion16+7)
   539  00FEC4  2426               	addwf	_i,w,c
   540  00FEC6  6ED9               	movwf	fsr2l,c
   541  00FEC8  0E00               	movlw	high (_conversion16+7)
   542  00FECA  2027               	addwfc	_i+1,w,c
   543  00FECC  6EDA               	movwf	fsr2h,c
   544  00FECE  50DF               	movf	indf2,w,c
   545  00FED0  ECFF  F07D         	call	_trans_dato
   546                           
   547                           ;main.c: 120: i++;
   548  00FED4  4A26               	infsnz	_i,f,c
   549  00FED6  2A27               	incf	_i+1,f,c
   550                           
   551                           ;main.c: 121: }
   552  00FED8  0012               	return	
   553  00FEDA                     l1222:
   554                           
   555                           ;main.c: 122: else{
   556                           ;main.c: 123: i=0;
   557  00FEDA  0E00               	movlw	0
   558  00FEDC  6E27               	movwf	_i+1,c
   559  00FEDE  0E00               	movlw	0
   560  00FEE0  6E26               	movwf	_i,c
   561                           
   562                           ;main.c: 124: est=0;
   563  00FEE2  0E00               	movlw	0
   564  00FEE4  6E25               	movwf	_est+1,c
   565  00FEE6  0E00               	movlw	0
   566  00FEE8  6E24               	movwf	_est,c
   567                           
   568                           ;main.c: 125: trans_dato('\n');
   569  00FEEA  0E0A               	movlw	10
   570  00FEEC  ECFF  F07D         	call	_trans_dato
   571                           
   572                           ;main.c: 126: trans_dato('\r');
   573  00FEF0  0E0D               	movlw	13
   574  00FEF2  ECFF  F07D         	call	_trans_dato
   575                           
   576                           ;main.c: 129: }
   577                           
   578                           ;main.c: 127: }
   579                           ;main.c: 128: break;
   580  00FEF6  0012               	return	
   581  00FEF8                     l1230:
   582  00FEF8  C024  F00F         	movff	_est,??_transmitir
   583  00FEFC  C025  F010         	movff	_est+1,??_transmitir+1
   584                           
   585                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   586                           ; Switch size 1, requested type "space"
   587                           ; Number of cases is 1, Range of values is 0 to 0
   588                           ; switch strategies available:
   589                           ; Name         Instructions Cycles
   590                           ; simple_byte            4     3 (average)
   591                           ;	Chosen strategy is simple_byte
   592  00FF00  5010               	movf	??_transmitir+1,w,c
   593  00FF02  0A00               	xorlw	0	; case 0
   594  00FF04  A4D8               	btfss	status,2,c
   595  00FF06  0012               	return	
   596                           
   597                           ; Switch size 1, requested type "space"
   598                           ; Number of cases is 3, Range of values is 0 to 2
   599                           ; switch strategies available:
   600                           ; Name         Instructions Cycles
   601                           ; simple_byte           10     6 (average)
   602                           ;	Chosen strategy is simple_byte
   603  00FF08  500F               	movf	??_transmitir,w,c
   604  00FF0A  0A00               	xorlw	0	; case 0
   605  00FF0C  B4D8               	btfsc	status,2,c
   606  00FF0E  D7AD               	goto	l1204
   607  00FF10  0A01               	xorlw	1	; case 1
   608  00FF12  B4D8               	btfsc	status,2,c
   609  00FF14  D7B1               	goto	l1208
   610  00FF16  0A03               	xorlw	3	; case 2
   611  00FF18  A4D8               	btfss	status,2,c
   612  00FF1A  0012               	return	
   613  00FF1C  D7CC               	goto	l1216
   614  00FF1E                     __end_of_transmitir:
   615                           	opt stack 0
   616                           tblptru	equ	0xFF8
   617                           tblptrh	equ	0xFF7
   618                           tblptrl	equ	0xFF6
   619                           tablat	equ	0xFF5
   620                           postinc0	equ	0xFEE
   621                           wreg	equ	0xFE8
   622                           postdec1	equ	0xFE5
   623                           fsr1l	equ	0xFE1
   624                           indf2	equ	0xFDF
   625                           postinc2	equ	0xFDE
   626                           fsr2h	equ	0xFDA
   627                           fsr2l	equ	0xFD9
   628                           status	equ	0xFD8
   629                           
   630 ;; *************** function _trans_dato *****************
   631 ;; Defined at:
   632 ;;		line 35 in file "m_uart.c"
   633 ;; Parameters:    Size  Location     Type
   634 ;;  x               1    wreg     unsigned char 
   635 ;; Auto vars:     Size  Location     Type
   636 ;;  x               1    0[COMRAM] unsigned char 
   637 ;; Return value:  Size  Location     Type
   638 ;;		None               void
   639 ;; Registers used:
   640 ;;		wreg
   641 ;; Tracked objects:
   642 ;;		On entry : 0/0
   643 ;;		On exit  : 0/0
   644 ;;		Unchanged: 0/0
   645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   647 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   649 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   650 ;;Total ram usage:        1 bytes
   651 ;; Hardware stack levels used:    1
   652 ;; This function calls:
   653 ;;		Nothing
   654 ;; This function is called by:
   655 ;;		_transmitir
   656 ;;		_send_msm
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660                           	psect	text2
   661  00FBFE                     __ptext2:
   662                           	opt stack 0
   663  00FBFE                     _trans_dato:
   664                           	opt stack 29
   665                           
   666                           ;incstack = 0
   667                           ;trans_dato@x stored from wreg
   668  00FBFE  6E01               	movwf	trans_dato@x,c
   669  00FC00                     l199:
   670  00FC00  A2AC               	btfss	4012,1,c	;volatile
   671  00FC02  D7FE               	goto	l199
   672                           
   673                           ;m_uart.c: 37: TXREG=x;
   674  00FC04  C001  FFAD         	movff	trans_dato@x,4013	;volatile
   675  00FC08  0012               	return		;funcret
   676  00FC0A                     __end_of_trans_dato:
   677                           	opt stack 0
   678                           tblptru	equ	0xFF8
   679                           tblptrh	equ	0xFF7
   680                           tblptrl	equ	0xFF6
   681                           tablat	equ	0xFF5
   682                           postinc0	equ	0xFEE
   683                           wreg	equ	0xFE8
   684                           postdec1	equ	0xFE5
   685                           fsr1l	equ	0xFE1
   686                           indf2	equ	0xFDF
   687                           postinc2	equ	0xFDE
   688                           fsr2h	equ	0xFDA
   689                           fsr2l	equ	0xFD9
   690                           status	equ	0xFD8
   691                           
   692 ;; *************** function _int_ascii *****************
   693 ;; Defined at:
   694 ;;		line 79 in file "main.c"
   695 ;; Parameters:    Size  Location     Type
   696 ;;		None
   697 ;; Auto vars:     Size  Location     Type
   698 ;;  aux1            2   11[COMRAM] unsigned int 
   699 ;;  aux2            2    9[COMRAM] unsigned int 
   700 ;;  j               1   13[COMRAM] unsigned char 
   701 ;; Return value:  Size  Location     Type
   702 ;;		None               void
   703 ;; Registers used:
   704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   705 ;; Tracked objects:
   706 ;;		On entry : 0/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   711 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   712 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   713 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   714 ;;Total ram usage:        7 bytes
   715 ;; Hardware stack levels used:    1
   716 ;; Hardware stack levels required when called:    1
   717 ;; This function calls:
   718 ;;		___lwdiv
   719 ;;		___lwmod
   720 ;; This function is called by:
   721 ;;		_transmitir
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725                           	psect	text3
   726  00FF1E                     __ptext3:
   727                           	opt stack 0
   728  00FF1E                     _int_ascii:
   729                           	opt stack 28
   730                           
   731                           ;main.c: 81: unsigned char j;
   732                           ;main.c: 82: unsigned int aux1,aux2;
   733                           ;main.c: 83: aux1=conversion16.dato;
   734                           
   735                           ;incstack = 0
   736  00FF1E  C018  F00C         	movff	_conversion16,int_ascii@aux1
   737  00FF22  C019  F00D         	movff	_conversion16+1,int_ascii@aux1+1
   738                           
   739                           ;main.c: 84: for(j=0;j<=5;j++){
   740  00FF26  0E00               	movlw	0
   741  00FF28  6E0E               	movwf	int_ascii@j,c
   742  00FF2A                     l1138:
   743  00FF2A  0E05               	movlw	5
   744  00FF2C  640E               	cpfsgt	int_ascii@j,c
   745  00FF2E  D001               	goto	l1142
   746  00FF30  D016               	goto	l1148
   747  00FF32                     l1142:
   748                           
   749                           ;main.c: 85: conversion16.digitos[j]=0;
   750  00FF32  500E               	movf	int_ascii@j,w,c
   751  00FF34  0D01               	mullw	1
   752  00FF36  0E1A               	movlw	low (_conversion16+2)
   753  00FF38  24F3               	addwf	prodl,w,c
   754  00FF3A  6ED9               	movwf	fsr2l,c
   755  00FF3C  0E00               	movlw	high (_conversion16+2)
   756  00FF3E  20F4               	addwfc	prodh,w,c
   757  00FF40  6EDA               	movwf	fsr2h,c
   758  00FF42  0E00               	movlw	0
   759  00FF44  6EDF               	movwf	indf2,c
   760                           
   761                           ;main.c: 86: conversion16.digitos2[j]='0';
   762  00FF46  500E               	movf	int_ascii@j,w,c
   763  00FF48  0D01               	mullw	1
   764  00FF4A  0E1F               	movlw	low (_conversion16+7)
   765  00FF4C  24F3               	addwf	prodl,w,c
   766  00FF4E  6ED9               	movwf	fsr2l,c
   767  00FF50  0E00               	movlw	high (_conversion16+7)
   768  00FF52  20F4               	addwfc	prodh,w,c
   769  00FF54  6EDA               	movwf	fsr2h,c
   770  00FF56  0E30               	movlw	48
   771  00FF58  6EDF               	movwf	indf2,c
   772  00FF5A  2A0E               	incf	int_ascii@j,f,c
   773  00FF5C  D7E6               	goto	l1138
   774  00FF5E                     l1148:
   775                           
   776                           ;main.c: 88: }
   777                           ;main.c: 89: j=0;
   778  00FF5E  0E00               	movlw	0
   779  00FF60  D048               	goto	L1
   780  00FF62                     l1150:
   781                           
   782                           ;main.c: 91: aux2=aux1%10;
   783  00FF62  C00C  F001         	movff	int_ascii@aux1,___lwmod@dividend
   784  00FF66  C00D  F002         	movff	int_ascii@aux1+1,___lwmod@dividend+1
   785  00FF6A  0E00               	movlw	0
   786  00FF6C  6E04               	movwf	___lwmod@divisor+1,c
   787  00FF6E  0E0A               	movlw	10
   788  00FF70  6E03               	movwf	___lwmod@divisor,c
   789  00FF72  ECBA  F07E         	call	___lwmod	;wreg free
   790  00FF76  C001  F00A         	movff	?___lwmod,int_ascii@aux2
   791  00FF7A  C002  F00B         	movff	?___lwmod+1,int_ascii@aux2+1
   792                           
   793                           ;main.c: 92: conversion16.digitos[4-j]=aux2;
   794  00FF7E  500E               	movf	int_ascii@j,w,c
   795  00FF80  6E08               	movwf	??_int_ascii& (0+255),c
   796  00FF82  6A09               	clrf	(??_int_ascii+1)& (0+255),c
   797  00FF84  1E08               	comf	??_int_ascii,f,c
   798  00FF86  1E09               	comf	??_int_ascii+1,f,c
   799  00FF88  4A08               	infsnz	??_int_ascii,f,c
   800  00FF8A  2A09               	incf	??_int_ascii+1,f,c
   801  00FF8C  0E04               	movlw	4
   802  00FF8E  2608               	addwf	??_int_ascii,f,c
   803  00FF90  0E00               	movlw	0
   804  00FF92  2209               	addwfc	??_int_ascii+1,f,c
   805  00FF94  0E1A               	movlw	low (_conversion16+2)
   806  00FF96  2408               	addwf	??_int_ascii,w,c
   807  00FF98  6ED9               	movwf	fsr2l,c
   808  00FF9A  0E00               	movlw	high (_conversion16+2)
   809  00FF9C  2009               	addwfc	??_int_ascii+1,w,c
   810  00FF9E  6EDA               	movwf	fsr2h,c
   811  00FFA0  C00A  FFDF         	movff	int_ascii@aux2,indf2
   812                           
   813                           ;main.c: 93: conversion16.digitos2[4-j]=aux2+0x30;
   814  00FFA4  500E               	movf	int_ascii@j,w,c
   815  00FFA6  6E08               	movwf	??_int_ascii& (0+255),c
   816  00FFA8  6A09               	clrf	(??_int_ascii+1)& (0+255),c
   817  00FFAA  1E08               	comf	??_int_ascii,f,c
   818  00FFAC  1E09               	comf	??_int_ascii+1,f,c
   819  00FFAE  4A08               	infsnz	??_int_ascii,f,c
   820  00FFB0  2A09               	incf	??_int_ascii+1,f,c
   821  00FFB2  0E04               	movlw	4
   822  00FFB4  2608               	addwf	??_int_ascii,f,c
   823  00FFB6  0E00               	movlw	0
   824  00FFB8  2209               	addwfc	??_int_ascii+1,f,c
   825  00FFBA  0E1F               	movlw	low (_conversion16+7)
   826  00FFBC  2408               	addwf	??_int_ascii,w,c
   827  00FFBE  6ED9               	movwf	fsr2l,c
   828  00FFC0  0E00               	movlw	high (_conversion16+7)
   829  00FFC2  2009               	addwfc	??_int_ascii+1,w,c
   830  00FFC4  6EDA               	movwf	fsr2h,c
   831  00FFC6  500A               	movf	int_ascii@aux2,w,c
   832  00FFC8  0F30               	addlw	48
   833  00FFCA  6EDF               	movwf	indf2,c
   834                           
   835                           ;main.c: 94: aux1/=10;
   836  00FFCC  C00C  F001         	movff	int_ascii@aux1,___lwdiv@dividend
   837  00FFD0  C00D  F002         	movff	int_ascii@aux1+1,___lwdiv@dividend+1
   838  00FFD4  0E00               	movlw	0
   839  00FFD6  6E04               	movwf	___lwdiv@divisor+1,c
   840  00FFD8  0E0A               	movlw	10
   841  00FFDA  6E03               	movwf	___lwdiv@divisor,c
   842  00FFDC  ECDB  F07E         	call	___lwdiv	;wreg free
   843  00FFE0  C001  F00C         	movff	?___lwdiv,int_ascii@aux1
   844  00FFE4  C002  F00D         	movff	?___lwdiv+1,int_ascii@aux1+1
   845                           
   846                           ;main.c: 95: if (aux1==0)
   847  00FFE8  500C               	movf	int_ascii@aux1,w,c
   848  00FFEA  100D               	iorwf	int_ascii@aux1+1,w,c
   849  00FFEC  A4D8               	btfss	status,2,c
   850  00FFEE  D003               	goto	l1160
   851                           
   852                           ;main.c: 96: j=5;
   853  00FFF0  0E05               	movlw	5
   854  00FFF2                     L1:
   855  00FFF2  6E0E               	movwf	int_ascii@j,c
   856  00FFF4  D001               	goto	l1162
   857  00FFF6                     l1160:
   858                           
   859                           ;main.c: 97: else
   860                           ;main.c: 98: j++;
   861  00FFF6  2A0E               	incf	int_ascii@j,f,c
   862  00FFF8                     l1162:
   863  00FFF8  0E04               	movlw	4
   864  00FFFA  640E               	cpfsgt	int_ascii@j,c
   865  00FFFC  D7B2               	goto	l1150
   866  00FFFE  0012               	return	
   867  010000                     __end_of_int_ascii:
   868                           	opt stack 0
   869                           tblptru	equ	0xFF8
   870                           tblptrh	equ	0xFF7
   871                           tblptrl	equ	0xFF6
   872                           tablat	equ	0xFF5
   873                           prodh	equ	0xFF4
   874                           prodl	equ	0xFF3
   875                           postinc0	equ	0xFEE
   876                           wreg	equ	0xFE8
   877                           postdec1	equ	0xFE5
   878                           fsr1l	equ	0xFE1
   879                           indf2	equ	0xFDF
   880                           postinc2	equ	0xFDE
   881                           fsr2h	equ	0xFDA
   882                           fsr2l	equ	0xFD9
   883                           status	equ	0xFD8
   884                           
   885 ;; *************** function ___lwmod *****************
   886 ;; Defined at:
   887 ;;		line 8 in file "/opt/microchip/xc8/v1.35/sources/common/lwmod.c"
   888 ;; Parameters:    Size  Location     Type
   889 ;;  dividend        2    0[COMRAM] unsigned int 
   890 ;;  divisor         2    2[COMRAM] unsigned int 
   891 ;; Auto vars:     Size  Location     Type
   892 ;;  counter         1    4[COMRAM] unsigned char 
   893 ;; Return value:  Size  Location     Type
   894 ;;                  2    0[COMRAM] unsigned int 
   895 ;; Registers used:
   896 ;;		wreg, status,2, status,0
   897 ;; Tracked objects:
   898 ;;		On entry : 0/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   902 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   903 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   905 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   906 ;;Total ram usage:        5 bytes
   907 ;; Hardware stack levels used:    1
   908 ;; This function calls:
   909 ;;		Nothing
   910 ;; This function is called by:
   911 ;;		_int_ascii
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915                           	psect	text4
   916  00FD74                     __ptext4:
   917                           	opt stack 0
   918  00FD74                     ___lwmod:
   919                           	opt stack 28
   920                           
   921                           ;incstack = 0
   922  00FD74  5003               	movf	___lwmod@divisor,w,c
   923  00FD76  1004               	iorwf	___lwmod@divisor+1,w,c
   924  00FD78  B4D8               	btfsc	status,2,c
   925  00FD7A  D018               	goto	l631
   926  00FD7C  0E01               	movlw	1
   927  00FD7E  6E05               	movwf	___lwmod@counter,c
   928  00FD80  D004               	goto	l1120
   929  00FD82                     l1118:
   930  00FD82  90D8               	bcf	status,0,c
   931  00FD84  3603               	rlcf	___lwmod@divisor,f,c
   932  00FD86  3604               	rlcf	___lwmod@divisor+1,f,c
   933  00FD88  2A05               	incf	___lwmod@counter,f,c
   934  00FD8A                     l1120:
   935  00FD8A  AE04               	btfss	___lwmod@divisor+1,7,c
   936  00FD8C  D7FA               	goto	l1118
   937  00FD8E                     l1122:
   938  00FD8E  5003               	movf	___lwmod@divisor,w,c
   939  00FD90  5C01               	subwf	___lwmod@dividend,w,c
   940  00FD92  5004               	movf	___lwmod@divisor+1,w,c
   941  00FD94  5802               	subwfb	___lwmod@dividend+1,w,c
   942  00FD96  A0D8               	btfss	status,0,c
   943  00FD98  D004               	goto	l1126
   944  00FD9A  5003               	movf	___lwmod@divisor,w,c
   945  00FD9C  5E01               	subwf	___lwmod@dividend,f,c
   946  00FD9E  5004               	movf	___lwmod@divisor+1,w,c
   947  00FDA0  5A02               	subwfb	___lwmod@dividend+1,f,c
   948  00FDA2                     l1126:
   949  00FDA2  90D8               	bcf	status,0,c
   950  00FDA4  3204               	rrcf	___lwmod@divisor+1,f,c
   951  00FDA6  3203               	rrcf	___lwmod@divisor,f,c
   952  00FDA8  2E05               	decfsz	___lwmod@counter,f,c
   953  00FDAA  D7F1               	goto	l1122
   954  00FDAC                     l631:
   955  00FDAC  C001  F001         	movff	___lwmod@dividend,?___lwmod
   956  00FDB0  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
   957  00FDB4  0012               	return		;funcret
   958  00FDB6                     __end_of___lwmod:
   959                           	opt stack 0
   960                           tblptru	equ	0xFF8
   961                           tblptrh	equ	0xFF7
   962                           tblptrl	equ	0xFF6
   963                           tablat	equ	0xFF5
   964                           prodh	equ	0xFF4
   965                           prodl	equ	0xFF3
   966                           postinc0	equ	0xFEE
   967                           wreg	equ	0xFE8
   968                           postdec1	equ	0xFE5
   969                           fsr1l	equ	0xFE1
   970                           indf2	equ	0xFDF
   971                           postinc2	equ	0xFDE
   972                           fsr2h	equ	0xFDA
   973                           fsr2l	equ	0xFD9
   974                           status	equ	0xFD8
   975                           
   976 ;; *************** function ___lwdiv *****************
   977 ;; Defined at:
   978 ;;		line 8 in file "/opt/microchip/xc8/v1.35/sources/common/lwdiv.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;  dividend        2    0[COMRAM] unsigned int 
   981 ;;  divisor         2    2[COMRAM] unsigned int 
   982 ;; Auto vars:     Size  Location     Type
   983 ;;  quotient        2    4[COMRAM] unsigned int 
   984 ;;  counter         1    6[COMRAM] unsigned char 
   985 ;; Return value:  Size  Location     Type
   986 ;;                  2    0[COMRAM] unsigned int 
   987 ;; Registers used:
   988 ;;		wreg, status,2, status,0
   989 ;; Tracked objects:
   990 ;;		On entry : 0/0
   991 ;;		On exit  : 0/0
   992 ;;		Unchanged: 0/0
   993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   994 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   995 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   997 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   998 ;;Total ram usage:        7 bytes
   999 ;; Hardware stack levels used:    1
  1000 ;; This function calls:
  1001 ;;		Nothing
  1002 ;; This function is called by:
  1003 ;;		_int_ascii
  1004 ;; This function uses a non-reentrant model
  1005 ;;
  1006                           
  1007                           	psect	text5
  1008  00FDB6                     __ptext5:
  1009                           	opt stack 0
  1010  00FDB6                     ___lwdiv:
  1011                           	opt stack 28
  1012                           
  1013                           ;incstack = 0
  1014  00FDB6  0E00               	movlw	0
  1015  00FDB8  6E06               	movwf	___lwdiv@quotient+1,c
  1016  00FDBA  0E00               	movlw	0
  1017  00FDBC  6E05               	movwf	___lwdiv@quotient,c
  1018  00FDBE  5003               	movf	___lwdiv@divisor,w,c
  1019  00FDC0  1004               	iorwf	___lwdiv@divisor+1,w,c
  1020  00FDC2  B4D8               	btfsc	status,2,c
  1021  00FDC4  D01C               	goto	l621
  1022  00FDC6  0E01               	movlw	1
  1023  00FDC8  6E07               	movwf	___lwdiv@counter,c
  1024  00FDCA  D004               	goto	l1100
  1025  00FDCC                     l1098:
  1026  00FDCC  90D8               	bcf	status,0,c
  1027  00FDCE  3603               	rlcf	___lwdiv@divisor,f,c
  1028  00FDD0  3604               	rlcf	___lwdiv@divisor+1,f,c
  1029  00FDD2  2A07               	incf	___lwdiv@counter,f,c
  1030  00FDD4                     l1100:
  1031  00FDD4  AE04               	btfss	___lwdiv@divisor+1,7,c
  1032  00FDD6  D7FA               	goto	l1098
  1033  00FDD8                     l1102:
  1034  00FDD8  90D8               	bcf	status,0,c
  1035  00FDDA  3605               	rlcf	___lwdiv@quotient,f,c
  1036  00FDDC  3606               	rlcf	___lwdiv@quotient+1,f,c
  1037  00FDDE  5003               	movf	___lwdiv@divisor,w,c
  1038  00FDE0  5C01               	subwf	___lwdiv@dividend,w,c
  1039  00FDE2  5004               	movf	___lwdiv@divisor+1,w,c
  1040  00FDE4  5802               	subwfb	___lwdiv@dividend+1,w,c
  1041  00FDE6  A0D8               	btfss	status,0,c
  1042  00FDE8  D005               	goto	l1110
  1043  00FDEA  5003               	movf	___lwdiv@divisor,w,c
  1044  00FDEC  5E01               	subwf	___lwdiv@dividend,f,c
  1045  00FDEE  5004               	movf	___lwdiv@divisor+1,w,c
  1046  00FDF0  5A02               	subwfb	___lwdiv@dividend+1,f,c
  1047  00FDF2  8005               	bsf	___lwdiv@quotient,0,c
  1048  00FDF4                     l1110:
  1049  00FDF4  90D8               	bcf	status,0,c
  1050  00FDF6  3204               	rrcf	___lwdiv@divisor+1,f,c
  1051  00FDF8  3203               	rrcf	___lwdiv@divisor,f,c
  1052  00FDFA  2E07               	decfsz	___lwdiv@counter,f,c
  1053  00FDFC  D7ED               	goto	l1102
  1054  00FDFE                     l621:
  1055  00FDFE  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1056  00FE02  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1057  00FE06  0012               	return		;funcret
  1058  00FE08                     __end_of___lwdiv:
  1059                           	opt stack 0
  1060                           tblptru	equ	0xFF8
  1061                           tblptrh	equ	0xFF7
  1062                           tblptrl	equ	0xFF6
  1063                           tablat	equ	0xFF5
  1064                           prodh	equ	0xFF4
  1065                           prodl	equ	0xFF3
  1066                           postinc0	equ	0xFEE
  1067                           wreg	equ	0xFE8
  1068                           postdec1	equ	0xFE5
  1069                           fsr1l	equ	0xFE1
  1070                           indf2	equ	0xFDF
  1071                           postinc2	equ	0xFDE
  1072                           fsr2h	equ	0xFDA
  1073                           fsr2l	equ	0xFD9
  1074                           status	equ	0xFD8
  1075                           
  1076 ;; *************** function _star_convercion *****************
  1077 ;; Defined at:
  1078 ;;		line 27 in file "adc.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;		None
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;		None
  1083 ;; Return value:  Size  Location     Type
  1084 ;;		None               void
  1085 ;; Registers used:
  1086 ;;		None
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1096 ;;Total ram usage:        0 bytes
  1097 ;; Hardware stack levels used:    1
  1098 ;; This function calls:
  1099 ;;		Nothing
  1100 ;; This function is called by:
  1101 ;;		_main
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           	psect	text6
  1106  00FBEE                     __ptext6:
  1107                           	opt stack 0
  1108  00FBEE                     _star_convercion:
  1109                           	opt stack 30
  1110                           
  1111                           ;adc.c: 28: ADCON0bits.GO=1;
  1112                           
  1113                           ;incstack = 0
  1114  00FBEE  82C2               	bsf	4034,1,c	;volatile
  1115  00FBF0  0012               	return		;funcret
  1116  00FBF2                     __end_of_star_convercion:
  1117                           	opt stack 0
  1118                           tblptru	equ	0xFF8
  1119                           tblptrh	equ	0xFF7
  1120                           tblptrl	equ	0xFF6
  1121                           tablat	equ	0xFF5
  1122                           prodh	equ	0xFF4
  1123                           prodl	equ	0xFF3
  1124                           postinc0	equ	0xFEE
  1125                           wreg	equ	0xFE8
  1126                           postdec1	equ	0xFE5
  1127                           fsr1l	equ	0xFE1
  1128                           indf2	equ	0xFDF
  1129                           postinc2	equ	0xFDE
  1130                           fsr2h	equ	0xFDA
  1131                           fsr2l	equ	0xFD9
  1132                           status	equ	0xFD8
  1133                           
  1134 ;; *************** function _set_ph *****************
  1135 ;; Defined at:
  1136 ;;		line 36 in file "main.c"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;		None
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;		None
  1141 ;; Return value:  Size  Location     Type
  1142 ;;		None               void
  1143 ;; Registers used:
  1144 ;;		wreg, status,2, cstack
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1154 ;;Total ram usage:        0 bytes
  1155 ;; Hardware stack levels used:    1
  1156 ;; Hardware stack levels required when called:    1
  1157 ;; This function calls:
  1158 ;;		_activacion_tx
  1159 ;;		_conf_adc
  1160 ;;		_config_tx_aurt
  1161 ;;		_set_adc
  1162 ;;		_set_leds
  1163 ;;		_timer_0_conf
  1164 ;;		_timer_0_set
  1165 ;;		_timer_0_star
  1166 ;; This function is called by:
  1167 ;;		_main
  1168 ;; This function uses a non-reentrant model
  1169 ;;
  1170                           
  1171                           	psect	text7
  1172  00FD12                     __ptext7:
  1173                           	opt stack 0
  1174  00FD12                     _set_ph:
  1175                           	opt stack 29
  1176                           
  1177                           ;main.c: 38: set_leds();
  1178                           
  1179                           ;incstack = 0
  1180  00FD12  EC44  F07E         	call	_set_leds	;wreg free
  1181                           
  1182                           ;main.c: 39: timer_0_conf();
  1183  00FD16  EC1A  F07E         	call	_timer_0_conf	;wreg free
  1184                           
  1185                           ;main.c: 40: timer_0_set(0x19,0xD3);
  1186  00FD1A  0ED3               	movlw	211
  1187  00FD1C  6E01               	movwf	timer_0_set@high,c
  1188  00FD1E  0E19               	movlw	25
  1189  00FD20  ECF9  F07D         	call	_timer_0_set
  1190                           
  1191                           ;main.c: 41: timer_0_star();
  1192  00FD24  ECF5  F07D         	call	_timer_0_star	;wreg free
  1193                           
  1194                           ;main.c: 42: conf_adc();
  1195  00FD28  EC63  F07E         	call	_conf_adc	;wreg free
  1196                           
  1197                           ;main.c: 43: set_adc(1);
  1198  00FD2C  0E01               	movlw	1
  1199  00FD2E  EC13  F07E         	call	_set_adc
  1200                           
  1201                           ;main.c: 44: config_tx_aurt();
  1202  00FD32  EC38  F07E         	call	_config_tx_aurt	;wreg free
  1203                           
  1204                           ;main.c: 45: activacion_tx(1);
  1205  00FD36  0E01               	movlw	1
  1206  00FD38  EC0C  F07E         	call	_activacion_tx
  1207  00FD3C  0012               	return		;funcret
  1208  00FD3E                     __end_of_set_ph:
  1209                           	opt stack 0
  1210                           tblptru	equ	0xFF8
  1211                           tblptrh	equ	0xFF7
  1212                           tblptrl	equ	0xFF6
  1213                           tablat	equ	0xFF5
  1214                           prodh	equ	0xFF4
  1215                           prodl	equ	0xFF3
  1216                           postinc0	equ	0xFEE
  1217                           wreg	equ	0xFE8
  1218                           postdec1	equ	0xFE5
  1219                           fsr1l	equ	0xFE1
  1220                           indf2	equ	0xFDF
  1221                           postinc2	equ	0xFDE
  1222                           fsr2h	equ	0xFDA
  1223                           fsr2l	equ	0xFD9
  1224                           status	equ	0xFD8
  1225                           
  1226 ;; *************** function _timer_0_conf *****************
  1227 ;; Defined at:
  1228 ;;		line 5 in file "timer.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;		None
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;		None
  1233 ;; Return value:  Size  Location     Type
  1234 ;;		None               void
  1235 ;; Registers used:
  1236 ;;		wreg, status,2
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1246 ;;Total ram usage:        0 bytes
  1247 ;; Hardware stack levels used:    1
  1248 ;; This function calls:
  1249 ;;		Nothing
  1250 ;; This function is called by:
  1251 ;;		_set_ph
  1252 ;; This function uses a non-reentrant model
  1253 ;;
  1254                           
  1255                           	psect	text8
  1256  00FC34                     __ptext8:
  1257                           	opt stack 0
  1258  00FC34                     _timer_0_conf:
  1259                           	opt stack 29
  1260                           
  1261                           ;timer.c: 6: T0CONbits.T0PS=101;
  1262                           
  1263                           ;incstack = 0
  1264  00FC34  50D5               	movf	4053,w,c	;volatile
  1265  00FC36  0BF8               	andlw	-8
  1266  00FC38  0905               	iorlw	5
  1267  00FC3A  6ED5               	movwf	4053,c	;volatile
  1268                           
  1269                           ;timer.c: 7: T0CONbits.T08BIT=0;
  1270  00FC3C  9CD5               	bcf	4053,6,c	;volatile
  1271                           
  1272                           ;timer.c: 8: T0CONbits.PSA=0;
  1273  00FC3E  96D5               	bcf	4053,3,c	;volatile
  1274                           
  1275                           ;timer.c: 9: T0CONbits.T0CS=0;
  1276  00FC40  9AD5               	bcf	4053,5,c	;volatile
  1277  00FC42  0012               	return		;funcret
  1278  00FC44                     __end_of_timer_0_conf:
  1279                           	opt stack 0
  1280                           tblptru	equ	0xFF8
  1281                           tblptrh	equ	0xFF7
  1282                           tblptrl	equ	0xFF6
  1283                           tablat	equ	0xFF5
  1284                           prodh	equ	0xFF4
  1285                           prodl	equ	0xFF3
  1286                           postinc0	equ	0xFEE
  1287                           wreg	equ	0xFE8
  1288                           postdec1	equ	0xFE5
  1289                           fsr1l	equ	0xFE1
  1290                           indf2	equ	0xFDF
  1291                           postinc2	equ	0xFDE
  1292                           fsr2h	equ	0xFDA
  1293                           fsr2l	equ	0xFD9
  1294                           status	equ	0xFD8
  1295                           
  1296 ;; *************** function _set_leds *****************
  1297 ;; Defined at:
  1298 ;;		line 4 in file "hw.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;		None
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;		None
  1303 ;; Return value:  Size  Location     Type
  1304 ;;		None               void
  1305 ;; Registers used:
  1306 ;;		wreg, status,2
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1316 ;;Total ram usage:        0 bytes
  1317 ;; Hardware stack levels used:    1
  1318 ;; This function calls:
  1319 ;;		Nothing
  1320 ;; This function is called by:
  1321 ;;		_set_ph
  1322 ;; This function uses a non-reentrant model
  1323 ;;
  1324                           
  1325                           	psect	text9
  1326  00FC88                     __ptext9:
  1327                           	opt stack 0
  1328  00FC88                     _set_leds:
  1329                           	opt stack 29
  1330                           
  1331                           ;hw.c: 5: PORTD=0;
  1332                           
  1333                           ;incstack = 0
  1334  00FC88  0E00               	movlw	0
  1335  00FC8A  6E83               	movwf	3971,c	;volatile
  1336                           
  1337                           ;hw.c: 6: LATD=0;
  1338  00FC8C  0E00               	movlw	0
  1339  00FC8E  6E8C               	movwf	3980,c	;volatile
  1340                           
  1341                           ;hw.c: 7: PORTB=0;
  1342  00FC90  0E00               	movlw	0
  1343  00FC92  6E81               	movwf	3969,c	;volatile
  1344                           
  1345                           ;hw.c: 8: TRISB=0;
  1346  00FC94  0E00               	movlw	0
  1347  00FC96  6E93               	movwf	3987,c	;volatile
  1348                           
  1349                           ;hw.c: 9: TRISD=0xF0;
  1350  00FC98  0EF0               	movlw	240
  1351  00FC9A  6E95               	movwf	3989,c	;volatile
  1352                           
  1353                           ;hw.c: 10: ANSEL=0XE0;
  1354  00FC9C  0EE0               	movlw	224
  1355  00FC9E  6E7E               	movwf	3966,c	;volatile
  1356                           
  1357                           ;hw.c: 11: TRISA=0XFF;
  1358  00FCA0  6892               	setf	3986,c	;volatile
  1359  00FCA2  0012               	return		;funcret
  1360  00FCA4                     __end_of_set_leds:
  1361                           	opt stack 0
  1362                           tblptru	equ	0xFF8
  1363                           tblptrh	equ	0xFF7
  1364                           tblptrl	equ	0xFF6
  1365                           tablat	equ	0xFF5
  1366                           prodh	equ	0xFF4
  1367                           prodl	equ	0xFF3
  1368                           postinc0	equ	0xFEE
  1369                           wreg	equ	0xFE8
  1370                           postdec1	equ	0xFE5
  1371                           fsr1l	equ	0xFE1
  1372                           indf2	equ	0xFDF
  1373                           postinc2	equ	0xFDE
  1374                           fsr2h	equ	0xFDA
  1375                           fsr2l	equ	0xFD9
  1376                           status	equ	0xFD8
  1377                           
  1378 ;; *************** function _set_adc *****************
  1379 ;; Defined at:
  1380 ;;		line 23 in file "adc.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;  x               1    wreg     unsigned char 
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;  x               1    0[COMRAM] unsigned char 
  1385 ;; Return value:  Size  Location     Type
  1386 ;;		None               void
  1387 ;; Registers used:
  1388 ;;		wreg
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1395 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1397 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1398 ;;Total ram usage:        1 bytes
  1399 ;; Hardware stack levels used:    1
  1400 ;; This function calls:
  1401 ;;		Nothing
  1402 ;; This function is called by:
  1403 ;;		_set_ph
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           	psect	text10
  1408  00FC26                     __ptext10:
  1409                           	opt stack 0
  1410  00FC26                     _set_adc:
  1411                           	opt stack 29
  1412                           
  1413                           ;incstack = 0
  1414                           ;set_adc@x stored from wreg
  1415  00FC26  6E01               	movwf	set_adc@x,c
  1416                           
  1417                           ;adc.c: 24: ADCON0bits.ADON=x;
  1418  00FC28  B001               	btfsc	set_adc@x,0,c
  1419  00FC2A  D002               	bra	u75
  1420  00FC2C  90C2               	bcf	4034,0,c	;volatile
  1421  00FC2E  D001               	bra	u76
  1422  00FC30                     u75:
  1423  00FC30  80C2               	bsf	4034,0,c	;volatile
  1424  00FC32                     u76:
  1425  00FC32  0012               	return		;funcret
  1426  00FC34                     __end_of_set_adc:
  1427                           	opt stack 0
  1428                           tblptru	equ	0xFF8
  1429                           tblptrh	equ	0xFF7
  1430                           tblptrl	equ	0xFF6
  1431                           tablat	equ	0xFF5
  1432                           prodh	equ	0xFF4
  1433                           prodl	equ	0xFF3
  1434                           postinc0	equ	0xFEE
  1435                           wreg	equ	0xFE8
  1436                           postdec1	equ	0xFE5
  1437                           fsr1l	equ	0xFE1
  1438                           indf2	equ	0xFDF
  1439                           postinc2	equ	0xFDE
  1440                           fsr2h	equ	0xFDA
  1441                           fsr2l	equ	0xFD9
  1442                           status	equ	0xFD8
  1443                           
  1444 ;; *************** function _config_tx_aurt *****************
  1445 ;; Defined at:
  1446 ;;		line 3 in file "m_uart.c"
  1447 ;; Parameters:    Size  Location     Type
  1448 ;;		None
  1449 ;; Auto vars:     Size  Location     Type
  1450 ;;		None
  1451 ;; Return value:  Size  Location     Type
  1452 ;;		None               void
  1453 ;; Registers used:
  1454 ;;		wreg, status,2
  1455 ;; Tracked objects:
  1456 ;;		On entry : 0/0
  1457 ;;		On exit  : 0/0
  1458 ;;		Unchanged: 0/0
  1459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1464 ;;Total ram usage:        0 bytes
  1465 ;; Hardware stack levels used:    1
  1466 ;; This function calls:
  1467 ;;		Nothing
  1468 ;; This function is called by:
  1469 ;;		_set_ph
  1470 ;; This function uses a non-reentrant model
  1471 ;;
  1472                           
  1473                           	psect	text11
  1474  00FC70                     __ptext11:
  1475                           	opt stack 0
  1476  00FC70                     _config_tx_aurt:
  1477                           	opt stack 29
  1478                           
  1479                           ;m_uart.c: 5: SPBRGH=0x3;
  1480                           
  1481                           ;incstack = 0
  1482  00FC70  0E03               	movlw	3
  1483  00FC72  6EB0               	movwf	4016,c	;volatile
  1484                           
  1485                           ;m_uart.c: 7: SPBRG=0X40;
  1486  00FC74  0E40               	movlw	64
  1487  00FC76  6EAF               	movwf	4015,c	;volatile
  1488                           
  1489                           ;m_uart.c: 8: TXSTAbits.SYNC=0;
  1490  00FC78  98AC               	bcf	4012,4,c	;volatile
  1491                           
  1492                           ;m_uart.c: 9: TXSTAbits.BRGH=1;
  1493  00FC7A  84AC               	bsf	4012,2,c	;volatile
  1494                           
  1495                           ;m_uart.c: 10: BAUDCONbits.BRG16=1;
  1496  00FC7C  86B8               	bsf	4024,3,c	;volatile
  1497                           
  1498                           ;m_uart.c: 11: TRISCbits.RC7=1;
  1499  00FC7E  8E94               	bsf	3988,7,c	;volatile
  1500                           
  1501                           ;m_uart.c: 12: TRISCbits.RC6=1;
  1502  00FC80  8C94               	bsf	3988,6,c	;volatile
  1503                           
  1504                           ;m_uart.c: 13: RCSTAbits.SPEN=1;
  1505  00FC82  8EAB               	bsf	4011,7,c	;volatile
  1506                           
  1507                           ;m_uart.c: 14: RCSTAbits.RX9=0;
  1508  00FC84  9CAB               	bcf	4011,6,c	;volatile
  1509  00FC86  0012               	return		;funcret
  1510  00FC88                     __end_of_config_tx_aurt:
  1511                           	opt stack 0
  1512                           tblptru	equ	0xFF8
  1513                           tblptrh	equ	0xFF7
  1514                           tblptrl	equ	0xFF6
  1515                           tablat	equ	0xFF5
  1516                           prodh	equ	0xFF4
  1517                           prodl	equ	0xFF3
  1518                           postinc0	equ	0xFEE
  1519                           wreg	equ	0xFE8
  1520                           postdec1	equ	0xFE5
  1521                           fsr1l	equ	0xFE1
  1522                           indf2	equ	0xFDF
  1523                           postinc2	equ	0xFDE
  1524                           fsr2h	equ	0xFDA
  1525                           fsr2l	equ	0xFD9
  1526                           status	equ	0xFD8
  1527                           
  1528 ;; *************** function _conf_adc *****************
  1529 ;; Defined at:
  1530 ;;		line 12 in file "adc.c"
  1531 ;; Parameters:    Size  Location     Type
  1532 ;;		None
  1533 ;; Auto vars:     Size  Location     Type
  1534 ;;		None
  1535 ;; Return value:  Size  Location     Type
  1536 ;;		None               void
  1537 ;; Registers used:
  1538 ;;		wreg, status,2
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1548 ;;Total ram usage:        0 bytes
  1549 ;; Hardware stack levels used:    1
  1550 ;; This function calls:
  1551 ;;		Nothing
  1552 ;; This function is called by:
  1553 ;;		_set_ph
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           
  1557                           	psect	text12
  1558  00FCC6                     __ptext12:
  1559                           	opt stack 0
  1560  00FCC6                     _conf_adc:
  1561                           	opt stack 29
  1562                           
  1563                           ;adc.c: 13: TRISAbits.RA0=1;
  1564                           
  1565                           ;incstack = 0
  1566  00FCC6  8092               	bsf	3986,0,c	;volatile
  1567                           
  1568                           ;adc.c: 14: ANSELbits.ANS0=1;
  1569  00FCC8  807E               	bsf	3966,0,c	;volatile
  1570                           
  1571                           ;adc.c: 15: ADCON2bits.ADCS=2;
  1572  00FCCA  50C0               	movf	4032,w,c	;volatile
  1573  00FCCC  0BF8               	andlw	-8
  1574  00FCCE  0902               	iorlw	2
  1575  00FCD0  6EC0               	movwf	4032,c	;volatile
  1576                           
  1577                           ;adc.c: 16: ADCON2bits.ACQT=2;
  1578  00FCD2  50C0               	movf	4032,w,c	;volatile
  1579  00FCD4  0BC7               	andlw	-57
  1580  00FCD6  0910               	iorlw	16
  1581  00FCD8  6EC0               	movwf	4032,c	;volatile
  1582                           
  1583                           ;adc.c: 17: ADCON1=0;
  1584  00FCDA  0E00               	movlw	0
  1585  00FCDC  6EC1               	movwf	4033,c	;volatile
  1586                           
  1587                           ;adc.c: 18: ADCON0bits.CHS=0;
  1588  00FCDE  94C2               	bcf	4034,2,c	;volatile
  1589  00FCE0  96C2               	bcf	4034,3,c	;volatile
  1590  00FCE2  98C2               	bcf	4034,4,c	;volatile
  1591  00FCE4  9AC2               	bcf	4034,5,c	;volatile
  1592                           
  1593                           ;adc.c: 19: ADCON2bits.ADFM=1;;
  1594  00FCE6  8EC0               	bsf	4032,7,c	;volatile
  1595  00FCE8  0012               	return		;funcret
  1596  00FCEA                     __end_of_conf_adc:
  1597                           	opt stack 0
  1598                           tblptru	equ	0xFF8
  1599                           tblptrh	equ	0xFF7
  1600                           tblptrl	equ	0xFF6
  1601                           tablat	equ	0xFF5
  1602                           prodh	equ	0xFF4
  1603                           prodl	equ	0xFF3
  1604                           postinc0	equ	0xFEE
  1605                           wreg	equ	0xFE8
  1606                           postdec1	equ	0xFE5
  1607                           fsr1l	equ	0xFE1
  1608                           indf2	equ	0xFDF
  1609                           postinc2	equ	0xFDE
  1610                           fsr2h	equ	0xFDA
  1611                           fsr2l	equ	0xFD9
  1612                           status	equ	0xFD8
  1613                           
  1614 ;; *************** function _activacion_tx *****************
  1615 ;; Defined at:
  1616 ;;		line 20 in file "m_uart.c"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;  x               1    wreg     unsigned char 
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;  x               1    0[COMRAM] unsigned char 
  1621 ;; Return value:  Size  Location     Type
  1622 ;;		None               void
  1623 ;; Registers used:
  1624 ;;		wreg
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1631 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1633 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1634 ;;Total ram usage:        1 bytes
  1635 ;; Hardware stack levels used:    1
  1636 ;; This function calls:
  1637 ;;		Nothing
  1638 ;; This function is called by:
  1639 ;;		_set_ph
  1640 ;; This function uses a non-reentrant model
  1641 ;;
  1642                           
  1643                           	psect	text13
  1644  00FC18                     __ptext13:
  1645                           	opt stack 0
  1646  00FC18                     _activacion_tx:
  1647                           	opt stack 29
  1648                           
  1649                           ;incstack = 0
  1650                           ;activacion_tx@x stored from wreg
  1651  00FC18  6E01               	movwf	activacion_tx@x,c
  1652                           
  1653                           ;m_uart.c: 21: TXSTAbits.TXEN=x;
  1654  00FC1A  B001               	btfsc	activacion_tx@x,0,c
  1655  00FC1C  D002               	bra	u85
  1656  00FC1E  9AAC               	bcf	4012,5,c	;volatile
  1657  00FC20  D001               	bra	u86
  1658  00FC22                     u85:
  1659  00FC22  8AAC               	bsf	4012,5,c	;volatile
  1660  00FC24                     u86:
  1661  00FC24  0012               	return		;funcret
  1662  00FC26                     __end_of_activacion_tx:
  1663                           	opt stack 0
  1664                           tblptru	equ	0xFF8
  1665                           tblptrh	equ	0xFF7
  1666                           tblptrl	equ	0xFF6
  1667                           tablat	equ	0xFF5
  1668                           prodh	equ	0xFF4
  1669                           prodl	equ	0xFF3
  1670                           postinc0	equ	0xFEE
  1671                           wreg	equ	0xFE8
  1672                           postdec1	equ	0xFE5
  1673                           fsr1l	equ	0xFE1
  1674                           indf2	equ	0xFDF
  1675                           postinc2	equ	0xFDE
  1676                           fsr2h	equ	0xFDA
  1677                           fsr2l	equ	0xFD9
  1678                           status	equ	0xFD8
  1679                           
  1680 ;; *************** function _port *****************
  1681 ;; Defined at:
  1682 ;;		line 14 in file "hw.c"
  1683 ;; Parameters:    Size  Location     Type
  1684 ;;  c               1    wreg     unsigned char 
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;  c               1    0[COMRAM] unsigned char 
  1687 ;; Return value:  Size  Location     Type
  1688 ;;		None               void
  1689 ;; Registers used:
  1690 ;;		wreg, status,2, status,0
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1697 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1699 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1700 ;;Total ram usage:        1 bytes
  1701 ;; Hardware stack levels used:    1
  1702 ;; This function calls:
  1703 ;;		Nothing
  1704 ;; This function is called by:
  1705 ;;		_main
  1706 ;; This function uses a non-reentrant model
  1707 ;;
  1708                           
  1709                           	psect	text14
  1710  00FC58                     __ptext14:
  1711                           	opt stack 0
  1712  00FC58                     _port:
  1713                           	opt stack 30
  1714                           
  1715                           ;incstack = 0
  1716                           ;port@c stored from wreg
  1717  00FC58  6E01               	movwf	port@c,c
  1718                           
  1719                           ;hw.c: 15: LATD &=0XF0;
  1720  00FC5A  0EF0               	movlw	240
  1721  00FC5C  168C               	andwf	3980,f,c	;volatile
  1722                           
  1723                           ;hw.c: 16: LATB &= 0XF0;
  1724  00FC5E  0EF0               	movlw	240
  1725  00FC60  168A               	andwf	3978,f,c	;volatile
  1726                           
  1727                           ;hw.c: 17: LATD |=(c & 0x0F);
  1728  00FC62  5001               	movf	port@c,w,c
  1729  00FC64  0B0F               	andlw	15
  1730  00FC66  128C               	iorwf	3980,f,c	;volatile
  1731                           
  1732                           ;hw.c: 18: LATB |=(c>>4);
  1733  00FC68  3801               	swapf	port@c,w,c
  1734  00FC6A  0B0F               	andlw	15
  1735  00FC6C  128A               	iorwf	3978,f,c	;volatile
  1736  00FC6E  0012               	return		;funcret
  1737  00FC70                     __end_of_port:
  1738                           	opt stack 0
  1739                           tblptru	equ	0xFF8
  1740                           tblptrh	equ	0xFF7
  1741                           tblptrl	equ	0xFF6
  1742                           tablat	equ	0xFF5
  1743                           prodh	equ	0xFF4
  1744                           prodl	equ	0xFF3
  1745                           postinc0	equ	0xFEE
  1746                           wreg	equ	0xFE8
  1747                           postdec1	equ	0xFE5
  1748                           fsr1l	equ	0xFE1
  1749                           indf2	equ	0xFDF
  1750                           postinc2	equ	0xFDE
  1751                           fsr2h	equ	0xFDA
  1752                           fsr2l	equ	0xFD9
  1753                           status	equ	0xFD8
  1754                           
  1755 ;; *************** function _flag_timer_0 *****************
  1756 ;; Defined at:
  1757 ;;		line 21 in file "timer.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;		None
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;		None
  1762 ;; Return value:  Size  Location     Type
  1763 ;;                  2    2[COMRAM] int 
  1764 ;; Registers used:
  1765 ;;		wreg, status,2, cstack
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1771 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1774 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1775 ;;Total ram usage:        2 bytes
  1776 ;; Hardware stack levels used:    1
  1777 ;; Hardware stack levels required when called:    1
  1778 ;; This function calls:
  1779 ;;		_timer_0_set
  1780 ;;		_timer_0_star
  1781 ;; This function is called by:
  1782 ;;		_main
  1783 ;; This function uses a non-reentrant model
  1784 ;;
  1785                           
  1786                           	psect	text15
  1787  00FCEA                     __ptext15:
  1788                           	opt stack 0
  1789  00FCEA                     _flag_timer_0:
  1790                           	opt stack 29
  1791                           
  1792                           ;timer.c: 22: if(INTCONbits.T0IF){
  1793                           
  1794                           ;incstack = 0
  1795  00FCEA  A4F2               	btfss	intcon,2,c	;volatile
  1796  00FCEC  D00D               	goto	l1188
  1797                           
  1798                           ;timer.c: 23: INTCONbits.T0IF=0;
  1799  00FCEE  94F2               	bcf	intcon,2,c	;volatile
  1800                           
  1801                           ;timer.c: 24: timer_0_set(0x19,0xD3);
  1802  00FCF0  0ED3               	movlw	211
  1803  00FCF2  6E01               	movwf	timer_0_set@high,c
  1804  00FCF4  0E19               	movlw	25
  1805  00FCF6  ECF9  F07D         	call	_timer_0_set
  1806                           
  1807                           ;timer.c: 25: timer_0_star();
  1808  00FCFA  ECF5  F07D         	call	_timer_0_star	;wreg free
  1809                           
  1810                           ;timer.c: 26: return 1;
  1811  00FCFE  0E00               	movlw	0
  1812  00FD00  6E04               	movwf	?_flag_timer_0+1,c
  1813  00FD02  0E01               	movlw	1
  1814  00FD04  6E03               	movwf	?_flag_timer_0,c
  1815                           
  1816                           ;timer.c: 27: }
  1817  00FD06  0012               	return	
  1818  00FD08                     l1188:
  1819                           
  1820                           ;timer.c: 28: else
  1821                           ;timer.c: 29: return 0;
  1822  00FD08  0E00               	movlw	0
  1823  00FD0A  6E04               	movwf	?_flag_timer_0+1,c
  1824  00FD0C  0E00               	movlw	0
  1825  00FD0E  6E03               	movwf	?_flag_timer_0,c
  1826  00FD10  0012               	return	
  1827  00FD12                     __end_of_flag_timer_0:
  1828                           	opt stack 0
  1829                           tblptru	equ	0xFF8
  1830                           tblptrh	equ	0xFF7
  1831                           tblptrl	equ	0xFF6
  1832                           tablat	equ	0xFF5
  1833                           prodh	equ	0xFF4
  1834                           prodl	equ	0xFF3
  1835                           intcon	equ	0xFF2
  1836                           postinc0	equ	0xFEE
  1837                           wreg	equ	0xFE8
  1838                           postdec1	equ	0xFE5
  1839                           fsr1l	equ	0xFE1
  1840                           indf2	equ	0xFDF
  1841                           postinc2	equ	0xFDE
  1842                           fsr2h	equ	0xFDA
  1843                           fsr2l	equ	0xFD9
  1844                           status	equ	0xFD8
  1845                           
  1846 ;; *************** function _timer_0_star *****************
  1847 ;; Defined at:
  1848 ;;		line 17 in file "timer.c"
  1849 ;; Parameters:    Size  Location     Type
  1850 ;;		None
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;		None
  1853 ;; Return value:  Size  Location     Type
  1854 ;;		None               void
  1855 ;; Registers used:
  1856 ;;		None
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1866 ;;Total ram usage:        0 bytes
  1867 ;; Hardware stack levels used:    1
  1868 ;; This function calls:
  1869 ;;		Nothing
  1870 ;; This function is called by:
  1871 ;;		_set_ph
  1872 ;;		_flag_timer_0
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876                           	psect	text16
  1877  00FBEA                     __ptext16:
  1878                           	opt stack 0
  1879  00FBEA                     _timer_0_star:
  1880                           	opt stack 29
  1881                           
  1882                           ;timer.c: 18: T0CONbits.TMR0ON=1;
  1883                           
  1884                           ;incstack = 0
  1885  00FBEA  8ED5               	bsf	4053,7,c	;volatile
  1886  00FBEC  0012               	return		;funcret
  1887  00FBEE                     __end_of_timer_0_star:
  1888                           	opt stack 0
  1889                           tblptru	equ	0xFF8
  1890                           tblptrh	equ	0xFF7
  1891                           tblptrl	equ	0xFF6
  1892                           tablat	equ	0xFF5
  1893                           prodh	equ	0xFF4
  1894                           prodl	equ	0xFF3
  1895                           intcon	equ	0xFF2
  1896                           postinc0	equ	0xFEE
  1897                           wreg	equ	0xFE8
  1898                           postdec1	equ	0xFE5
  1899                           fsr1l	equ	0xFE1
  1900                           indf2	equ	0xFDF
  1901                           postinc2	equ	0xFDE
  1902                           fsr2h	equ	0xFDA
  1903                           fsr2l	equ	0xFD9
  1904                           status	equ	0xFD8
  1905                           
  1906 ;; *************** function _timer_0_set *****************
  1907 ;; Defined at:
  1908 ;;		line 12 in file "timer.c"
  1909 ;; Parameters:    Size  Location     Type
  1910 ;;  low             1    wreg     unsigned char 
  1911 ;;  high            1    0[COMRAM] unsigned char 
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;  low             1    1[COMRAM] unsigned char 
  1914 ;; Return value:  Size  Location     Type
  1915 ;;		None               void
  1916 ;; Registers used:
  1917 ;;		wreg
  1918 ;; Tracked objects:
  1919 ;;		On entry : 0/0
  1920 ;;		On exit  : 0/0
  1921 ;;		Unchanged: 0/0
  1922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1923 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1924 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1926 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1927 ;;Total ram usage:        2 bytes
  1928 ;; Hardware stack levels used:    1
  1929 ;; This function calls:
  1930 ;;		Nothing
  1931 ;; This function is called by:
  1932 ;;		_set_ph
  1933 ;;		_flag_timer_0
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           	psect	text17
  1938  00FBF2                     __ptext17:
  1939                           	opt stack 0
  1940  00FBF2                     _timer_0_set:
  1941                           	opt stack 29
  1942                           
  1943                           ;incstack = 0
  1944                           ;timer_0_set@low stored from wreg
  1945  00FBF2  6E02               	movwf	timer_0_set@low,c
  1946                           
  1947                           ;timer.c: 13: TMR0H=high;
  1948  00FBF4  C001  FFD7         	movff	timer_0_set@high,4055	;volatile
  1949                           
  1950                           ;timer.c: 14: TMR0L=low;
  1951  00FBF8  C002  FFD6         	movff	timer_0_set@low,4054	;volatile
  1952  00FBFC  0012               	return		;funcret
  1953  00FBFE                     __end_of_timer_0_set:
  1954                           	opt stack 0
  1955                           tblptru	equ	0xFF8
  1956                           tblptrh	equ	0xFF7
  1957                           tblptrl	equ	0xFF6
  1958                           tablat	equ	0xFF5
  1959                           prodh	equ	0xFF4
  1960                           prodl	equ	0xFF3
  1961                           intcon	equ	0xFF2
  1962                           postinc0	equ	0xFEE
  1963                           wreg	equ	0xFE8
  1964                           postdec1	equ	0xFE5
  1965                           fsr1l	equ	0xFE1
  1966                           indf2	equ	0xFDF
  1967                           postinc2	equ	0xFDE
  1968                           fsr2h	equ	0xFDA
  1969                           fsr2l	equ	0xFD9
  1970                           status	equ	0xFD8
  1971                           
  1972 ;; *************** function _final_convercion *****************
  1973 ;; Defined at:
  1974 ;;		line 31 in file "adc.c"
  1975 ;; Parameters:    Size  Location     Type
  1976 ;;		None
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;		None
  1979 ;; Return value:  Size  Location     Type
  1980 ;;                  1    wreg      unsigned char 
  1981 ;; Registers used:
  1982 ;;		wreg
  1983 ;; Tracked objects:
  1984 ;;		On entry : 0/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1992 ;;Total ram usage:        0 bytes
  1993 ;; Hardware stack levels used:    1
  1994 ;; This function calls:
  1995 ;;		Nothing
  1996 ;; This function is called by:
  1997 ;;		_main
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           
  2001                           	psect	text18
  2002  00FC0A                     __ptext18:
  2003                           	opt stack 0
  2004  00FC0A                     _final_convercion:
  2005                           	opt stack 30
  2006                           
  2007                           ;adc.c: 32: if (PIR1bits.ADIF){
  2008                           
  2009                           ;incstack = 0
  2010  00FC0A  AC9E               	btfss	3998,6,c	;volatile
  2011  00FC0C  D003               	goto	l974
  2012                           
  2013                           ;adc.c: 33: PIR1bits.ADIF=0;
  2014  00FC0E  9C9E               	bcf	3998,6,c	;volatile
  2015                           
  2016                           ;adc.c: 34: return 1;
  2017  00FC10  0E01               	movlw	1
  2018                           
  2019                           ;adc.c: 35: }
  2020  00FC12  0012               	return	
  2021  00FC14                     l974:
  2022                           
  2023                           ;adc.c: 36: else
  2024                           ;adc.c: 37: return 0;
  2025  00FC14  0E00               	movlw	0
  2026  00FC16  0012               	return	
  2027  00FC18                     __end_of_final_convercion:
  2028                           	opt stack 0
  2029                           tblptru	equ	0xFF8
  2030                           tblptrh	equ	0xFF7
  2031                           tblptrl	equ	0xFF6
  2032                           tablat	equ	0xFF5
  2033                           prodh	equ	0xFF4
  2034                           prodl	equ	0xFF3
  2035                           intcon	equ	0xFF2
  2036                           postinc0	equ	0xFEE
  2037                           wreg	equ	0xFE8
  2038                           postdec1	equ	0xFE5
  2039                           fsr1l	equ	0xFE1
  2040                           indf2	equ	0xFDF
  2041                           postinc2	equ	0xFDE
  2042                           fsr2h	equ	0xFDA
  2043                           fsr2l	equ	0xFD9
  2044                           status	equ	0xFD8
  2045                           
  2046 ;; *************** function _dato_16 *****************
  2047 ;; Defined at:
  2048 ;;		line 46 in file "adc.c"
  2049 ;; Parameters:    Size  Location     Type
  2050 ;;		None
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;  y               2    2[COMRAM] unsigned int 
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  2    0[COMRAM] int 
  2055 ;; Registers used:
  2056 ;;		wreg, status,2, status,0
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2062 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2063 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2065 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2066 ;;Total ram usage:        4 bytes
  2067 ;; Hardware stack levels used:    1
  2068 ;; This function calls:
  2069 ;;		Nothing
  2070 ;; This function is called by:
  2071 ;;		_main
  2072 ;; This function uses a non-reentrant model
  2073 ;;
  2074                           
  2075                           	psect	text19
  2076  00FCA4                     __ptext19:
  2077                           	opt stack 0
  2078  00FCA4                     _dato_16:
  2079                           	opt stack 30
  2080                           
  2081                           ;adc.c: 47: unsigned int y=0;
  2082                           
  2083                           ;incstack = 0
  2084  00FCA4  0E00               	movlw	0
  2085  00FCA6  6E04               	movwf	dato_16@y+1,c
  2086  00FCA8  0E00               	movlw	0
  2087  00FCAA  6E03               	movwf	dato_16@y,c
  2088                           
  2089                           ;adc.c: 48: y=ADRESH;
  2090  00FCAC  CFC4 F003          	movff	4036,dato_16@y	;volatile
  2091  00FCB0  6A04               	clrf	dato_16@y+1,c
  2092                           
  2093                           ;adc.c: 49: y<<=8;
  2094  00FCB2  5003               	movf	dato_16@y,w,c
  2095  00FCB4  6E04               	movwf	dato_16@y+1,c
  2096  00FCB6  6A03               	clrf	dato_16@y,c
  2097                           
  2098                           ;adc.c: 50: y|=ADRESL;
  2099  00FCB8  50C3               	movf	4035,w,c	;volatile
  2100  00FCBA  1203               	iorwf	dato_16@y,f,c
  2101                           
  2102                           ;adc.c: 51: return y;
  2103  00FCBC  C003  F001         	movff	dato_16@y,?_dato_16
  2104  00FCC0  C004  F002         	movff	dato_16@y+1,?_dato_16+1
  2105  00FCC4  0012               	return	
  2106  00FCC6                     __end_of_dato_16:
  2107                           	opt stack 0
  2108  0000                     tblptru	equ	0xFF8
  2109                           tblptrh	equ	0xFF7
  2110                           tblptrl	equ	0xFF6
  2111                           tablat	equ	0xFF5
  2112                           prodh	equ	0xFF4
  2113                           prodl	equ	0xFF3
  2114                           intcon	equ	0xFF2
  2115                           postinc0	equ	0xFEE
  2116                           wreg	equ	0xFE8
  2117                           postdec1	equ	0xFE5
  2118                           fsr1l	equ	0xFE1
  2119                           indf2	equ	0xFDF
  2120                           postinc2	equ	0xFDE
  2121                           fsr2h	equ	0xFDA
  2122                           fsr2l	equ	0xFD9
  2123                           status	equ	0xFD8
  2124                           tblptru	equ	0xFF8
  2125                           tblptrh	equ	0xFF7
  2126                           tblptrl	equ	0xFF6
  2127                           tablat	equ	0xFF5
  2128                           prodh	equ	0xFF4
  2129                           prodl	equ	0xFF3
  2130                           intcon	equ	0xFF2
  2131                           postinc0	equ	0xFEE
  2132                           wreg	equ	0xFE8
  2133                           postdec1	equ	0xFE5
  2134                           fsr1l	equ	0xFE1
  2135                           indf2	equ	0xFDF
  2136                           postinc2	equ	0xFDE
  2137                           fsr2h	equ	0xFDA
  2138                           fsr2l	equ	0xFD9
  2139                           status	equ	0xFD8
  2140                           
  2141                           	psect	rparam
  2142  0000                     tblptru	equ	0xFF8
  2143                           tblptrh	equ	0xFF7
  2144                           tblptrl	equ	0xFF6
  2145                           tablat	equ	0xFF5
  2146                           prodh	equ	0xFF4
  2147                           prodl	equ	0xFF3
  2148                           intcon	equ	0xFF2
  2149                           postinc0	equ	0xFEE
  2150                           wreg	equ	0xFE8
  2151                           postdec1	equ	0xFE5
  2152                           fsr1l	equ	0xFE1
  2153                           indf2	equ	0xFDF
  2154                           postinc2	equ	0xFDE
  2155                           fsr2h	equ	0xFDA
  2156                           fsr2l	equ	0xFD9
  2157                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     23      63
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_transmitir
    _transmitir->_int_ascii
    _int_ascii->___lwdiv
    _set_ph->_timer_0_set
    _flag_timer_0->_timer_0_set

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     2      5    1175
                                             16 COMRAM     7     2      5
                            _dato_16
                   _final_convercion
                       _flag_timer_0
                               _port
                             _set_ph
                    _star_convercion
                         _transmitir
 ---------------------------------------------------------------------------------
 (1) _transmitir                                           2     2      0     780
                                             14 COMRAM     2     2      0
                          _int_ascii
                         _trans_dato
 ---------------------------------------------------------------------------------
 (2) _trans_dato                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _int_ascii                                            7     7      0     765
                                              7 COMRAM     7     7      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     245
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     248
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _star_convercion                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_ph                                               0     0      0     160
                      _activacion_tx
                           _conf_adc
                     _config_tx_aurt
                            _set_adc
                           _set_leds
                       _timer_0_conf
                        _timer_0_set
                       _timer_0_star
 ---------------------------------------------------------------------------------
 (2) _timer_0_conf                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _set_leds                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _set_adc                                              1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _config_tx_aurt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _conf_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _activacion_tx                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _port                                                 1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _flag_timer_0                                         2     0      2     130
                                              2 COMRAM     2     0      2
                        _timer_0_set
                       _timer_0_star
 ---------------------------------------------------------------------------------
 (2) _timer_0_star                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _timer_0_set                                          2     1      1     130
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _final_convercion                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dato_16                                              4     2      2      26
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dato_16
   _final_convercion
   _flag_timer_0
     _timer_0_set
     _timer_0_star
   _port
   _set_ph
     _activacion_tx
     _conf_adc
     _config_tx_aurt
     _set_adc
     _set_leds
     _timer_0_conf
     _timer_0_set
     _timer_0_star
   _star_convercion
   _transmitir
     _int_ascii
       ___lwdiv
       ___lwmod
     _trans_dato

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     17      3F       1       66.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3F      32        0.0%
DATA                 0      0      3F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Nov 30 19:28:17 2016

                        _a 003F                          _d 0028                          _i 0026  
                        _m 002A                         u75 FC30                         u76 FC32  
                       u85 FC22                         u86 FC24               __CFG_CP0$OFF 000000  
             __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000               __CFG_CP3$OFF 000000  
                      l621 FDFE                        l631 FDAC                        l199 FC00  
                      l974 FC14               __CFG_CPB$OFF 000000               __CFG_CPD$OFF 000000  
                      _est 0024                        _ope 002B                        _msm 002C  
             __CFG_BORV$18 000000                        prod 000FF3                        wreg 000FE8  
             __CFG_LVP$OFF 000000                       l1100 FDD4                       l1110 FDF4  
                     l1102 FDD8                       l1120 FD8A                       l1122 FD8E  
                     l1204 FE6A                       l1126 FDA2                       l1118 FD82  
                     l1150 FF62                       l1142 FF32                       l1222 FEDA  
                     l1214 FEA4                       l1230 FEF8                       l1160 FFF6  
                     l1216 FEB6                       l1208 FE78                       l1162 FFF8  
                     l1138 FF2A                       l1242 FE14                       l1148 FF5E  
                     l1260 FE5C                       l1252 FE34                       l1256 FE40  
                     l1098 FDCC                       l1188 FD08                       _LATB 000F8A  
                     _LATD 000F8C               __CFG_PWRT$ON 000000                       _main FE08  
                     _port FC58                       fsr1l 000FE1                       indf2 000FDF  
                     fsr2l 000FD9                       prodl 000FF3                       start 0000  
            __CFG_IESO$OFF 000000              __CFG_MCLRE$ON 000000               ___param_bank 000010  
             main@contador 0017                      ?_main 0011                      ?_port 0001  
                    _ANSEL 000F7E      __end_of_activacion_tx FC26            __end_of___lwdiv FE08  
          __end_of___lwmod FDB6                      _RCREG 000FAE                      _TMR0H 000FD7  
                    _TMR0L 000FD6                      _SPBRG 000FAF                      _PORTB 000F81  
                    _PORTD 000F83                      _TRISA 000F92                      _TRISB 000F93  
                    _TRISD 000F95            __end_of_dato_16 FCC6                      _TXREG 000FAD  
            __CFG_WRT0$OFF 000000              __CFG_WRT1$OFF 000000              __CFG_WRT2$OFF 000000  
            __CFG_WRT3$OFF 000000             __CFG_EBTR0$OFF 000000             __CFG_FCMEN$OFF 000000  
           __CFG_EBTR1$OFF 000000             __CFG_EBTR2$OFF 000000             __CFG_EBTR3$OFF 000000  
            __CFG_WRTB$OFF 000000              __CFG_WRTC$OFF 000000              __CFG_WRTD$OFF 000000  
           __CFG_EBTRB$OFF 000000            __end_of_set_adc FC34             __CFG_BOREN$OFF 000000  
                    tablat 000FF5           _final_convercion FC0A                      port@c 0001  
                    status 000FD8            _star_convercion FBEE            __initialization FD3E  
             __end_of_main FE68               __end_of_port FC70                     ??_main 0016  
                   ??_port 0001              __activetblptr 000002       __end_of_flag_timer_0 FD12  
            main@contador1 0016                     _ADCON1 000FC1                     _ADRESH 000FC4  
                   _ADRESL 000FC3             __CFG_WDTEN$OFF 000000                     _SPBRGH 000FB0  
           __CFG_XINST$OFF 000000           __end_of_conf_adc FCEA                  ??___lwdiv 0005  
                ??___lwmod 0005                  ??_dato_16 0003                     clear_0 FD44  
                   _set_ph FD12               ?_timer_0_set 0001               __pdataCOMRAM 002C  
         __end_of_set_leds FCA4                  ??_set_adc 0001                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8            __CFG_HFOFST$OFF 000000  
  __end_of_star_convercion FBF2           ??_config_tx_aurt 0001            __CFG_FOSC$HSPLL 000000  
               __accesstop 0060    __end_of__initialization FD6A            __CFG_PBADEN$OFF 000000  
            ___rparam_used 000001             __pcstackCOMRAM 0001         __size_of_int_ascii 00E2  
 __end_of_final_convercion FC18                    ?_set_ph 0001      __size_of_flag_timer_0 0028  
                ?_conf_adc 0001           ?_star_convercion 0001                    __Hparam 0000  
                  __Lparam 0000                  ?_set_leds 0001               _flag_timer_0 FCEA  
                  ___lwdiv FDB6                    ___lwmod FD74            __CFG_STVREN$OFF 000000  
                  _dato_16 FCA4                    __pcinit FD3E                  _ANSELbits 000F7E  
                  __ramtop 1000                    __ptext0 FE08                    __ptext1 FE68  
                  __ptext2 FBFE                    __ptext3 FF1E                    __ptext4 FD74  
          __size_of_set_ph 002C                    __ptext5 FDB6                    __ptext6 FBEE  
                  __ptext7 FD12                    __ptext8 FC34                    __ptext9 FC88  
                _T0CONbits 000FD5          __end_of_int_ascii 0000       __size_of_timer_0_set 000C  
                  _set_adc FC26              ?_timer_0_conf 0001                 ??_conf_adc 0001  
            ?_timer_0_star 0001       end_of_initialization FD6A              __Lmediumconst 0000  
   __size_of_activacion_tx 000E                 ??_set_leds 0001                  _RCSTAbits 000FAB  
                  postdec1 000FE5                    postinc0 000FEE                    postinc2 000FDE  
                _TRISAbits 000F92                  _TRISCbits 000F94             ??_timer_0_conf 0001  
           ??_timer_0_star 0001                 _trans_dato FBFE                 _transmitir FE68  
                _TXSTAbits 000FAC               _conversion16 0018                _BAUDCONbits 000FB8  
            __pidataCOMRAM FC44             __end_of_set_ph FD3E              _activacion_tx FC18  
      start_initialization FD3E                trans_dato@x 0001            timer_0_set@high 0001  
         __CFG_LPT1OSC$OFF 000000                 int_ascii@j 000E                   ??_set_ph 0003  
        ?_final_convercion 0001             ?_activacion_tx 0001         ??_final_convercion 0001  
              __pbssCOMRAM 0018                ?_trans_dato 0001                ?_transmitir 0001  
        __size_of_conf_adc 0024           ___lwdiv@dividend 0001          __CFG_CCP2MX$PORTC 000000  
  __size_of_config_tx_aurt 0018       __end_of_timer_0_conf FC44       __end_of_timer_0_star FBEE  
        __size_of_set_leds 001C                   ?___lwdiv 0001                   ?___lwmod 0001  
                 ?_dato_16 0001                   ?_set_adc 0001           ___lwdiv@quotient 0005  
                _int_ascii FF1E   __size_of_star_convercion 0004                   _PIR1bits 000F9E  
         __CFG_WDTPS$32768 000000        __size_of_trans_dato 000C            ??_activacion_tx 0001  
      __size_of_transmitir 00B6              ??_timer_0_set 0002                 _ADCON0bits 000FC2  
               _ADCON2bits 000FC0                 ?_int_ascii 0001                  copy_data0 FD5E  
           activacion_tx@x 0001                   __Hrparam 0000                   __Lrparam 0000  
           timer_0_set@low 0002         _inicio_transmision 0029           __size_of___lwdiv 0052  
         __size_of___lwmod 0042           __size_of_dato_16 0022            ___lwdiv@divisor 0003  
          ___lwdiv@counter 0007        __end_of_timer_0_set FBFE           __size_of_set_adc 000E  
                 __ptext10 FC26                   __ptext11 FC70                   __ptext12 FCC6  
                 __ptext13 FC18                   __ptext14 FC58                   __ptext15 FCEA  
                 __ptext16 FBEA                   __ptext17 FBF2                   __ptext18 FC0A  
                 __ptext19 FCA4                   _conf_adc FCC6                   dato_16@y 0003  
            __size_of_main 0060              __size_of_port 0018      __size_of_timer_0_conf 0010  
    __size_of_timer_0_star 0004                   _set_leds FC88             _config_tx_aurt FC70  
                 main@argc 0011                   main@argv 0013          ??_star_convercion 0001  
               _INTCONbits 000FF2               ??_trans_dato 0001               _timer_0_conf FC34  
              ??_int_ascii 0008               _timer_0_star FBEA               ??_transmitir 000F  
__size_of_final_convercion 000E           ___lwmod@dividend 0001                   set_adc@x 0001  
   __end_of_config_tx_aurt FC88              int_ascii@aux1 000C              int_ascii@aux2 000A  
            ?_flag_timer_0 0003         __end_of_trans_dato FC0A         __end_of_transmitir FF1E  
              _timer_0_set FBF2            ___lwmod@divisor 0003            ___lwmod@counter 0005  
          ?_config_tx_aurt 0001             ??_flag_timer_0 0005  
