

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Nov 24 16:48:59 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    28  0000                     
    29                           	psect	idataCOMRAM
    30  00FCE1                     __pidataCOMRAM:
    31                           	opt stack 0
    32                           
    33                           ;initializer for _a
    34  00FCE1  FF                 	db	255
    35                           
    36                           	psect	nvCOMRAM
    37  00000C                     __pnvCOMRAM:
    38                           	opt stack 0
    39  00000C                     _d:
    40                           	opt stack 0
    41  00000C                     	ds	1
    42  0000                     _ANSEL	set	3966
    43  0000                     _INTCONbits	set	4082
    44  0000                     _LATB	set	3978
    45  0000                     _LATD	set	3980
    46  0000                     _PORTB	set	3969
    47  0000                     _PORTD	set	3971
    48  0000                     _T0CONbits	set	4053
    49  0000                     _TMR0H	set	4055
    50  0000                     _TMR0L	set	4054
    51  0000                     _TRISA	set	3986
    52  0000                     _TRISB	set	3987
    53  0000                     _TRISD	set	3989
    54                           
    55                           ; #config settings
    56  0000                     
    57                           	psect	cinit
    58  00FD4C                     __pcinit:
    59                           	opt stack 0
    60  00FD4C                     start_initialization:
    61                           	opt stack 0
    62  00FD4C                     __initialization:
    63                           	opt stack 0
    64                           
    65                           ; Clear objects allocated to COMRAM (2 bytes)
    66  00FD4C  6A0B               	clrf	(__pbssCOMRAM+1)& (0+255),c
    67  00FD4E  6A0A               	clrf	__pbssCOMRAM& (0+255),c
    68                           
    69                           ; Initialize objects allocated to COMRAM (1 bytes)
    70                           ; load TBLPTR registers with __pidataCOMRAM
    71  00FD50  0EE1               	movlw	low __pidataCOMRAM
    72  00FD52  6EF6               	movwf	tblptrl,c
    73  00FD54  0EFC               	movlw	high __pidataCOMRAM
    74  00FD56  6EF7               	movwf	tblptrh,c
    75  00FD58  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    76  00FD5A  6EF8               	movwf	tblptru,c
    77  00FD5C  0009               	tblrd		*+	;fetch initializer
    78  00FD5E  CFF5 F00D          	movff	tablat,__pdataCOMRAM
    79  00FD62                     end_of_initialization:
    80                           	opt stack 0
    81  00FD62                     __end_of__initialization:
    82                           	opt stack 0
    83  00FD62  0E00               	movlw	low (__Lmediumconst shr (0+16))
    84  00FD64  6EF8               	movwf	tblptru,c
    85  00FD66  0100               	movlb	0
    86  00FD68  EFB6  F07E         	goto	_main	;jump to C main() function
    87                           tblptru	equ	0xFF8
    88                           tblptrh	equ	0xFF7
    89                           tblptrl	equ	0xFF6
    90                           tablat	equ	0xFF5
    91                           
    92                           	psect	bssCOMRAM
    93  00000A                     __pbssCOMRAM:
    94                           	opt stack 0
    95  00000A                     _m:
    96                           	opt stack 0
    97  00000A                     	ds	1
    98  00000B                     _ope:
    99                           	opt stack 0
   100  00000B                     	ds	1
   101                           tblptru	equ	0xFF8
   102                           tblptrh	equ	0xFF7
   103                           tblptrl	equ	0xFF6
   104                           tablat	equ	0xFF5
   105                           
   106                           	psect	dataCOMRAM
   107  00000D                     __pdataCOMRAM:
   108                           	opt stack 0
   109  00000D                     _a:
   110                           	opt stack 0
   111  00000D                     	ds	1
   112                           tblptru	equ	0xFF8
   113                           tblptrh	equ	0xFF7
   114                           tblptrl	equ	0xFF6
   115                           tablat	equ	0xFF5
   116                           
   117                           	psect	cstackCOMRAM
   118  000001                     __pcstackCOMRAM:
   119                           	opt stack 0
   120  000001                     timer_0_set@high:
   121                           	opt stack 0
   122  000001                     port@c:
   123                           	opt stack 0
   124                           
   125                           ; 1 bytes @ 0x0
   126  000001                     	ds	1
   127  000002                     signal@x:
   128                           	opt stack 0
   129  000002                     signal_1@x:
   130                           	opt stack 0
   131  000002                     signal_2@x:
   132                           	opt stack 0
   133  000002                     timer_0_set@low:
   134                           	opt stack 0
   135                           
   136                           ; 1 bytes @ 0x1
   137  000002                     	ds	1
   138  000003                     ?_flag_timer_0:
   139                           	opt stack 0
   140  000003                     sw@d:
   141                           	opt stack 0
   142                           
   143                           ; 1 bytes @ 0x2
   144  000003                     	ds	2
   145  000005                     
   146                           ; 2 bytes @ 0x4
   147  000005                     	ds	2
   148  000007                     
   149                           ; 3 bytes @ 0x6
   150  000007                     	ds	3
   151  00000A                     tblptru	equ	0xFF8
   152                           tblptrh	equ	0xFF7
   153                           tblptrl	equ	0xFF6
   154                           tablat	equ	0xFF5
   155                           
   156                           ; 0 bytes @ 0x9
   157 ;;
   158 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   159 ;;
   160 ;; *************** function _main *****************
   161 ;; Defined at:
   162 ;;		line 236 in file "main.c"
   163 ;; Parameters:    Size  Location     Type
   164 ;;  argc            2    4[COMRAM] int 
   165 ;;  argv            3    6[COMRAM] PTR PTR unsigned char 
   166 ;; Auto vars:     Size  Location     Type
   167 ;;		None
   168 ;; Return value:  Size  Location     Type
   169 ;;                  2    4[COMRAM] int 
   170 ;; Registers used:
   171 ;;		wreg, status,2, status,0, cstack
   172 ;; Tracked objects:
   173 ;;		On entry : 0/0
   174 ;;		On exit  : 0/0
   175 ;;		Unchanged: 0/0
   176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   177 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   180 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   181 ;;Total ram usage:        5 bytes
   182 ;; Hardware stack levels required when called:    4
   183 ;; This function calls:
   184 ;;		_flag_timer_0
   185 ;;		_set_ph
   186 ;;		_sw
   187 ;; This function is called by:
   188 ;;		Startup code after reset
   189 ;; This function uses a non-reentrant model
   190 ;;
   191                           
   192                           	psect	text0
   193  00FD6C                     __ptext0:
   194                           	opt stack 0
   195  00FD6C                     _main:
   196                           	opt stack 27
   197                           
   198                           ;main.c: 237: set_ph();
   199                           
   200                           ;incstack = 0
   201  00FD6C  EC80  F07E         	call	_set_ph	;wreg free
   202  00FD70                     l976:
   203                           
   204                           ;main.c: 239: d=(PORTD & 0x70)>>4;
   205  00FD70  3883               	swapf	3971,w,c	;volatile
   206  00FD72  0B0F               	andlw	15
   207  00FD74  0B07               	andlw	7
   208  00FD76  6E0C               	movwf	_d,c
   209                           
   210                           ;main.c: 240: if (flag_timer_0()){
   211  00FD78  ECC7  F07E         	call	_flag_timer_0	;wreg free
   212  00FD7C  5003               	movf	?_flag_timer_0,w,c
   213  00FD7E  1004               	iorwf	?_flag_timer_0+1,w,c
   214  00FD80  B4D8               	btfsc	status,2,c
   215  00FD82  D7F6               	goto	l976
   216                           
   217                           ;main.c: 241: sw(d);
   218  00FD84  500C               	movf	_d,w,c
   219  00FD86  EC0A  F07F         	call	_sw
   220                           
   221                           ;main.c: 242: a=~a;
   222  00FD8A  1E0D               	comf	_a,f,c
   223  00FD8C  D7F1               	goto	l976
   224  00FD8E                     __end_of_main:
   225                           	opt stack 0
   226                           tblptru	equ	0xFF8
   227                           tblptrh	equ	0xFF7
   228                           tblptrl	equ	0xFF6
   229                           tablat	equ	0xFF5
   230                           status	equ	0xFD8
   231                           
   232 ;; *************** function _sw *****************
   233 ;; Defined at:
   234 ;;		line 208 in file "main.c"
   235 ;; Parameters:    Size  Location     Type
   236 ;;  d               1    wreg     unsigned char 
   237 ;; Auto vars:     Size  Location     Type
   238 ;;  d               1    2[COMRAM] unsigned char 
   239 ;; Return value:  Size  Location     Type
   240 ;;		None               void
   241 ;; Registers used:
   242 ;;		wreg, status,2, status,0, cstack
   243 ;; Tracked objects:
   244 ;;		On entry : 0/0
   245 ;;		On exit  : 0/0
   246 ;;		Unchanged: 0/0
   247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   249 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   251 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   252 ;;Total ram usage:        1 bytes
   253 ;; Hardware stack levels used:    1
   254 ;; Hardware stack levels required when called:    3
   255 ;; This function calls:
   256 ;;		_alterna
   257 ;;		_port
   258 ;;		_sw2
   259 ;;		_sw3
   260 ;; This function is called by:
   261 ;;		_main
   262 ;; This function uses a non-reentrant model
   263 ;;
   264                           
   265                           	psect	text1
   266  00FE14                     __ptext1:
   267                           	opt stack 0
   268  00FE14                     _sw:
   269                           	opt stack 27
   270                           
   271                           ;incstack = 0
   272                           ;sw@d stored from wreg
   273  00FE14  6E03               	movwf	sw@d,c
   274                           
   275                           ;main.c: 210: switch (d){
   276  00FE16  D00E               	goto	l914
   277  00FE18                     l904:
   278                           
   279                           ;main.c: 212: port(0x81 & a);
   280  00FE18  500D               	movf	_a,w,c
   281  00FE1A  0B81               	andlw	129
   282  00FE1C  EC8C  F07E         	call	_port
   283                           
   284                           ;main.c: 213: break;
   285  00FE20  0012               	return	
   286  00FE22                     l906:
   287                           
   288                           ;main.c: 215: sw2();
   289  00FE22  ECDB  F07E         	call	_sw2	;wreg free
   290                           
   291                           ;main.c: 216: break;
   292  00FE26  0012               	return	
   293  00FE28                     l908:
   294                           
   295                           ;main.c: 218: sw3();
   296  00FE28  ECEF  F07E         	call	_sw3	;wreg free
   297                           
   298                           ;main.c: 219: break;
   299  00FE2C  0012               	return	
   300  00FE2E                     l910:
   301                           
   302                           ;main.c: 222: alterna();
   303  00FE2E  EC7C  F07F         	call	_alterna	;wreg free
   304                           
   305                           ;main.c: 224: }
   306                           
   307                           ;main.c: 223: break;
   308  00FE32  0012               	return	
   309  00FE34                     l914:
   310  00FE34  5003               	movf	sw@d,w,c
   311                           
   312                           ; Switch size 1, requested type "space"
   313                           ; Number of cases is 3, Range of values is 1 to 4
   314                           ; switch strategies available:
   315                           ; Name         Instructions Cycles
   316                           ; simple_byte           10     6 (average)
   317                           ;	Chosen strategy is simple_byte
   318  00FE36  0A01               	xorlw	1	; case 1
   319  00FE38  B4D8               	btfsc	status,2,c
   320  00FE3A  D7EE               	goto	l904
   321  00FE3C  0A03               	xorlw	3	; case 2
   322  00FE3E  B4D8               	btfsc	status,2,c
   323  00FE40  D7F0               	goto	l906
   324  00FE42  0A06               	xorlw	6	; case 4
   325  00FE44  B4D8               	btfsc	status,2,c
   326  00FE46  D7F0               	goto	l908
   327  00FE48  D7F2               	goto	l910
   328  00FE4A                     __end_of_sw:
   329                           	opt stack 0
   330                           tblptru	equ	0xFF8
   331                           tblptrh	equ	0xFF7
   332                           tblptrl	equ	0xFF6
   333                           tablat	equ	0xFF5
   334                           status	equ	0xFD8
   335                           
   336 ;; *************** function _sw3 *****************
   337 ;; Defined at:
   338 ;;		line 170 in file "main.c"
   339 ;; Parameters:    Size  Location     Type
   340 ;;		None
   341 ;; Auto vars:     Size  Location     Type
   342 ;;		None
   343 ;; Return value:  Size  Location     Type
   344 ;;		None               void
   345 ;; Registers used:
   346 ;;		wreg, status,2, status,0, cstack
   347 ;; Tracked objects:
   348 ;;		On entry : 0/0
   349 ;;		On exit  : 0/0
   350 ;;		Unchanged: 0/0
   351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   356 ;;Total ram usage:        0 bytes
   357 ;; Hardware stack levels used:    1
   358 ;; Hardware stack levels required when called:    2
   359 ;; This function calls:
   360 ;;		_signal
   361 ;;		_signal_1
   362 ;;		_signal_2
   363 ;; This function is called by:
   364 ;;		_sw
   365 ;; This function uses a non-reentrant model
   366 ;;
   367                           
   368                           	psect	text2
   369  00FDDE                     __ptext2:
   370                           	opt stack 0
   371  00FDDE                     _sw3:
   372                           	opt stack 27
   373                           
   374                           ;main.c: 172: switch (ope){
   375                           
   376                           ;incstack = 0
   377  00FDDE  D00F               	goto	l888
   378  00FDE0                     l878:
   379                           
   380                           ;main.c: 174: signal(0x04);
   381  00FDE0  0E04               	movlw	4
   382  00FDE2  EC25  F07F         	call	_signal
   383                           
   384                           ;main.c: 175: break;
   385  00FDE6  0012               	return	
   386  00FDE8                     l880:
   387                           
   388                           ;main.c: 184: signal_2(0x08);
   389  00FDE8  0E08               	movlw	8
   390  00FDEA  EC5F  F07F         	call	_signal_2
   391                           
   392                           ;main.c: 185: break;
   393  00FDEE  0012               	return	
   394  00FDF0                     l882:
   395                           
   396                           ;main.c: 194: signal_1(0x20);
   397  00FDF0  0E20               	movlw	32
   398  00FDF2  EC42  F07F         	call	_signal_1
   399                           
   400                           ;main.c: 195: break;
   401  00FDF6  0012               	return	
   402  00FDF8                     l884:
   403                           
   404                           ;main.c: 204: ope=0;
   405  00FDF8  0E00               	movlw	0
   406  00FDFA  6E0B               	movwf	_ope,c
   407                           
   408                           ;main.c: 206: }
   409                           
   410                           ;main.c: 205: break;
   411  00FDFC  0012               	return	
   412  00FDFE                     l888:
   413  00FDFE  500B               	movf	_ope,w,c
   414                           
   415                           ; Switch size 1, requested type "space"
   416                           ; Number of cases is 3, Range of values is 0 to 2
   417                           ; switch strategies available:
   418                           ; Name         Instructions Cycles
   419                           ; simple_byte           10     6 (average)
   420                           ;	Chosen strategy is simple_byte
   421  00FE00  0A00               	xorlw	0	; case 0
   422  00FE02  B4D8               	btfsc	status,2,c
   423  00FE04  D7ED               	goto	l878
   424  00FE06  0A01               	xorlw	1	; case 1
   425  00FE08  B4D8               	btfsc	status,2,c
   426  00FE0A  D7EE               	goto	l880
   427  00FE0C  0A03               	xorlw	3	; case 2
   428  00FE0E  B4D8               	btfsc	status,2,c
   429  00FE10  D7EF               	goto	l882
   430  00FE12  D7F2               	goto	l884
   431  00FE14                     __end_of_sw3:
   432                           	opt stack 0
   433                           tblptru	equ	0xFF8
   434                           tblptrh	equ	0xFF7
   435                           tblptrl	equ	0xFF6
   436                           tablat	equ	0xFF5
   437                           status	equ	0xFD8
   438                           
   439 ;; *************** function _signal_2 *****************
   440 ;; Defined at:
   441 ;;		line 58 in file "main.c"
   442 ;; Parameters:    Size  Location     Type
   443 ;;  x               1    wreg     unsigned char 
   444 ;; Auto vars:     Size  Location     Type
   445 ;;  x               1    1[COMRAM] unsigned char 
   446 ;; Return value:  Size  Location     Type
   447 ;;		None               void
   448 ;; Registers used:
   449 ;;		wreg, status,2, status,0, cstack
   450 ;; Tracked objects:
   451 ;;		On entry : 0/0
   452 ;;		On exit  : 0/0
   453 ;;		Unchanged: 0/0
   454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   456 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   458 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   459 ;;Total ram usage:        1 bytes
   460 ;; Hardware stack levels used:    1
   461 ;; Hardware stack levels required when called:    1
   462 ;; This function calls:
   463 ;;		_port
   464 ;; This function is called by:
   465 ;;		_sw3
   466 ;; This function uses a non-reentrant model
   467 ;;
   468                           
   469                           	psect	text3
   470  00FEBE                     __ptext3:
   471                           	opt stack 0
   472  00FEBE                     _signal_2:
   473                           	opt stack 27
   474                           
   475                           ;incstack = 0
   476                           ;signal_2@x stored from wreg
   477  00FEBE  6E02               	movwf	signal_2@x,c
   478                           
   479                           ;main.c: 59: switch (m){
   480  00FEC0  D013               	goto	l798
   481  00FEC2                     l784:
   482                           
   483                           ;main.c: 61: port(x & a);
   484  00FEC2  5002               	movf	signal_2@x,w,c
   485  00FEC4  140D               	andwf	_a,w,c
   486  00FEC6  EC8C  F07E         	call	_port
   487                           
   488                           ;main.c: 62: m=1;
   489  00FECA  0E01               	movlw	1
   490  00FECC  6E0A               	movwf	_m,c
   491                           
   492                           ;main.c: 63: break;
   493  00FECE  0012               	return	
   494  00FED0                     l788:
   495                           
   496                           ;main.c: 65: port(x & a);
   497  00FED0  5002               	movf	signal_2@x,w,c
   498  00FED2  140D               	andwf	_a,w,c
   499  00FED4  EC8C  F07E         	call	_port
   500                           
   501                           ;main.c: 66: m=0;
   502  00FED8  0E00               	movlw	0
   503  00FEDA  6E0A               	movwf	_m,c
   504                           
   505                           ;main.c: 67: ope=2;
   506  00FEDC  0E02               	movlw	2
   507  00FEDE  6E0B               	movwf	_ope,c
   508                           
   509                           ;main.c: 68: break;
   510  00FEE0  0012               	return	
   511  00FEE2                     l794:
   512                           
   513                           ;main.c: 70: ope=0;
   514  00FEE2  0E00               	movlw	0
   515  00FEE4  6E0B               	movwf	_ope,c
   516                           
   517                           ;main.c: 72: }
   518                           
   519                           ;main.c: 71: break;
   520  00FEE6  0012               	return	
   521  00FEE8                     l798:
   522  00FEE8  500A               	movf	_m,w,c
   523                           
   524                           ; Switch size 1, requested type "space"
   525                           ; Number of cases is 2, Range of values is 0 to 1
   526                           ; switch strategies available:
   527                           ; Name         Instructions Cycles
   528                           ; simple_byte            7     4 (average)
   529                           ;	Chosen strategy is simple_byte
   530  00FEEA  0A00               	xorlw	0	; case 0
   531  00FEEC  B4D8               	btfsc	status,2,c
   532  00FEEE  D7E9               	goto	l784
   533  00FEF0  0A01               	xorlw	1	; case 1
   534  00FEF2  B4D8               	btfsc	status,2,c
   535  00FEF4  D7ED               	goto	l788
   536  00FEF6  D7F5               	goto	l794
   537  00FEF8                     __end_of_signal_2:
   538                           	opt stack 0
   539                           tblptru	equ	0xFF8
   540                           tblptrh	equ	0xFF7
   541                           tblptrl	equ	0xFF6
   542                           tablat	equ	0xFF5
   543                           status	equ	0xFD8
   544                           
   545 ;; *************** function _sw2 *****************
   546 ;; Defined at:
   547 ;;		line 140 in file "main.c"
   548 ;; Parameters:    Size  Location     Type
   549 ;;		None
   550 ;; Auto vars:     Size  Location     Type
   551 ;;		None
   552 ;; Return value:  Size  Location     Type
   553 ;;		None               void
   554 ;; Registers used:
   555 ;;		wreg, status,2, status,0, cstack
   556 ;; Tracked objects:
   557 ;;		On entry : 0/0
   558 ;;		On exit  : 0/0
   559 ;;		Unchanged: 0/0
   560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   565 ;;Total ram usage:        0 bytes
   566 ;; Hardware stack levels used:    1
   567 ;; Hardware stack levels required when called:    2
   568 ;; This function calls:
   569 ;;		_signal
   570 ;;		_signal_1
   571 ;; This function is called by:
   572 ;;		_sw
   573 ;; This function uses a non-reentrant model
   574 ;;
   575                           
   576                           	psect	text4
   577  00FDB6                     __ptext4:
   578                           	opt stack 0
   579  00FDB6                     _sw2:
   580                           	opt stack 27
   581                           
   582                           ;main.c: 142: switch (ope){
   583                           
   584                           ;incstack = 0
   585  00FDB6  D00B               	goto	l874
   586  00FDB8                     l866:
   587                           
   588                           ;main.c: 144: signal(0x02);
   589  00FDB8  0E02               	movlw	2
   590  00FDBA  EC25  F07F         	call	_signal
   591                           
   592                           ;main.c: 145: break;
   593  00FDBE  0012               	return	
   594  00FDC0                     l868:
   595                           
   596                           ;main.c: 154: signal_1(0x40);
   597  00FDC0  0E40               	movlw	64
   598  00FDC2  EC42  F07F         	call	_signal_1
   599                           
   600                           ;main.c: 155: break;
   601  00FDC6  0012               	return	
   602  00FDC8                     l870:
   603                           
   604                           ;main.c: 164: ope=0;
   605  00FDC8  0E00               	movlw	0
   606  00FDCA  6E0B               	movwf	_ope,c
   607                           
   608                           ;main.c: 166: }
   609                           
   610                           ;main.c: 165: break;
   611  00FDCC  0012               	return	
   612  00FDCE                     l874:
   613  00FDCE  500B               	movf	_ope,w,c
   614                           
   615                           ; Switch size 1, requested type "space"
   616                           ; Number of cases is 2, Range of values is 0 to 1
   617                           ; switch strategies available:
   618                           ; Name         Instructions Cycles
   619                           ; simple_byte            7     4 (average)
   620                           ;	Chosen strategy is simple_byte
   621  00FDD0  0A00               	xorlw	0	; case 0
   622  00FDD2  B4D8               	btfsc	status,2,c
   623  00FDD4  D7F1               	goto	l866
   624  00FDD6  0A01               	xorlw	1	; case 1
   625  00FDD8  B4D8               	btfsc	status,2,c
   626  00FDDA  D7F2               	goto	l868
   627  00FDDC  D7F5               	goto	l870
   628  00FDDE                     __end_of_sw2:
   629                           	opt stack 0
   630                           tblptru	equ	0xFF8
   631                           tblptrh	equ	0xFF7
   632                           tblptrl	equ	0xFF6
   633                           tablat	equ	0xFF5
   634                           status	equ	0xFD8
   635                           
   636 ;; *************** function _signal_1 *****************
   637 ;; Defined at:
   638 ;;		line 41 in file "main.c"
   639 ;; Parameters:    Size  Location     Type
   640 ;;  x               1    wreg     unsigned char 
   641 ;; Auto vars:     Size  Location     Type
   642 ;;  x               1    1[COMRAM] unsigned char 
   643 ;; Return value:  Size  Location     Type
   644 ;;		None               void
   645 ;; Registers used:
   646 ;;		wreg, status,2, status,0, cstack
   647 ;; Tracked objects:
   648 ;;		On entry : 0/0
   649 ;;		On exit  : 0/0
   650 ;;		Unchanged: 0/0
   651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   653 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   655 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   656 ;;Total ram usage:        1 bytes
   657 ;; Hardware stack levels used:    1
   658 ;; Hardware stack levels required when called:    1
   659 ;; This function calls:
   660 ;;		_port
   661 ;; This function is called by:
   662 ;;		_sw2
   663 ;;		_sw3
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           
   667                           	psect	text5
   668  00FE84                     __ptext5:
   669                           	opt stack 0
   670  00FE84                     _signal_1:
   671                           	opt stack 27
   672                           
   673                           ;incstack = 0
   674                           ;signal_1@x stored from wreg
   675  00FE84  6E02               	movwf	signal_1@x,c
   676                           
   677                           ;main.c: 42: switch (m){
   678  00FE86  D013               	goto	l780
   679  00FE88                     l766:
   680                           
   681                           ;main.c: 44: port(x & a);
   682  00FE88  5002               	movf	signal_1@x,w,c
   683  00FE8A  140D               	andwf	_a,w,c
   684  00FE8C  EC8C  F07E         	call	_port
   685                           
   686                           ;main.c: 45: m=1;
   687  00FE90  0E01               	movlw	1
   688  00FE92  6E0A               	movwf	_m,c
   689                           
   690                           ;main.c: 46: break;
   691  00FE94  0012               	return	
   692  00FE96                     l770:
   693                           
   694                           ;main.c: 48: port(x & a);
   695  00FE96  5002               	movf	signal_1@x,w,c
   696  00FE98  140D               	andwf	_a,w,c
   697  00FE9A  EC8C  F07E         	call	_port
   698                           
   699                           ;main.c: 49: m=0;
   700  00FE9E  0E00               	movlw	0
   701  00FEA0  6E0A               	movwf	_m,c
   702                           
   703                           ;main.c: 50: ope=0;
   704  00FEA2  0E00               	movlw	0
   705  00FEA4  6E0B               	movwf	_ope,c
   706                           
   707                           ;main.c: 51: break;
   708  00FEA6  0012               	return	
   709  00FEA8                     l776:
   710                           
   711                           ;main.c: 53: ope=0;
   712  00FEA8  0E00               	movlw	0
   713  00FEAA  6E0B               	movwf	_ope,c
   714                           
   715                           ;main.c: 55: }
   716                           
   717                           ;main.c: 54: break;
   718  00FEAC  0012               	return	
   719  00FEAE                     l780:
   720  00FEAE  500A               	movf	_m,w,c
   721                           
   722                           ; Switch size 1, requested type "space"
   723                           ; Number of cases is 2, Range of values is 0 to 1
   724                           ; switch strategies available:
   725                           ; Name         Instructions Cycles
   726                           ; simple_byte            7     4 (average)
   727                           ;	Chosen strategy is simple_byte
   728  00FEB0  0A00               	xorlw	0	; case 0
   729  00FEB2  B4D8               	btfsc	status,2,c
   730  00FEB4  D7E9               	goto	l766
   731  00FEB6  0A01               	xorlw	1	; case 1
   732  00FEB8  B4D8               	btfsc	status,2,c
   733  00FEBA  D7ED               	goto	l770
   734  00FEBC  D7F5               	goto	l776
   735  00FEBE                     __end_of_signal_1:
   736                           	opt stack 0
   737                           tblptru	equ	0xFF8
   738                           tblptrh	equ	0xFF7
   739                           tblptrl	equ	0xFF6
   740                           tablat	equ	0xFF5
   741                           status	equ	0xFD8
   742                           
   743 ;; *************** function _signal *****************
   744 ;; Defined at:
   745 ;;		line 22 in file "main.c"
   746 ;; Parameters:    Size  Location     Type
   747 ;;  x               1    wreg     unsigned char 
   748 ;; Auto vars:     Size  Location     Type
   749 ;;  x               1    1[COMRAM] unsigned char 
   750 ;; Return value:  Size  Location     Type
   751 ;;		None               void
   752 ;; Registers used:
   753 ;;		wreg, status,2, status,0, cstack
   754 ;; Tracked objects:
   755 ;;		On entry : 0/0
   756 ;;		On exit  : 0/0
   757 ;;		Unchanged: 0/0
   758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   760 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   762 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   763 ;;Total ram usage:        1 bytes
   764 ;; Hardware stack levels used:    1
   765 ;; Hardware stack levels required when called:    1
   766 ;; This function calls:
   767 ;;		_port
   768 ;; This function is called by:
   769 ;;		_sw2
   770 ;;		_sw3
   771 ;; This function uses a non-reentrant model
   772 ;;
   773                           
   774                           	psect	text6
   775  00FE4A                     __ptext6:
   776                           	opt stack 0
   777  00FE4A                     _signal:
   778                           	opt stack 27
   779                           
   780                           ;incstack = 0
   781                           ;signal@x stored from wreg
   782  00FE4A  6E02               	movwf	signal@x,c
   783                           
   784                           ;main.c: 23: switch (m){
   785  00FE4C  D013               	goto	l762
   786  00FE4E                     l748:
   787                           
   788                           ;main.c: 25: port(x & a);
   789  00FE4E  5002               	movf	signal@x,w,c
   790  00FE50  140D               	andwf	_a,w,c
   791  00FE52  EC8C  F07E         	call	_port
   792                           
   793                           ;main.c: 26: m=1;
   794  00FE56  0E01               	movlw	1
   795  00FE58  6E0A               	movwf	_m,c
   796                           
   797                           ;main.c: 27: break;
   798  00FE5A  0012               	return	
   799  00FE5C                     l752:
   800                           
   801                           ;main.c: 29: port(x & a);
   802  00FE5C  5002               	movf	signal@x,w,c
   803  00FE5E  140D               	andwf	_a,w,c
   804  00FE60  EC8C  F07E         	call	_port
   805                           
   806                           ;main.c: 30: m=0;
   807  00FE64  0E00               	movlw	0
   808  00FE66  6E0A               	movwf	_m,c
   809                           
   810                           ;main.c: 31: ope=1;
   811  00FE68  0E01               	movlw	1
   812  00FE6A  6E0B               	movwf	_ope,c
   813                           
   814                           ;main.c: 32: break;
   815  00FE6C  0012               	return	
   816  00FE6E                     l758:
   817                           
   818                           ;main.c: 34: ope=0;
   819  00FE6E  0E00               	movlw	0
   820  00FE70  6E0B               	movwf	_ope,c
   821                           
   822                           ;main.c: 37: }
   823                           
   824                           ;main.c: 35: break;
   825  00FE72  0012               	return	
   826  00FE74                     l762:
   827  00FE74  500A               	movf	_m,w,c
   828                           
   829                           ; Switch size 1, requested type "space"
   830                           ; Number of cases is 2, Range of values is 0 to 1
   831                           ; switch strategies available:
   832                           ; Name         Instructions Cycles
   833                           ; simple_byte            7     4 (average)
   834                           ;	Chosen strategy is simple_byte
   835  00FE76  0A00               	xorlw	0	; case 0
   836  00FE78  B4D8               	btfsc	status,2,c
   837  00FE7A  D7E9               	goto	l748
   838  00FE7C  0A01               	xorlw	1	; case 1
   839  00FE7E  B4D8               	btfsc	status,2,c
   840  00FE80  D7ED               	goto	l752
   841  00FE82  D7F5               	goto	l758
   842  00FE84                     __end_of_signal:
   843                           	opt stack 0
   844                           tblptru	equ	0xFF8
   845                           tblptrh	equ	0xFF7
   846                           tblptrl	equ	0xFF6
   847                           tablat	equ	0xFF5
   848                           status	equ	0xFD8
   849                           
   850 ;; *************** function _alterna *****************
   851 ;; Defined at:
   852 ;;		line 75 in file "main.c"
   853 ;; Parameters:    Size  Location     Type
   854 ;;		None
   855 ;; Auto vars:     Size  Location     Type
   856 ;;		None
   857 ;; Return value:  Size  Location     Type
   858 ;;		None               void
   859 ;; Registers used:
   860 ;;		wreg, status,2, status,0, cstack
   861 ;; Tracked objects:
   862 ;;		On entry : 0/0
   863 ;;		On exit  : 0/0
   864 ;;		Unchanged: 0/0
   865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   870 ;;Total ram usage:        0 bytes
   871 ;; Hardware stack levels used:    1
   872 ;; Hardware stack levels required when called:    1
   873 ;; This function calls:
   874 ;;		_port
   875 ;; This function is called by:
   876 ;;		_sw
   877 ;; This function uses a non-reentrant model
   878 ;;
   879                           
   880                           	psect	text7
   881  00FEF8                     __ptext7:
   882                           	opt stack 0
   883  00FEF8                     _alterna:
   884                           	opt stack 28
   885                           
   886                           ;main.c: 77: switch (ope){
   887                           
   888                           ;incstack = 0
   889  00FEF8  D06C               	goto	l862
   890  00FEFA                     l802:
   891                           
   892                           ;main.c: 79: m=m+1;
   893  00FEFA  280A               	incf	_m,w,c
   894  00FEFC  6E0A               	movwf	_m,c
   895                           
   896                           ;main.c: 80: port(0x01 & a);
   897  00FEFE  500D               	movf	_a,w,c
   898  00FF00  0B01               	andlw	1
   899  00FF02  EC8C  F07E         	call	_port
   900                           
   901                           ;main.c: 81: if (m==2){
   902  00FF06  0E02               	movlw	2
   903  00FF08  180A               	xorwf	_m,w,c
   904  00FF0A  A4D8               	btfss	status,2,c
   905  00FF0C  0012               	return	
   906                           
   907                           ;main.c: 82: m=0;
   908  00FF0E  0E00               	movlw	0
   909  00FF10  6E0A               	movwf	_m,c
   910                           
   911                           ;main.c: 83: ope=1;
   912  00FF12  0E01               	movlw	1
   913  00FF14  6E0B               	movwf	_ope,c
   914                           
   915                           ;main.c: 84: }
   916                           ;main.c: 85: break;
   917  00FF16  0012               	return	
   918  00FF18                     l810:
   919                           
   920                           ;main.c: 87: m=m+1;
   921  00FF18  280A               	incf	_m,w,c
   922  00FF1A  6E0A               	movwf	_m,c
   923                           
   924                           ;main.c: 88: port(0x02 & a);
   925  00FF1C  500D               	movf	_a,w,c
   926  00FF1E  0B02               	andlw	2
   927  00FF20  EC8C  F07E         	call	_port
   928                           
   929                           ;main.c: 89: if (m==2){
   930  00FF24  0E02               	movlw	2
   931  00FF26  180A               	xorwf	_m,w,c
   932  00FF28  A4D8               	btfss	status,2,c
   933  00FF2A  0012               	return	
   934                           
   935                           ;main.c: 90: m=0;
   936  00FF2C  0E00               	movlw	0
   937  00FF2E  6E0A               	movwf	_m,c
   938                           
   939                           ;main.c: 91: ope=2;
   940  00FF30  0E02               	movlw	2
   941  00FF32  6E0B               	movwf	_ope,c
   942                           
   943                           ;main.c: 92: }
   944                           ;main.c: 93: break;
   945  00FF34  0012               	return	
   946  00FF36                     l818:
   947                           
   948                           ;main.c: 95: m=m+1;
   949  00FF36  280A               	incf	_m,w,c
   950  00FF38  6E0A               	movwf	_m,c
   951                           
   952                           ;main.c: 96: port(0x04 & a);
   953  00FF3A  500D               	movf	_a,w,c
   954  00FF3C  0B04               	andlw	4
   955  00FF3E  EC8C  F07E         	call	_port
   956                           
   957                           ;main.c: 97: if (m==2){
   958  00FF42  0E02               	movlw	2
   959  00FF44  180A               	xorwf	_m,w,c
   960  00FF46  A4D8               	btfss	status,2,c
   961  00FF48  0012               	return	
   962                           
   963                           ;main.c: 98: m=0;
   964  00FF4A  0E00               	movlw	0
   965  00FF4C  6E0A               	movwf	_m,c
   966                           
   967                           ;main.c: 99: ope=3;
   968  00FF4E  0E03               	movlw	3
   969  00FF50  6E0B               	movwf	_ope,c
   970                           
   971                           ;main.c: 100: }
   972                           ;main.c: 101: break;
   973  00FF52  0012               	return	
   974  00FF54                     l826:
   975                           
   976                           ;main.c: 103: m=m+1;
   977  00FF54  280A               	incf	_m,w,c
   978  00FF56  6E0A               	movwf	_m,c
   979                           
   980                           ;main.c: 104: port(0x08 & a);
   981  00FF58  500D               	movf	_a,w,c
   982  00FF5A  0B08               	andlw	8
   983  00FF5C  EC8C  F07E         	call	_port
   984                           
   985                           ;main.c: 105: if (m==2){
   986  00FF60  0E02               	movlw	2
   987  00FF62  180A               	xorwf	_m,w,c
   988  00FF64  A4D8               	btfss	status,2,c
   989  00FF66  0012               	return	
   990                           
   991                           ;main.c: 106: m=0;
   992  00FF68  0E00               	movlw	0
   993  00FF6A  6E0A               	movwf	_m,c
   994                           
   995                           ;main.c: 107: ope=4;
   996  00FF6C  0E04               	movlw	4
   997  00FF6E  6E0B               	movwf	_ope,c
   998                           
   999                           ;main.c: 108: }
  1000                           ;main.c: 109: break;
  1001  00FF70  0012               	return	
  1002  00FF72                     l834:
  1003                           
  1004                           ;main.c: 111: m=m+1;
  1005  00FF72  280A               	incf	_m,w,c
  1006  00FF74  6E0A               	movwf	_m,c
  1007                           
  1008                           ;main.c: 112: port(0x20 & a);
  1009  00FF76  500D               	movf	_a,w,c
  1010  00FF78  0B20               	andlw	32
  1011  00FF7A  EC8C  F07E         	call	_port
  1012                           
  1013                           ;main.c: 113: if (m==2){
  1014  00FF7E  0E02               	movlw	2
  1015  00FF80  180A               	xorwf	_m,w,c
  1016  00FF82  A4D8               	btfss	status,2,c
  1017  00FF84  0012               	return	
  1018                           
  1019                           ;main.c: 114: m=0;
  1020  00FF86  0E00               	movlw	0
  1021  00FF88  6E0A               	movwf	_m,c
  1022                           
  1023                           ;main.c: 115: ope=5;
  1024  00FF8A  0E05               	movlw	5
  1025  00FF8C  6E0B               	movwf	_ope,c
  1026                           
  1027                           ;main.c: 116: }
  1028                           ;main.c: 117: break;
  1029  00FF8E  0012               	return	
  1030  00FF90                     l842:
  1031                           
  1032                           ;main.c: 119: m=m+1;
  1033  00FF90  280A               	incf	_m,w,c
  1034  00FF92  6E0A               	movwf	_m,c
  1035                           
  1036                           ;main.c: 120: port(0x40& a);
  1037  00FF94  500D               	movf	_a,w,c
  1038  00FF96  0B40               	andlw	64
  1039  00FF98  EC8C  F07E         	call	_port
  1040                           
  1041                           ;main.c: 121: if (m==2){
  1042  00FF9C  0E02               	movlw	2
  1043  00FF9E  180A               	xorwf	_m,w,c
  1044  00FFA0  A4D8               	btfss	status,2,c
  1045  00FFA2  0012               	return	
  1046                           
  1047                           ;main.c: 122: m=0;
  1048  00FFA4  0E00               	movlw	0
  1049  00FFA6  6E0A               	movwf	_m,c
  1050                           
  1051                           ;main.c: 123: ope=6;
  1052  00FFA8  0E06               	movlw	6
  1053  00FFAA  6E0B               	movwf	_ope,c
  1054                           
  1055                           ;main.c: 124: }
  1056                           ;main.c: 125: break;
  1057  00FFAC  0012               	return	
  1058  00FFAE                     l850:
  1059                           
  1060                           ;main.c: 127: m=m+1;
  1061  00FFAE  280A               	incf	_m,w,c
  1062  00FFB0  6E0A               	movwf	_m,c
  1063                           
  1064                           ;main.c: 128: port(0x80 & a);
  1065  00FFB2  500D               	movf	_a,w,c
  1066  00FFB4  0B80               	andlw	128
  1067  00FFB6  EC8C  F07E         	call	_port
  1068                           
  1069                           ;main.c: 129: if (m==2){
  1070  00FFBA  0E02               	movlw	2
  1071  00FFBC  180A               	xorwf	_m,w,c
  1072  00FFBE  A4D8               	btfss	status,2,c
  1073  00FFC0  0012               	return	
  1074                           
  1075                           ;main.c: 130: m=0;
  1076  00FFC2  0E00               	movlw	0
  1077  00FFC4  6E0A               	movwf	_m,c
  1078                           
  1079                           ;main.c: 131: ope=0;
  1080  00FFC6  0E00               	movlw	0
  1081  00FFC8  6E0B               	movwf	_ope,c
  1082                           
  1083                           ;main.c: 132: }
  1084                           ;main.c: 133: break;
  1085  00FFCA  0012               	return	
  1086  00FFCC                     l858:
  1087                           
  1088                           ;main.c: 135: ope=0;
  1089  00FFCC  0E00               	movlw	0
  1090  00FFCE  6E0B               	movwf	_ope,c
  1091                           
  1092                           ;main.c: 137: }
  1093                           
  1094                           ;main.c: 136: break;
  1095  00FFD0  0012               	return	
  1096  00FFD2                     l862:
  1097  00FFD2  500B               	movf	_ope,w,c
  1098                           
  1099                           ; Switch size 1, requested type "space"
  1100                           ; Number of cases is 7, Range of values is 0 to 6
  1101                           ; switch strategies available:
  1102                           ; Name         Instructions Cycles
  1103                           ; simple_byte           22    12 (average)
  1104                           ;	Chosen strategy is simple_byte
  1105  00FFD4  0A00               	xorlw	0	; case 0
  1106  00FFD6  B4D8               	btfsc	status,2,c
  1107  00FFD8  D790               	goto	l802
  1108  00FFDA  0A01               	xorlw	1	; case 1
  1109  00FFDC  B4D8               	btfsc	status,2,c
  1110  00FFDE  D79C               	goto	l810
  1111  00FFE0  0A03               	xorlw	3	; case 2
  1112  00FFE2  B4D8               	btfsc	status,2,c
  1113  00FFE4  D7A8               	goto	l818
  1114  00FFE6  0A01               	xorlw	1	; case 3
  1115  00FFE8  B4D8               	btfsc	status,2,c
  1116  00FFEA  D7B4               	goto	l826
  1117  00FFEC  0A07               	xorlw	7	; case 4
  1118  00FFEE  B4D8               	btfsc	status,2,c
  1119  00FFF0  D7C0               	goto	l834
  1120  00FFF2  0A01               	xorlw	1	; case 5
  1121  00FFF4  B4D8               	btfsc	status,2,c
  1122  00FFF6  D7CC               	goto	l842
  1123  00FFF8  0A03               	xorlw	3	; case 6
  1124  00FFFA  B4D8               	btfsc	status,2,c
  1125  00FFFC  D7D8               	goto	l850
  1126  00FFFE  D7E6               	goto	l858
  1127  010000                     __end_of_alterna:
  1128                           	opt stack 0
  1129                           tblptru	equ	0xFF8
  1130                           tblptrh	equ	0xFF7
  1131                           tblptrl	equ	0xFF6
  1132                           tablat	equ	0xFF5
  1133                           status	equ	0xFD8
  1134                           
  1135 ;; *************** function _port *****************
  1136 ;; Defined at:
  1137 ;;		line 14 in file "hw.c"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;  c               1    wreg     unsigned char 
  1140 ;; Auto vars:     Size  Location     Type
  1141 ;;  c               1    0[COMRAM] unsigned char 
  1142 ;; Return value:  Size  Location     Type
  1143 ;;		None               void
  1144 ;; Registers used:
  1145 ;;		wreg, status,2, status,0
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1152 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1154 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1155 ;;Total ram usage:        1 bytes
  1156 ;; Hardware stack levels used:    1
  1157 ;; This function calls:
  1158 ;;		Nothing
  1159 ;; This function is called by:
  1160 ;;		_signal
  1161 ;;		_signal_1
  1162 ;;		_signal_2
  1163 ;;		_alterna
  1164 ;;		_sw
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           	psect	text8
  1169  00FD18                     __ptext8:
  1170                           	opt stack 0
  1171  00FD18                     _port:
  1172                           	opt stack 27
  1173                           
  1174                           ;incstack = 0
  1175                           ;port@c stored from wreg
  1176  00FD18  6E01               	movwf	port@c,c
  1177                           
  1178                           ;hw.c: 15: LATD &=0XF0;
  1179  00FD1A  0EF0               	movlw	240
  1180  00FD1C  168C               	andwf	3980,f,c	;volatile
  1181                           
  1182                           ;hw.c: 16: LATB &= 0XF0;
  1183  00FD1E  0EF0               	movlw	240
  1184  00FD20  168A               	andwf	3978,f,c	;volatile
  1185                           
  1186                           ;hw.c: 17: LATD |=(c & 0x0F);
  1187  00FD22  5001               	movf	port@c,w,c
  1188  00FD24  0B0F               	andlw	15
  1189  00FD26  128C               	iorwf	3980,f,c	;volatile
  1190                           
  1191                           ;hw.c: 18: LATB |=(c>>4);
  1192  00FD28  3801               	swapf	port@c,w,c
  1193  00FD2A  0B0F               	andlw	15
  1194  00FD2C  128A               	iorwf	3978,f,c	;volatile
  1195  00FD2E  0012               	return		;funcret
  1196  00FD30                     __end_of_port:
  1197                           	opt stack 0
  1198                           tblptru	equ	0xFF8
  1199                           tblptrh	equ	0xFF7
  1200                           tblptrl	equ	0xFF6
  1201                           tablat	equ	0xFF5
  1202                           status	equ	0xFD8
  1203                           
  1204 ;; *************** function _set_ph *****************
  1205 ;; Defined at:
  1206 ;;		line 228 in file "main.c"
  1207 ;; Parameters:    Size  Location     Type
  1208 ;;		None
  1209 ;; Auto vars:     Size  Location     Type
  1210 ;;		None
  1211 ;; Return value:  Size  Location     Type
  1212 ;;		None               void
  1213 ;; Registers used:
  1214 ;;		wreg, status,2, cstack
  1215 ;; Tracked objects:
  1216 ;;		On entry : 0/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1224 ;;Total ram usage:        0 bytes
  1225 ;; Hardware stack levels used:    1
  1226 ;; Hardware stack levels required when called:    1
  1227 ;; This function calls:
  1228 ;;		_set_leds
  1229 ;;		_timer_0_conf
  1230 ;;		_timer_0_set
  1231 ;;		_timer_0_star
  1232 ;; This function is called by:
  1233 ;;		_main
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237                           	psect	text9
  1238  00FD00                     __ptext9:
  1239                           	opt stack 0
  1240  00FD00                     _set_ph:
  1241                           	opt stack 29
  1242                           
  1243                           ;main.c: 230: set_leds();
  1244                           
  1245                           ;incstack = 0
  1246  00FD00  EC98  F07E         	call	_set_leds	;wreg free
  1247                           
  1248                           ;main.c: 231: timer_0_conf();
  1249  00FD04  EC79  F07E         	call	_timer_0_conf	;wreg free
  1250                           
  1251                           ;main.c: 232: timer_0_set(0x6F,0xC3);
  1252  00FD08  0EC3               	movlw	195
  1253  00FD0A  6E01               	movwf	timer_0_set@high,c
  1254  00FD0C  0E6F               	movlw	111
  1255  00FD0E  EC73  F07E         	call	_timer_0_set
  1256                           
  1257                           ;main.c: 233: timer_0_star();
  1258  00FD12  EC71  F07E         	call	_timer_0_star	;wreg free
  1259  00FD16  0012               	return		;funcret
  1260  00FD18                     __end_of_set_ph:
  1261                           	opt stack 0
  1262                           tblptru	equ	0xFF8
  1263                           tblptrh	equ	0xFF7
  1264                           tblptrl	equ	0xFF6
  1265                           tablat	equ	0xFF5
  1266                           status	equ	0xFD8
  1267                           
  1268 ;; *************** function _timer_0_conf *****************
  1269 ;; Defined at:
  1270 ;;		line 5 in file "timer.c"
  1271 ;; Parameters:    Size  Location     Type
  1272 ;;		None
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;		None
  1275 ;; Return value:  Size  Location     Type
  1276 ;;		None               void
  1277 ;; Registers used:
  1278 ;;		None
  1279 ;; Tracked objects:
  1280 ;;		On entry : 0/0
  1281 ;;		On exit  : 0/0
  1282 ;;		Unchanged: 0/0
  1283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1288 ;;Total ram usage:        0 bytes
  1289 ;; Hardware stack levels used:    1
  1290 ;; This function calls:
  1291 ;;		Nothing
  1292 ;; This function is called by:
  1293 ;;		_set_ph
  1294 ;; This function uses a non-reentrant model
  1295 ;;
  1296                           
  1297                           	psect	text10
  1298  00FCF2                     __ptext10:
  1299                           	opt stack 0
  1300  00FCF2                     _timer_0_conf:
  1301                           	opt stack 29
  1302                           
  1303                           ;timer.c: 6: T0CONbits.T0PS=7;
  1304                           
  1305                           ;incstack = 0
  1306  00FCF2  80D5               	bsf	4053,0,c	;volatile
  1307  00FCF4  82D5               	bsf	4053,1,c	;volatile
  1308  00FCF6  84D5               	bsf	4053,2,c	;volatile
  1309                           
  1310                           ;timer.c: 7: T0CONbits.T08BIT=0;
  1311  00FCF8  9CD5               	bcf	4053,6,c	;volatile
  1312                           
  1313                           ;timer.c: 8: T0CONbits.PSA=0;
  1314  00FCFA  96D5               	bcf	4053,3,c	;volatile
  1315                           
  1316                           ;timer.c: 9: T0CONbits.T0CS=0;
  1317  00FCFC  9AD5               	bcf	4053,5,c	;volatile
  1318  00FCFE  0012               	return		;funcret
  1319  00FD00                     __end_of_timer_0_conf:
  1320                           	opt stack 0
  1321                           tblptru	equ	0xFF8
  1322                           tblptrh	equ	0xFF7
  1323                           tblptrl	equ	0xFF6
  1324                           tablat	equ	0xFF5
  1325                           status	equ	0xFD8
  1326                           
  1327 ;; *************** function _set_leds *****************
  1328 ;; Defined at:
  1329 ;;		line 4 in file "hw.c"
  1330 ;; Parameters:    Size  Location     Type
  1331 ;;		None
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;		None
  1334 ;; Return value:  Size  Location     Type
  1335 ;;		None               void
  1336 ;; Registers used:
  1337 ;;		wreg, status,2
  1338 ;; Tracked objects:
  1339 ;;		On entry : 0/0
  1340 ;;		On exit  : 0/0
  1341 ;;		Unchanged: 0/0
  1342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1347 ;;Total ram usage:        0 bytes
  1348 ;; Hardware stack levels used:    1
  1349 ;; This function calls:
  1350 ;;		Nothing
  1351 ;; This function is called by:
  1352 ;;		_set_ph
  1353 ;; This function uses a non-reentrant model
  1354 ;;
  1355                           
  1356                           	psect	text11
  1357  00FD30                     __ptext11:
  1358                           	opt stack 0
  1359  00FD30                     _set_leds:
  1360                           	opt stack 29
  1361                           
  1362                           ;hw.c: 5: PORTD=0;
  1363                           
  1364                           ;incstack = 0
  1365  00FD30  0E00               	movlw	0
  1366  00FD32  6E83               	movwf	3971,c	;volatile
  1367                           
  1368                           ;hw.c: 6: LATD=0;
  1369  00FD34  0E00               	movlw	0
  1370  00FD36  6E8C               	movwf	3980,c	;volatile
  1371                           
  1372                           ;hw.c: 7: PORTB=0;
  1373  00FD38  0E00               	movlw	0
  1374  00FD3A  6E81               	movwf	3969,c	;volatile
  1375                           
  1376                           ;hw.c: 8: TRISB=0;
  1377  00FD3C  0E00               	movlw	0
  1378  00FD3E  6E93               	movwf	3987,c	;volatile
  1379                           
  1380                           ;hw.c: 9: TRISD=0xF0;
  1381  00FD40  0EF0               	movlw	240
  1382  00FD42  6E95               	movwf	3989,c	;volatile
  1383                           
  1384                           ;hw.c: 10: ANSEL=0XE0;
  1385  00FD44  0EE0               	movlw	224
  1386  00FD46  6E7E               	movwf	3966,c	;volatile
  1387                           
  1388                           ;hw.c: 11: TRISA=0XFF;
  1389  00FD48  6892               	setf	3986,c	;volatile
  1390  00FD4A  0012               	return		;funcret
  1391  00FD4C                     __end_of_set_leds:
  1392                           	opt stack 0
  1393                           tblptru	equ	0xFF8
  1394                           tblptrh	equ	0xFF7
  1395                           tblptrl	equ	0xFF6
  1396                           tablat	equ	0xFF5
  1397                           status	equ	0xFD8
  1398                           
  1399 ;; *************** function _flag_timer_0 *****************
  1400 ;; Defined at:
  1401 ;;		line 21 in file "timer.c"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;		None
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;		None
  1406 ;; Return value:  Size  Location     Type
  1407 ;;                  2    2[COMRAM] int 
  1408 ;; Registers used:
  1409 ;;		wreg, status,2, cstack
  1410 ;; Tracked objects:
  1411 ;;		On entry : 0/0
  1412 ;;		On exit  : 0/0
  1413 ;;		Unchanged: 0/0
  1414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1415 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1418 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1419 ;;Total ram usage:        2 bytes
  1420 ;; Hardware stack levels used:    1
  1421 ;; Hardware stack levels required when called:    1
  1422 ;; This function calls:
  1423 ;;		_timer_0_set
  1424 ;;		_timer_0_star
  1425 ;; This function is called by:
  1426 ;;		_main
  1427 ;; This function uses a non-reentrant model
  1428 ;;
  1429                           
  1430                           	psect	text12
  1431  00FD8E                     __ptext12:
  1432                           	opt stack 0
  1433  00FD8E                     _flag_timer_0:
  1434                           	opt stack 29
  1435                           
  1436                           ;timer.c: 22: if(INTCONbits.T0IF){
  1437                           
  1438                           ;incstack = 0
  1439  00FD8E  A4F2               	btfss	intcon,2,c	;volatile
  1440  00FD90  D00D               	goto	l970
  1441                           
  1442                           ;timer.c: 23: INTCONbits.T0IF=0;
  1443  00FD92  94F2               	bcf	intcon,2,c	;volatile
  1444                           
  1445                           ;timer.c: 24: timer_0_set(0x6F,0xC3);
  1446  00FD94  0EC3               	movlw	195
  1447  00FD96  6E01               	movwf	timer_0_set@high,c
  1448  00FD98  0E6F               	movlw	111
  1449  00FD9A  EC73  F07E         	call	_timer_0_set
  1450                           
  1451                           ;timer.c: 25: timer_0_star();
  1452  00FD9E  EC71  F07E         	call	_timer_0_star	;wreg free
  1453                           
  1454                           ;timer.c: 26: return 1;
  1455  00FDA2  0E00               	movlw	0
  1456  00FDA4  6E04               	movwf	?_flag_timer_0+1,c
  1457  00FDA6  0E01               	movlw	1
  1458  00FDA8  6E03               	movwf	?_flag_timer_0,c
  1459                           
  1460                           ;timer.c: 27: }
  1461  00FDAA  0012               	return	
  1462  00FDAC                     l970:
  1463                           
  1464                           ;timer.c: 28: else
  1465                           ;timer.c: 29: return 0;
  1466  00FDAC  0E00               	movlw	0
  1467  00FDAE  6E04               	movwf	?_flag_timer_0+1,c
  1468  00FDB0  0E00               	movlw	0
  1469  00FDB2  6E03               	movwf	?_flag_timer_0,c
  1470  00FDB4  0012               	return	
  1471  00FDB6                     __end_of_flag_timer_0:
  1472                           	opt stack 0
  1473                           tblptru	equ	0xFF8
  1474                           tblptrh	equ	0xFF7
  1475                           tblptrl	equ	0xFF6
  1476                           tablat	equ	0xFF5
  1477                           intcon	equ	0xFF2
  1478                           status	equ	0xFD8
  1479                           
  1480 ;; *************** function _timer_0_star *****************
  1481 ;; Defined at:
  1482 ;;		line 17 in file "timer.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;		None
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;		None
  1487 ;; Return value:  Size  Location     Type
  1488 ;;		None               void
  1489 ;; Registers used:
  1490 ;;		None
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1500 ;;Total ram usage:        0 bytes
  1501 ;; Hardware stack levels used:    1
  1502 ;; This function calls:
  1503 ;;		Nothing
  1504 ;; This function is called by:
  1505 ;;		_set_ph
  1506 ;;		_flag_timer_0
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           	psect	text13
  1511  00FCE2                     __ptext13:
  1512                           	opt stack 0
  1513  00FCE2                     _timer_0_star:
  1514                           	opt stack 29
  1515                           
  1516                           ;timer.c: 18: T0CONbits.TMR0ON=1;
  1517                           
  1518                           ;incstack = 0
  1519  00FCE2  8ED5               	bsf	4053,7,c	;volatile
  1520  00FCE4  0012               	return		;funcret
  1521  00FCE6                     __end_of_timer_0_star:
  1522                           	opt stack 0
  1523                           tblptru	equ	0xFF8
  1524                           tblptrh	equ	0xFF7
  1525                           tblptrl	equ	0xFF6
  1526                           tablat	equ	0xFF5
  1527                           intcon	equ	0xFF2
  1528                           status	equ	0xFD8
  1529                           
  1530 ;; *************** function _timer_0_set *****************
  1531 ;; Defined at:
  1532 ;;		line 12 in file "timer.c"
  1533 ;; Parameters:    Size  Location     Type
  1534 ;;  low             1    wreg     unsigned char 
  1535 ;;  high            1    0[COMRAM] unsigned char 
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;  low             1    1[COMRAM] unsigned char 
  1538 ;; Return value:  Size  Location     Type
  1539 ;;		None               void
  1540 ;; Registers used:
  1541 ;;		wreg
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1547 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1548 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1550 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1551 ;;Total ram usage:        2 bytes
  1552 ;; Hardware stack levels used:    1
  1553 ;; This function calls:
  1554 ;;		Nothing
  1555 ;; This function is called by:
  1556 ;;		_set_ph
  1557 ;;		_flag_timer_0
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           	psect	text14
  1562  00FCE6                     __ptext14:
  1563                           	opt stack 0
  1564  00FCE6                     _timer_0_set:
  1565                           	opt stack 29
  1566                           
  1567                           ;incstack = 0
  1568                           ;timer_0_set@low stored from wreg
  1569  00FCE6  6E02               	movwf	timer_0_set@low,c
  1570                           
  1571                           ;timer.c: 13: TMR0H=high;
  1572  00FCE8  C001  FFD7         	movff	timer_0_set@high,4055	;volatile
  1573                           
  1574                           ;timer.c: 14: TMR0L=low;
  1575  00FCEC  C002  FFD6         	movff	timer_0_set@low,4054	;volatile
  1576  00FCF0  0012               	return		;funcret
  1577  00FCF2                     __end_of_timer_0_set:
  1578                           	opt stack 0
  1579  0000                     tblptru	equ	0xFF8
  1580                           tblptrh	equ	0xFF7
  1581                           tblptrl	equ	0xFF6
  1582                           tablat	equ	0xFF5
  1583                           intcon	equ	0xFF2
  1584                           status	equ	0xFD8
  1585                           tblptru	equ	0xFF8
  1586                           tblptrh	equ	0xFF7
  1587                           tblptrl	equ	0xFF6
  1588                           tablat	equ	0xFF5
  1589                           intcon	equ	0xFF2
  1590                           status	equ	0xFD8
  1591                           
  1592                           	psect	rparam
  1593  0000                     tblptru	equ	0xFF8
  1594                           tblptrh	equ	0xFF7
  1595                           tblptrl	equ	0xFF6
  1596                           tablat	equ	0xFF5
  1597                           intcon	equ	0xFF2
  1598                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         2
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      9      13
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_flag_timer_0
    _sw3->_signal
    _sw3->_signal_1
    _sw3->_signal_2
    _signal_2->_port
    _sw2->_signal
    _sw2->_signal_1
    _signal_1->_port
    _signal->_port
    _alterna->_port
    _set_ph->_timer_0_set
    _flag_timer_0->_timer_0_set

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     0      5     635
                                              4 COMRAM     5     0      5
                       _flag_timer_0
                             _set_ph
                                 _sw
 ---------------------------------------------------------------------------------
 (1) _sw                                                   1     1      0     375
                                              2 COMRAM     1     1      0
                            _alterna
                               _port
                                _sw2
                                _sw3
 ---------------------------------------------------------------------------------
 (2) _sw3                                                  0     0      0     180
                             _signal
                           _signal_1
                           _signal_2
 ---------------------------------------------------------------------------------
 (3) _signal_2                                             1     1      0      60
                                              1 COMRAM     1     1      0
                               _port
 ---------------------------------------------------------------------------------
 (2) _sw2                                                  0     0      0     120
                             _signal
                           _signal_1
 ---------------------------------------------------------------------------------
 (3) _signal_1                                             1     1      0      60
                                              1 COMRAM     1     1      0
                               _port
 ---------------------------------------------------------------------------------
 (3) _signal                                               1     1      0      60
                                              1 COMRAM     1     1      0
                               _port
 ---------------------------------------------------------------------------------
 (2) _alterna                                              0     0      0      30
                               _port
 ---------------------------------------------------------------------------------
 (4) _port                                                 1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _set_ph                                               0     0      0     130
                           _set_leds
                       _timer_0_conf
                        _timer_0_set
                       _timer_0_star
 ---------------------------------------------------------------------------------
 (2) _timer_0_conf                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _set_leds                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _flag_timer_0                                         2     0      2     130
                                              2 COMRAM     2     0      2
                        _timer_0_set
                       _timer_0_star
 ---------------------------------------------------------------------------------
 (2) _timer_0_star                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _timer_0_set                                          2     1      1     130
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _flag_timer_0
     _timer_0_set
     _timer_0_star
   _set_ph
     _set_leds
     _timer_0_conf
     _timer_0_set
     _timer_0_star
   _sw
     _alterna
       _port
     _port
     _sw2
       _signal
         _port
       _signal_1
         _port
     _sw3
       _signal
         _port
       _signal_1
         _port
       _signal_2
         _port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      9       D       1       13.7%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       D      32        0.0%
DATA                 0      0       D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Nov 24 16:48:59 2016

                      _a 000D                        _d 000C                        _m 000A  
                     _sw FE14             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      ?_sw 0001  
                    l810 FF18                      l802 FEFA                      l910 FE2E  
                    l752 FE5C                      l904 FE18                      l850 FFAE  
                    l842 FF90                      l834 FF72                      l826 FF54  
                    l818 FF36                      l762 FE74                      l770 FE96  
                    l906 FE22                      l914 FE34                      l748 FE4E  
                    l780 FEAE                      l908 FE28                      l862 FFD2  
                    l758 FE6E                      l766 FE88                      l870 FDC8  
                    l776 FEA8                      l784 FEC2                      l880 FDE8  
                    l970 FDAC                      l858 FFCC                      l866 FDB8  
                    l874 FDCE                      l794 FEE2                      l882 FDF0  
                    l868 FDC0                      l788 FED0                      l884 FDF8  
                    l798 FEE8                      l878 FDE0                      l888 FDFE  
                    l976 FD70             __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  
                    _sw2 FDB6                      _sw3 FDDE                      _ope 000B  
           __CFG_BORV$18 000000                      sw@d 0003                     ??_sw 0003  
           __CFG_LVP$OFF 000000                     ?_sw2 0001                     ?_sw3 0001  
                   _LATB 000F8A                     _LATD 000F8C             __CFG_PWRT$ON 000000  
                   _main FD6C                     _port FD18                     start 0000  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000010  
                  ??_sw2 0003                    ??_sw3 0003                    ?_main 0005  
                  ?_port 0001                    _ANSEL 000F7E                    _TMR0H 000FD7  
                  _TMR0L 000FD6                    _PORTB 000F81                    _PORTD 000F83  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISD 000F95  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000          __end_of_alterna 0000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000           __CFG_BOREN$OFF 000000  
                  tablat 000FF5                    port@c 0001                    status 000FD8  
        __initialization FD4C             __end_of_main FD8E             __end_of_port FD30  
                 ??_main 000A                   ??_port 0001            __activetblptr 000002  
   __end_of_flag_timer_0 FDB6           __CFG_WDTEN$OFF 000000           __CFG_XINST$OFF 000000  
                 _signal FE4A                   _set_ph FD00                ??_alterna 0002  
           ?_timer_0_set 0001         __end_of_signal_1 FEBE         __end_of_signal_2 FEF8  
           __pdataCOMRAM 000D         __end_of_set_leds FD4C                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8          __CFG_HFOFST$OFF 000000  
        __CFG_FOSC$HSPLL 000000               __accesstop 0060  __end_of__initialization FD62  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001           __pcstackCOMRAM 0001  
             __end_of_sw FE4A               __pnvCOMRAM 000C                  ?_signal 0001  
                ?_set_ph 0001    __size_of_flag_timer_0 0028                  __Hparam 0000  
                __Lparam 0000                ?_signal_1 0001                ?_signal_2 0001  
              ?_set_leds 0001             _flag_timer_0 FD8E          __CFG_STVREN$OFF 000000  
                __pcinit FD4C                  __ramtop 1000          __size_of_signal 003A  
                __ptext0 FD6C                  __ptext1 FE14                  __ptext2 FDDE  
                __ptext3 FEBE                  __ptext4 FDB6          __size_of_set_ph 0018  
                __ptext5 FE84                  __ptext6 FE4A                  __ptext7 FEF8  
                __ptext8 FD18                  __ptext9 FD00                  _alterna FEF8  
              _T0CONbits 000FD5             __size_of_sw2 0028             __size_of_sw3 0036  
   __size_of_timer_0_set 000C            ?_timer_0_conf 0001            ?_timer_0_star 0001  
   end_of_initialization FD62            __Lmediumconst 0000                  signal@x 0002  
             ??_signal_1 0002               ??_signal_2 0002               ??_set_leds 0001  
         ??_timer_0_conf 0001           ??_timer_0_star 0001            __pidataCOMRAM FCE1  
         __end_of_signal FE84           __end_of_set_ph FD18      start_initialization FD4C  
            __end_of_sw2 FDDE              __end_of_sw3 FE14          timer_0_set@high 0001  
       __CFG_LPT1OSC$OFF 000000                 ??_signal 0002                 ??_set_ph 0003  
            __pbssCOMRAM 000A        __CFG_CCP2MX$PORTC 000000     __end_of_timer_0_conf FD00  
   __end_of_timer_0_star FCE6        __size_of_signal_1 003A        __size_of_signal_2 003A  
      __size_of_set_leds 001C                 ?_alterna 0001              __size_of_sw 0036  
       __CFG_WDTPS$32768 000000            ??_timer_0_set 0002                 __Hrparam 0000  
               __Lrparam 0000           timer_0_set@low 0002         __size_of_alterna 0108  
    __end_of_timer_0_set FCF2                 __ptext10 FCF2                 __ptext11 FD30  
               __ptext12 FD8E                 __ptext13 FCE2                 __ptext14 FCE6  
              signal_1@x 0002            __size_of_main 0022                signal_2@x 0002  
          __size_of_port 0018    __size_of_timer_0_conf 000E    __size_of_timer_0_star 0004  
               _signal_1 FE84                 _signal_2 FEBE                 _set_leds FD30  
               main@argc 0005                 main@argv 0007               _INTCONbits 000FF2  
           _timer_0_conf FCF2             _timer_0_star FCE2            ?_flag_timer_0 0003  
            _timer_0_set FCE6           ??_flag_timer_0 0005  
