Version 3.2 HI-TECH Software Intermediate Code
[; ;stdint.h: 13: typedef signed char int8_t;
[; ;stdint.h: 20: typedef signed int int16_t;
[; ;stdint.h: 28: typedef signed short long int int24_t;
[; ;stdint.h: 36: typedef signed long int int32_t;
[; ;stdint.h: 43: typedef unsigned char uint8_t;
[; ;stdint.h: 49: typedef unsigned int uint16_t;
[; ;stdint.h: 56: typedef unsigned short long int uint24_t;
[; ;stdint.h: 63: typedef unsigned long int uint32_t;
[; ;stdint.h: 71: typedef signed char int_least8_t;
[; ;stdint.h: 78: typedef signed int int_least16_t;
[; ;stdint.h: 90: typedef signed short long int int_least24_t;
[; ;stdint.h: 98: typedef signed long int int_least32_t;
[; ;stdint.h: 105: typedef unsigned char uint_least8_t;
[; ;stdint.h: 111: typedef unsigned int uint_least16_t;
[; ;stdint.h: 121: typedef unsigned short long int uint_least24_t;
[; ;stdint.h: 128: typedef unsigned long int uint_least32_t;
[; ;stdint.h: 137: typedef signed char int_fast8_t;
[; ;stdint.h: 144: typedef signed int int_fast16_t;
[; ;stdint.h: 156: typedef signed short long int int_fast24_t;
[; ;stdint.h: 164: typedef signed long int int_fast32_t;
[; ;stdint.h: 171: typedef unsigned char uint_fast8_t;
[; ;stdint.h: 177: typedef unsigned int uint_fast16_t;
[; ;stdint.h: 187: typedef unsigned short long int uint_fast24_t;
[; ;stdint.h: 194: typedef unsigned long int uint_fast32_t;
[; ;stdint.h: 200: typedef int32_t intmax_t;
[; ;stdint.h: 205: typedef uint32_t uintmax_t;
[; ;stdint.h: 210: typedef int16_t intptr_t;
[; ;stdint.h: 215: typedef uint16_t uintptr_t;
[; ;type.h: 20: typedef signed char s8;
[; ;type.h: 21: typedef signed int s16;
[; ;type.h: 22: typedef signed long s32;
[; ;type.h: 25: typedef unsigned char u8;
[; ;type.h: 26: typedef unsigned int u16;
[; ;type.h: 27: typedef unsigned long u32;
[; ;type.h: 34: typedef unsigned char byte;
[; ;type.h: 35: typedef unsigned char BOOL;
[; ;type.h: 36: typedef unsigned char boolean;
[; ;type.h: 38: typedef unsigned int word;
[; ;type.h: 40: typedef unsigned long dword;
[; ;type.h: 46: typedef unsigned char BYTE;
[; ;type.h: 47: typedef unsigned int WORD;
[; ;type.h: 48: typedef unsigned long DWORD;
[; ;SPI.h: 5: void set_spi();
[; ;SPI.h: 6: unsigned char send_spi(unsigned char);
[; ;SPI.h: 7: void send_mcp(u16);
"5 filtro.c
[v _u `ui ~T0 @X0 -> 100 `i e ]
[; ;filtro.c: 5: u16 u[100];
"6
[v _y `f ~T0 @X0 -> 100 `i e ]
[; ;filtro.c: 6: float y[100];
"7
[v _k `i ~T0 @X0 1 e ]
[i _k
-> 0 `i
]
[; ;filtro.c: 7: int k=0;
"8
[v _a `f ~T0 @X0 -> 4 `i e ]
[i _a
:U ..
-> .1. `f
-> -U .2.87435689 `f
-> .2.7564832 `f
-> -U .0.88189313 `f
..
]
[; ;filtro.c: 8: float a[4]={1.,-2.87435689,2.7564832,-0.88189313};
"9
[v _b `f ~T0 @X0 -> 4 `i e ]
[i _b
:U ..
-> .2.91464945e-05 `f
-> .8.74394834e-05 `f
-> .8.74394834e-05 `f
-> .2.91464945e-05 `f
..
]
[; ;filtro.c: 9: float b[4]={2.91464945e-05,8.74394834e-05,8.74394834e-05,2.91464945e-05};
"11
[v _filtro `(ui ~T0 @X0 1 ef1`ui ]
{
[; ;filtro.c: 11: u16 filtro(u16 inn){
[e :U _filtro ]
[v _inn `ui ~T0 @X0 1 r1 ]
[f ]
[; ;filtro.c: 13: u[k+3]=inn;
"13
[e = *U + &U _u * -> -> + _k -> 3 `i `ui `ux -> -> # *U &U _u `ui `ux _inn ]
[; ;filtro.c: 14: y[k+3]=(b[0]*u[k+3])+(b[1]*u[k+2])+(b[2]*u[k+1])+(b[3]*u[k]);
"14
[e = *U + &U _y * -> -> + _k -> 3 `i `ui `ux -> -> # *U &U _y `ui `ux + + + * *U + &U _b * -> -> -> 0 `i `ui `ux -> -> # *U &U _b `ui `ux -> *U + &U _u * -> -> + _k -> 3 `i `ui `ux -> -> # *U &U _u `ui `ux `f * *U + &U _b * -> -> -> 1 `i `ui `ux -> -> # *U &U _b `ui `ux -> *U + &U _u * -> -> + _k -> 2 `i `ui `ux -> -> # *U &U _u `ui `ux `f * *U + &U _b * -> -> -> 2 `i `ui `ux -> -> # *U &U _b `ui `ux -> *U + &U _u * -> -> + _k -> 1 `i `ui `ux -> -> # *U &U _u `ui `ux `f * *U + &U _b * -> -> -> 3 `i `ui `ux -> -> # *U &U _b `ui `ux -> *U + &U _u * -> -> _k `ui `ux -> -> # *U &U _u `ui `ux `f ]
[; ;filtro.c: 15: y[k+3]=y[k+3]-(a[1]*y[k+2])-(a[2]*y[k+1])-(a[3]*y[k]);
"15
[e = *U + &U _y * -> -> + _k -> 3 `i `ui `ux -> -> # *U &U _y `ui `ux - - - *U + &U _y * -> -> + _k -> 3 `i `ui `ux -> -> # *U &U _y `ui `ux * *U + &U _a * -> -> -> 1 `i `ui `ux -> -> # *U &U _a `ui `ux *U + &U _y * -> -> + _k -> 2 `i `ui `ux -> -> # *U &U _y `ui `ux * *U + &U _a * -> -> -> 2 `i `ui `ux -> -> # *U &U _a `ui `ux *U + &U _y * -> -> + _k -> 1 `i `ui `ux -> -> # *U &U _y `ui `ux * *U + &U _a * -> -> -> 3 `i `ui `ux -> -> # *U &U _a `ui `ux *U + &U _y * -> -> _k `ui `ux -> -> # *U &U _y `ui `ux ]
[; ;filtro.c: 16: k=k+1;
"16
[e = _k + _k -> 1 `i ]
[; ;filtro.c: 17: if (k+3==100){
"17
[e $ ! == + _k -> 3 `i -> 100 `i 2  ]
{
[; ;filtro.c: 19: u[2]=u[k+2];
"19
[e = *U + &U _u * -> -> -> 2 `i `ui `ux -> -> # *U &U _u `ui `ux *U + &U _u * -> -> + _k -> 2 `i `ui `ux -> -> # *U &U _u `ui `ux ]
[; ;filtro.c: 20: u[1]=u[k+1];
"20
[e = *U + &U _u * -> -> -> 1 `i `ui `ux -> -> # *U &U _u `ui `ux *U + &U _u * -> -> + _k -> 1 `i `ui `ux -> -> # *U &U _u `ui `ux ]
[; ;filtro.c: 21: u[0]=u[k+0];
"21
[e = *U + &U _u * -> -> -> 0 `i `ui `ux -> -> # *U &U _u `ui `ux *U + &U _u * -> -> + _k -> 0 `i `ui `ux -> -> # *U &U _u `ui `ux ]
[; ;filtro.c: 23: y[2]=y[k+2];
"23
[e = *U + &U _y * -> -> -> 2 `i `ui `ux -> -> # *U &U _y `ui `ux *U + &U _y * -> -> + _k -> 2 `i `ui `ux -> -> # *U &U _y `ui `ux ]
[; ;filtro.c: 24: y[1]=y[k+1];
"24
[e = *U + &U _y * -> -> -> 1 `i `ui `ux -> -> # *U &U _y `ui `ux *U + &U _y * -> -> + _k -> 1 `i `ui `ux -> -> # *U &U _y `ui `ux ]
[; ;filtro.c: 25: y[0]=y[k+0];
"25
[e = *U + &U _y * -> -> -> 0 `i `ui `ux -> -> # *U &U _y `ui `ux *U + &U _y * -> -> + _k -> 0 `i `ui `ux -> -> # *U &U _y `ui `ux ]
[; ;filtro.c: 26: k=0;
"26
[e = _k -> 0 `i ]
"27
}
[e :U 2 ]
[; ;filtro.c: 27: }
[; ;filtro.c: 29: return y[k+3];
"29
[e ) -> *U + &U _y * -> -> + _k -> 3 `i `ui `ux -> -> # *U &U _y `ui `ux `ui ]
[e $UE 1  ]
[; ;filtro.c: 30: }
"30
[e :UE 1 ]
}
