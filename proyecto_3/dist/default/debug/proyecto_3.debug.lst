

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Fri Feb 17 03:03:59 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    50  0000                     
    51                           	psect	idataCOMRAM
    52  00EE05                     __pidataCOMRAM:
    53                           	opt stack 0
    54                           
    55                           ;initializer for _periodo
    56  00EE05  01                 	db	1
    57                           
    58                           ;initializer for _s1
    59  00EE06  01                 	db	1
    60                           
    61                           ;initializer for _s2
    62  00EE07  80                 	db	128
    63                           
    64                           	psect	idataBANK0
    65  00F0FF                     __pidataBANK0:
    66                           	opt stack 0
    67                           
    68                           ;initializer for _msm3
    69  00F0FF  20                 	db	32
    70  00F100  20                 	db	32
    71  00F101  20                 	db	32
    72  00F102  20                 	db	32
    73  00F103  20                 	db	32
    74  00F104  20                 	db	32
    75  00F105  20                 	db	32
    76  00F106  20                 	db	32
    77  00F107  20                 	db	32
    78  00F108  20                 	db	32
    79  00F109  20                 	db	32
    80  00F10A  0D                 	db	13
    81  00F10B  00                 	db	0
    82                           
    83                           ;initializer for _a
    84  00F10C  00                 	db	0
    85  00F10D  80                 	db	128
    86  00F10E  3F                 	db	63
    87  00F10F  F5                 	db	245
    88  00F110  37                 	db	55
    89  00F111  C0                 	db	192
    90  00F112  6A                 	db	106
    91  00F113  30                 	db	48
    92  00F114  40                 	db	64
    93  00F115  C4                 	db	196
    94  00F116  61                 	db	97
    95  00F117  BF                 	db	191
    96                           
    97                           ;initializer for _b
    98  00F118  80                 	db	128
    99  00F119  F4                 	db	244
   100  00F11A  37                 	db	55
   101  00F11B  60                 	db	96
   102  00F11C  B7                 	db	183
   103  00F11D  38                 	db	56
   104  00F11E  60                 	db	96
   105  00F11F  B7                 	db	183
   106  00F120  38                 	db	56
   107  00F121  80                 	db	128
   108  00F122  F4                 	db	244
   109  00F123  37                 	db	55
   110                           
   111                           ;initializer for _msm1
   112  00F124  20                 	db	32
   113  00F125  20                 	db	32
   114  00F126  20                 	db	32
   115  00F127  46                 	db	70
   116  00F128  49                 	db	73
   117  00F129  4C                 	db	76
   118  00F12A  54                 	db	84
   119  00F12B  52                 	db	82
   120  00F12C  4F                 	db	79
   121  00F12D  20                 	db	32
   122  00F12E  50                 	db	80
   123  00F12F  41                 	db	65
   124  00F130  53                 	db	83
   125  00F131  41                 	db	65
   126  00F132  42                 	db	66
   127  00F133  41                 	db	65
   128  00F134  4A                 	db	74
   129  00F135  4F                 	db	79
   130  00F136  53                 	db	83
   131  00F137  20                 	db	32
   132  00F138  20                 	db	32
   133  00F139  20                 	db	32
   134  00F13A  20                 	db	32
   135  00F13B  20                 	db	32
   136  00F13C  20                 	db	32
   137  00F13D  20                 	db	32
   138  00F13E  20                 	db	32
   139  00F13F  20                 	db	32
   140  00F140  20                 	db	32
   141  00F141  0A                 	db	10
   142  00F142  20                 	db	32
   143  00F143  0D                 	db	13
   144  00F144  00                 	db	0
   145                           
   146                           ;initializer for _msm2
   147  00F145  20                 	db	32
   148  00F146  56                 	db	86
   149  00F147  49                 	db	73
   150  00F148  4E                 	db	78
   151  00F149  3A                 	db	58
   152  00F14A  20                 	db	32
   153  00F14B  09                 	db	9
   154  00F14C  09                 	db	9
   155  00F14D  20                 	db	32
   156  00F14E  56                 	db	86
   157  00F14F  4F                 	db	79
   158  00F150  55                 	db	85
   159  00F151  54                 	db	84
   160  00F152  3A                 	db	58
   161  00F153  20                 	db	32
   162  00F154  0A                 	db	10
   163  00F155  20                 	db	32
   164  00F156  0D                 	db	13
   165  00F157  00                 	db	0
   166  0000                     _ADCON0bits	set	4034
   167  0000                     _ADCON1	set	4033
   168  0000                     _ADCON2bits	set	4032
   169  0000                     _ADRESH	set	4036
   170  0000                     _ADRESL	set	4035
   171  0000                     _ANSEL	set	3966
   172  0000                     _ANSELbits	set	3966
   173  0000                     _BAUDCONbits	set	4024
   174  0000                     _INTCONbits	set	4082
   175  0000                     _LATB	set	3978
   176  0000                     _LATD	set	3980
   177  0000                     _PIR1bits	set	3998
   178  0000                     _PORTB	set	3969
   179  0000                     _PORTBbits	set	3969
   180  0000                     _PORTD	set	3971
   181  0000                     _PORTDbits	set	3971
   182  0000                     _RCREG	set	4014
   183  0000                     _RCSTAbits	set	4011
   184  0000                     _SPBRG	set	4015
   185  0000                     _SPBRGH	set	4016
   186  0000                     _SSPBUF	set	4041
   187  0000                     _SSPCON1bits	set	4038
   188  0000                     _SSPSTATbits	set	4039
   189  0000                     _T0CONbits	set	4053
   190  0000                     _T1CONbits	set	4045
   191  0000                     _TMR0H	set	4055
   192  0000                     _TMR0L	set	4054
   193  0000                     _TMR1H	set	4047
   194  0000                     _TMR1L	set	4046
   195  0000                     _TRISA	set	3986
   196  0000                     _TRISAbits	set	3986
   197  0000                     _TRISB	set	3987
   198  0000                     _TRISC	set	3988
   199  0000                     _TRISCbits	set	3988
   200  0000                     _TRISD	set	3989
   201  0000                     _TXREG	set	4013
   202  0000                     _TXSTAbits	set	4012
   203                           
   204                           ; #config settings
   205  0000                     
   206                           	psect	cinit
   207  00F158                     __pcinit:
   208                           	opt stack 0
   209  00F158                     start_initialization:
   210                           	opt stack 0
   211  00F158                     __initialization:
   212                           	opt stack 0
   213                           
   214                           ; Clear objects allocated to BIGRAM (300 bytes)
   215  00F158  EE01  F0C8         	lfsr	0,__pbssBIGRAM
   216  00F15C  EE11 F02C          	lfsr	1,300
   217  00F160                     clear_0:
   218  00F160  6AEE               	clrf	postinc0,c
   219  00F162  50E5               	movf	postdec1,w,c
   220  00F164  50E1               	movf	fsr1l,w,c
   221  00F166  E1FC               	bnz	clear_0
   222  00F168  50E2               	movf	fsr1h,w,c
   223  00F16A  E1FA               	bnz	clear_0
   224                           
   225                           ; Clear objects allocated to BANK1 (200 bytes)
   226  00F16C  EE01  F000         	lfsr	0,__pbssBANK1
   227  00F170  0EC8               	movlw	200
   228  00F172                     clear_1:
   229  00F172  6AEE               	clrf	postinc0,c
   230  00F174  06E8               	decf	wreg,f,c
   231  00F176  E1FD               	bnz	clear_1
   232                           
   233                           ; Clear objects allocated to BANK0 (49 bytes)
   234  00F178  EE00  F0B9         	lfsr	0,__pbssBANK0
   235  00F17C  0E31               	movlw	49
   236  00F17E                     clear_2:
   237  00F17E  6AEE               	clrf	postinc0,c
   238  00F180  06E8               	decf	wreg,f,c
   239  00F182  E1FD               	bnz	clear_2
   240                           
   241                           ; Clear objects allocated to COMRAM (14 bytes)
   242  00F184  EE00  F04F         	lfsr	0,__pbssCOMRAM
   243  00F188  0E0E               	movlw	14
   244  00F18A                     clear_3:
   245  00F18A  6AEE               	clrf	postinc0,c
   246  00F18C  06E8               	decf	wreg,f,c
   247  00F18E  E1FD               	bnz	clear_3
   248                           
   249                           ; Initialize objects allocated to BANK0 (89 bytes)
   250                           ; load TBLPTR registers with __pidataBANK0
   251  00F190  0EFF               	movlw	low __pidataBANK0
   252  00F192  6EF6               	movwf	tblptrl,c
   253  00F194  0EF0               	movlw	high __pidataBANK0
   254  00F196  6EF7               	movwf	tblptrh,c
   255  00F198  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   256  00F19A  6EF8               	movwf	tblptru,c
   257  00F19C  EE00  F060         	lfsr	0,__pdataBANK0
   258  00F1A0  EE10 F059          	lfsr	1,89
   259  00F1A4                     copy_data0:
   260  00F1A4  0009               	tblrd		*+
   261  00F1A6  CFF5 FFEE          	movff	tablat,postinc0
   262  00F1AA  50E5               	movf	postdec1,w,c
   263  00F1AC  50E1               	movf	fsr1l,w,c
   264  00F1AE  E1FA               	bnz	copy_data0
   265                           
   266                           ; Initialize objects allocated to COMRAM (3 bytes)
   267                           ; load TBLPTR registers with __pidataCOMRAM
   268  00F1B0  0E05               	movlw	low __pidataCOMRAM
   269  00F1B2  6EF6               	movwf	tblptrl,c
   270  00F1B4  0EEE               	movlw	high __pidataCOMRAM
   271  00F1B6  6EF7               	movwf	tblptrh,c
   272  00F1B8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   273  00F1BA  6EF8               	movwf	tblptru,c
   274  00F1BC  0009               	tblrd		*+	;fetch initializer
   275  00F1BE  CFF5 F05D          	movff	tablat,__pdataCOMRAM
   276  00F1C2  0009               	tblrd		*+	;fetch initializer
   277  00F1C4  CFF5 F05E          	movff	tablat,__pdataCOMRAM+1
   278  00F1C8  0009               	tblrd		*+	;fetch initializer
   279  00F1CA  CFF5 F05F          	movff	tablat,__pdataCOMRAM+2
   280  00F1CE                     end_of_initialization:
   281                           	opt stack 0
   282  00F1CE                     __end_of__initialization:
   283                           	opt stack 0
   284  00F1CE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   285  00F1D0  6EF8               	movwf	tblptru,c
   286  00F1D2  0100               	movlb	0
   287  00F1D4  EF27  F07B         	goto	_main	;jump to C main() function
   288                           tblptru	equ	0xFF8
   289                           tblptrh	equ	0xFF7
   290                           tblptrl	equ	0xFF6
   291                           tablat	equ	0xFF5
   292                           postinc0	equ	0xFEE
   293                           wreg	equ	0xFE8
   294                           postdec1	equ	0xFE5
   295                           fsr1h	equ	0xFE2
   296                           fsr1l	equ	0xFE1
   297                           
   298                           	psect	bssCOMRAM
   299  00004F                     __pbssCOMRAM:
   300                           	opt stack 0
   301  00004F                     _est:
   302                           	opt stack 0
   303  00004F                     	ds	2
   304  000051                     _k:
   305                           	opt stack 0
   306  000051                     	ds	2
   307  000053                     _pointer_in:
   308                           	opt stack 0
   309  000053                     	ds	2
   310  000055                     _pointer_out:
   311                           	opt stack 0
   312  000055                     	ds	2
   313  000057                     _d:
   314                           	opt stack 0
   315  000057                     	ds	1
   316  000058                     _flag_uart:
   317                           	opt stack 0
   318  000058                     	ds	1
   319  000059                     _jj:
   320                           	opt stack 0
   321  000059                     	ds	1
   322  00005A                     _sec:
   323                           	opt stack 0
   324  00005A                     	ds	1
   325  00005B                     _ss:
   326                           	opt stack 0
   327  00005B                     	ds	1
   328  00005C                     _x:
   329                           	opt stack 0
   330  00005C                     	ds	1
   331                           tblptru	equ	0xFF8
   332                           tblptrh	equ	0xFF7
   333                           tblptrl	equ	0xFF6
   334                           tablat	equ	0xFF5
   335                           postinc0	equ	0xFEE
   336                           wreg	equ	0xFE8
   337                           postdec1	equ	0xFE5
   338                           fsr1h	equ	0xFE2
   339                           fsr1l	equ	0xFE1
   340                           
   341                           	psect	dataCOMRAM
   342  00005D                     __pdataCOMRAM:
   343                           	opt stack 0
   344  00005D                     _periodo:
   345                           	opt stack 0
   346  00005D                     	ds	1
   347  00005E                     _s1:
   348                           	opt stack 0
   349  00005E                     	ds	1
   350  00005F                     _s2:
   351                           	opt stack 0
   352  00005F                     	ds	1
   353                           tblptru	equ	0xFF8
   354                           tblptrh	equ	0xFF7
   355                           tblptrl	equ	0xFF6
   356                           tablat	equ	0xFF5
   357                           postinc0	equ	0xFEE
   358                           wreg	equ	0xFE8
   359                           postdec1	equ	0xFE5
   360                           fsr1h	equ	0xFE2
   361                           fsr1l	equ	0xFE1
   362                           
   363                           	psect	bssBANK0
   364  0000B9                     __pbssBANK0:
   365                           	opt stack 0
   366  0000B9                     _num:
   367                           	opt stack 0
   368  0000B9                     	ds	5
   369  0000BE                     _in_t:
   370                           	opt stack 0
   371  0000BE                     	ds	3
   372  0000C1                     _in_v:
   373                           	opt stack 0
   374  0000C1                     	ds	3
   375  0000C4                     _out_t:
   376                           	opt stack 0
   377  0000C4                     	ds	3
   378  0000C7                     _out_v:
   379                           	opt stack 0
   380  0000C7                     	ds	3
   381  0000CA                     printFloat@buf:
   382                           	opt stack 0
   383  0000CA                     	ds	32
   384                           tblptru	equ	0xFF8
   385                           tblptrh	equ	0xFF7
   386                           tblptrl	equ	0xFF6
   387                           tablat	equ	0xFF5
   388                           postinc0	equ	0xFEE
   389                           wreg	equ	0xFE8
   390                           postdec1	equ	0xFE5
   391                           fsr1h	equ	0xFE2
   392                           fsr1l	equ	0xFE1
   393                           
   394                           	psect	dataBANK0
   395  000060                     __pdataBANK0:
   396                           	opt stack 0
   397  000060                     _msm3:
   398                           	opt stack 0
   399  000060                     	ds	13
   400  00006D                     _a:
   401                           	opt stack 0
   402  00006D                     	ds	12
   403  000079                     _b:
   404                           	opt stack 0
   405  000079                     	ds	12
   406  000085                     _msm1:
   407                           	opt stack 0
   408  000085                     	ds	33
   409  0000A6                     _msm2:
   410                           	opt stack 0
   411  0000A6                     	ds	19
   412                           tblptru	equ	0xFF8
   413                           tblptrh	equ	0xFF7
   414                           tblptrl	equ	0xFF6
   415                           tablat	equ	0xFF5
   416                           postinc0	equ	0xFEE
   417                           wreg	equ	0xFE8
   418                           postdec1	equ	0xFE5
   419                           fsr1h	equ	0xFE2
   420                           fsr1l	equ	0xFE1
   421                           
   422                           	psect	bssBANK1
   423  000100                     __pbssBANK1:
   424                           	opt stack 0
   425  000100                     _u:
   426                           	opt stack 0
   427  000100                     	ds	200
   428                           tblptru	equ	0xFF8
   429                           tblptrh	equ	0xFF7
   430                           tblptrl	equ	0xFF6
   431                           tablat	equ	0xFF5
   432                           postinc0	equ	0xFEE
   433                           wreg	equ	0xFE8
   434                           postdec1	equ	0xFE5
   435                           fsr1h	equ	0xFE2
   436                           fsr1l	equ	0xFE1
   437                           
   438                           	psect	bssBIGRAM
   439  0001C8                     __pbssBIGRAM:
   440                           	opt stack 0
   441  0001C8                     _y:
   442                           	opt stack 0
   443  0001C8                     	ds	300
   444                           tblptru	equ	0xFF8
   445                           tblptrh	equ	0xFF7
   446                           tblptrl	equ	0xFF6
   447                           tablat	equ	0xFF5
   448                           postinc0	equ	0xFEE
   449                           wreg	equ	0xFE8
   450                           postdec1	equ	0xFE5
   451                           fsr1h	equ	0xFE2
   452                           fsr1l	equ	0xFE1
   453                           
   454                           	psect	cstackCOMRAM
   455  000001                     __pcstackCOMRAM:
   456                           	opt stack 0
   457  000001                     ?_dato_16:
   458                           	opt stack 0
   459  000001                     ?___lwdiv:
   460                           	opt stack 0
   461  000001                     ?___lwmod:
   462                           	opt stack 0
   463  000001                     ?___ftpack:
   464                           	opt stack 0
   465  000001                     timer_1_set@high:
   466                           	opt stack 0
   467  000001                     set_adc@x:
   468                           	opt stack 0
   469  000001                     activacion_tx@x:
   470                           	opt stack 0
   471  000001                     activacion_rx@x:
   472                           	opt stack 0
   473  000001                     trans_dato@x:
   474                           	opt stack 0
   475  000001                     ___lwdiv@dividend:
   476                           	opt stack 0
   477  000001                     ___lwmod@dividend:
   478                           	opt stack 0
   479  000001                     ___ftpack@arg:
   480                           	opt stack 0
   481                           
   482                           ; 3 bytes @ 0x0
   483  000001                     	ds	1
   484  000002                     timer_1_set@low:
   485                           	opt stack 0
   486  000002                     send_msm@msm:
   487                           	opt stack 0
   488                           
   489                           ; 2 bytes @ 0x1
   490  000002                     	ds	1
   491  000003                     ?_flag_timer_1:
   492                           	opt stack 0
   493  000003                     dato_16@y:
   494                           	opt stack 0
   495  000003                     ___lwdiv@divisor:
   496                           	opt stack 0
   497  000003                     ___lwmod@divisor:
   498                           	opt stack 0
   499                           
   500                           ; 2 bytes @ 0x2
   501  000003                     	ds	1
   502  000004                     ___ftpack@exp:
   503                           	opt stack 0
   504                           
   505                           ; 1 bytes @ 0x3
   506  000004                     	ds	1
   507  000005                     ?___wmul:
   508                           	opt stack 0
   509  000005                     send_msm@a:
   510                           	opt stack 0
   511  000005                     ___ftpack@sign:
   512                           	opt stack 0
   513  000005                     ___lwmod@counter:
   514                           	opt stack 0
   515  000005                     ___wmul@multiplier:
   516                           	opt stack 0
   517  000005                     ___lwdiv@quotient:
   518                           	opt stack 0
   519                           
   520                           ; 2 bytes @ 0x4
   521  000005                     	ds	1
   522  000006                     ??___ftpack:
   523                           
   524                           ; 0 bytes @ 0x5
   525  000006                     	ds	1
   526  000007                     ___lwdiv@counter:
   527                           	opt stack 0
   528  000007                     ___wmul@multiplicand:
   529                           	opt stack 0
   530                           
   531                           ; 2 bytes @ 0x6
   532  000007                     	ds	2
   533  000009                     ?___ftdiv:
   534                           	opt stack 0
   535  000009                     ?___lbtoft:
   536                           	opt stack 0
   537  000009                     ?___lwtoft:
   538                           	opt stack 0
   539  000009                     ___wmul@product:
   540                           	opt stack 0
   541  000009                     ___lwtoft@c:
   542                           	opt stack 0
   543  000009                     ___ftdiv@f1:
   544                           	opt stack 0
   545                           
   546                           ; 3 bytes @ 0x8
   547  000009                     	ds	2
   548  00000B                     ?___fttol:
   549                           	opt stack 0
   550  00000B                     ___fttol@f1:
   551                           	opt stack 0
   552                           
   553                           ; 3 bytes @ 0xA
   554  00000B                     	ds	1
   555  00000C                     ?___ftmul:
   556                           	opt stack 0
   557  00000C                     ___lbtoft@c:
   558                           	opt stack 0
   559  00000C                     ___ftdiv@f2:
   560                           	opt stack 0
   561  00000C                     ___ftmul@f1:
   562                           	opt stack 0
   563                           
   564                           ; 3 bytes @ 0xB
   565  00000C                     	ds	3
   566  00000F                     ??___ftdiv:
   567  00000F                     ??___fttol:
   568  00000F                     ___ftmul@f2:
   569                           	opt stack 0
   570                           
   571                           ; 3 bytes @ 0xE
   572  00000F                     	ds	3
   573  000012                     ??___ftmul:
   574  000012                     ___ftdiv@cntr:
   575                           	opt stack 0
   576                           
   577                           ; 1 bytes @ 0x11
   578  000012                     	ds	1
   579  000013                     ___ftdiv@f3:
   580                           	opt stack 0
   581                           
   582                           ; 3 bytes @ 0x12
   583  000013                     	ds	1
   584  000014                     ___fttol@sign1:
   585                           	opt stack 0
   586                           
   587                           ; 1 bytes @ 0x13
   588  000014                     	ds	1
   589  000015                     ___ftmul@exp:
   590                           	opt stack 0
   591  000015                     ___fttol@lval:
   592                           	opt stack 0
   593                           
   594                           ; 4 bytes @ 0x14
   595  000015                     	ds	1
   596  000016                     ___ftdiv@exp:
   597                           	opt stack 0
   598  000016                     ___ftmul@f3_as_product:
   599                           	opt stack 0
   600                           
   601                           ; 3 bytes @ 0x15
   602  000016                     	ds	1
   603  000017                     ___ftdiv@sign:
   604                           	opt stack 0
   605                           
   606                           ; 1 bytes @ 0x16
   607  000017                     	ds	2
   608  000019                     ___ftmul@cntr:
   609                           	opt stack 0
   610  000019                     ___fttol@exp1:
   611                           	opt stack 0
   612                           
   613                           ; 1 bytes @ 0x18
   614  000019                     	ds	1
   615  00001A                     ___ftmul@sign:
   616                           	opt stack 0
   617                           
   618                           ; 1 bytes @ 0x19
   619  00001A                     	ds	1
   620  00001B                     ?___ftneg:
   621                           	opt stack 0
   622  00001B                     ___ftneg@f1:
   623                           	opt stack 0
   624                           
   625                           ; 3 bytes @ 0x1A
   626  00001B                     	ds	3
   627  00001E                     ?___ftadd:
   628                           	opt stack 0
   629  00001E                     ___ftadd@f1:
   630                           	opt stack 0
   631                           
   632                           ; 3 bytes @ 0x1D
   633  00001E                     	ds	3
   634  000021                     ___ftadd@f2:
   635                           	opt stack 0
   636                           
   637                           ; 3 bytes @ 0x20
   638  000021                     	ds	3
   639  000024                     ??___ftadd:
   640                           
   641                           ; 0 bytes @ 0x23
   642  000024                     	ds	3
   643  000027                     ___ftadd@sign:
   644                           	opt stack 0
   645                           
   646                           ; 1 bytes @ 0x26
   647  000027                     	ds	1
   648  000028                     ___ftadd@exp2:
   649                           	opt stack 0
   650                           
   651                           ; 1 bytes @ 0x27
   652  000028                     	ds	1
   653  000029                     ___ftadd@exp1:
   654                           	opt stack 0
   655                           
   656                           ; 1 bytes @ 0x28
   657  000029                     	ds	1
   658  00002A                     ?_filtro:
   659                           	opt stack 0
   660  00002A                     ?___ftsub:
   661                           	opt stack 0
   662  00002A                     filtro@inn:
   663                           	opt stack 0
   664  00002A                     ___ftsub@f1:
   665                           	opt stack 0
   666                           
   667                           ; 3 bytes @ 0x29
   668  00002A                     	ds	2
   669  00002C                     ??_filtro:
   670                           
   671                           ; 0 bytes @ 0x2B
   672  00002C                     	ds	1
   673  00002D                     ___ftsub@f2:
   674                           	opt stack 0
   675                           
   676                           ; 3 bytes @ 0x2C
   677  00002D                     	ds	3
   678  000030                     ?_printFloat:
   679                           	opt stack 0
   680  000030                     printFloat@number:
   681                           	opt stack 0
   682  000030                     _filtro$1840:
   683                           	opt stack 0
   684                           
   685                           ; 3 bytes @ 0x2F
   686  000030                     	ds	3
   687  000033                     printFloat@digits:
   688                           	opt stack 0
   689  000033                     _filtro$1841:
   690                           	opt stack 0
   691                           
   692                           ; 3 bytes @ 0x32
   693  000033                     	ds	1
   694  000034                     printFloat@base:
   695                           	opt stack 0
   696                           
   697                           ; 1 bytes @ 0x33
   698  000034                     	ds	1
   699  000035                     ??_printFloat:
   700                           
   701                           ; 0 bytes @ 0x34
   702  000035                     	ds	2
   703  000037                     printFloat@rounding:
   704                           	opt stack 0
   705                           
   706                           ; 3 bytes @ 0x36
   707  000037                     	ds	3
   708  00003A                     printFloat@toPrint:
   709                           	opt stack 0
   710                           
   711                           ; 1 bytes @ 0x39
   712  00003A                     	ds	1
   713  00003B                     printFloat@remainder:
   714                           	opt stack 0
   715                           
   716                           ; 3 bytes @ 0x3A
   717  00003B                     	ds	3
   718  00003E                     printFloat@int_part:
   719                           	opt stack 0
   720                           
   721                           ; 2 bytes @ 0x3D
   722  00003E                     	ds	2
   723  000040                     printFloat@i:
   724                           	opt stack 0
   725                           
   726                           ; 2 bytes @ 0x3F
   727  000040                     	ds	2
   728  000042                     ??_transmitir:
   729                           
   730                           ; 0 bytes @ 0x41
   731  000042                     	ds	2
   732  000044                     
   733                           ; 2 bytes @ 0x43
   734  000044                     	ds	2
   735  000046                     
   736                           ; 3 bytes @ 0x45
   737  000046                     	ds	3
   738  000049                     main@out:
   739                           	opt stack 0
   740                           
   741                           ; 2 bytes @ 0x48
   742  000049                     	ds	2
   743  00004B                     main@time_TM:
   744                           	opt stack 0
   745                           
   746                           ; 1 bytes @ 0x4A
   747  00004B                     	ds	1
   748  00004C                     main@time_UART:
   749                           	opt stack 0
   750                           
   751                           ; 1 bytes @ 0x4B
   752  00004C                     	ds	1
   753  00004D                     main@in:
   754                           	opt stack 0
   755                           
   756                           ; 2 bytes @ 0x4C
   757  00004D                     	ds	2
   758                           tblptru	equ	0xFF8
   759                           tblptrh	equ	0xFF7
   760                           tblptrl	equ	0xFF6
   761                           tablat	equ	0xFF5
   762                           postinc0	equ	0xFEE
   763                           wreg	equ	0xFE8
   764                           postdec1	equ	0xFE5
   765                           fsr1h	equ	0xFE2
   766                           fsr1l	equ	0xFE1
   767                           
   768 ;;
   769 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   770 ;;
   771 ;; *************** function _main *****************
   772 ;; Defined at:
   773 ;;		line 127 in file "main.c"
   774 ;; Parameters:    Size  Location     Type
   775 ;;  argc            2   67[COMRAM] int 
   776 ;;  argv            3   69[COMRAM] PTR PTR unsigned char 
   777 ;; Auto vars:     Size  Location     Type
   778 ;;  in              2   76[COMRAM] unsigned int 
   779 ;;  out             2   72[COMRAM] unsigned int 
   780 ;;  time_UART       1   75[COMRAM] unsigned char 
   781 ;;  time_TM         1   74[COMRAM] unsigned char 
   782 ;; Return value:  Size  Location     Type
   783 ;;                  2   67[COMRAM] int 
   784 ;; Registers used:
   785 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   786 ;; Tracked objects:
   787 ;;		On entry : 0/0
   788 ;;		On exit  : 0/0
   789 ;;		Unchanged: 0/0
   790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   791 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   792 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   794 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   795 ;;Total ram usage:       11 bytes
   796 ;; Hardware stack levels required when called:    5
   797 ;; This function calls:
   798 ;;		___ftmul
   799 ;;		___lwtoft
   800 ;;		___wmul
   801 ;;		_dato_16
   802 ;;		_filtro
   803 ;;		_final_convercion
   804 ;;		_flag_timer_1
   805 ;;		_send_msm
   806 ;;		_set_ph
   807 ;;		_star_convercion
   808 ;;		_transmitir
   809 ;; This function is called by:
   810 ;;		Startup code after reset
   811 ;; This function uses a non-reentrant model
   812 ;;
   813                           
   814                           	psect	text0
   815  00F64E                     __ptext0:
   816                           	opt stack 0
   817  00F64E                     _main:
   818                           	opt stack 26
   819                           
   820                           ;main.c: 128: set_ph();
   821                           
   822                           ;incstack = 0
   823  00F64E  ECDC  F077         	call	_set_ph	;wreg free
   824                           
   825                           ;main.c: 129: u8 time_TM=0;
   826  00F652  0E00               	movlw	0
   827  00F654  6E4B               	movwf	main@time_TM,c
   828                           
   829                           ;main.c: 130: u8 time_UART=0;
   830  00F656  0E00               	movlw	0
   831  00F658  6E4C               	movwf	main@time_UART,c
   832                           
   833                           ;main.c: 131: u16 in=0;
   834  00F65A  0E00               	movlw	0
   835  00F65C  6E4E               	movwf	main@in+1,c
   836  00F65E  0E00               	movlw	0
   837  00F660  6E4D               	movwf	main@in,c
   838                           
   839                           ;main.c: 132: u16 out=0;
   840  00F662  0E00               	movlw	0
   841  00F664  6E4A               	movwf	main@out+1,c
   842  00F666  0E00               	movlw	0
   843  00F668  6E49               	movwf	main@out,c
   844                           
   845                           ;main.c: 134: send_msm(msm1);
   846  00F66A  0E85               	movlw	low _msm1
   847  00F66C  6E02               	movwf	send_msm@msm,c
   848  00F66E  0E00               	movlw	high _msm1
   849  00F670  6E03               	movwf	send_msm@msm+1,c
   850  00F672  ECF7  F077         	call	_send_msm	;wreg free
   851                           
   852                           ;main.c: 135: send_msm(msm2);
   853  00F676  0EA6               	movlw	low _msm2
   854  00F678  6E02               	movwf	send_msm@msm,c
   855  00F67A  0E00               	movlw	high _msm2
   856  00F67C  6E03               	movwf	send_msm@msm+1,c
   857  00F67E  ECF7  F077         	call	_send_msm	;wreg free
   858  00F682                     l2215:
   859                           
   860                           ;main.c: 137: if (flag_timer_1()){
   861  00F682  ECC8  F077         	call	_flag_timer_1	;wreg free
   862  00F686  5003               	movf	?_flag_timer_1,w,c
   863  00F688  1004               	iorwf	?_flag_timer_1+1,w,c
   864  00F68A  B4D8               	btfsc	status,2,c
   865  00F68C  D003               	goto	l2219
   866                           
   867                           ;main.c: 138: PORTD=~PORTD;
   868  00F68E  1E83               	comf	3971,f,c	;volatile
   869                           
   870                           ;main.c: 139: time_UART++;
   871  00F690  2A4C               	incf	main@time_UART,f,c
   872                           
   873                           ;main.c: 140: time_TM++;
   874  00F692  2A4B               	incf	main@time_TM,f,c
   875  00F694                     l2219:
   876                           
   877                           ;main.c: 141: }
   878                           ;main.c: 143: if (time_TM==1){
   879  00F694  044B               	decf	main@time_TM,w,c
   880  00F696  A4D8               	btfss	status,2,c
   881  00F698  D004               	goto	l2225
   882                           
   883                           ;main.c: 144: star_convercion();
   884  00F69A  EC06  F077         	call	_star_convercion	;wreg free
   885                           
   886                           ;main.c: 145: time_TM=0;
   887  00F69E  0E00               	movlw	0
   888  00F6A0  6E4B               	movwf	main@time_TM,c
   889  00F6A2                     l2225:
   890                           
   891                           ;main.c: 146: }
   892                           ;main.c: 147: if (time_UART==250){
   893  00F6A2  0EFA               	movlw	250
   894  00F6A4  184C               	xorwf	main@time_UART,w,c
   895  00F6A6  A4D8               	btfss	status,2,c
   896  00F6A8  D038               	goto	l2233
   897                           
   898                           ;main.c: 148: flag_uart=1;
   899  00F6AA  0E01               	movlw	1
   900  00F6AC  6E58               	movwf	_flag_uart,c
   901                           
   902                           ;main.c: 149: time_UART=0;
   903  00F6AE  0E00               	movlw	0
   904  00F6B0  6E4C               	movwf	main@time_UART,c
   905                           
   906                           ;main.c: 150: in_t=0.001*in;
   907  00F6B2  C04D  F009         	movff	main@in,___lwtoft@c
   908  00F6B6  C04E  F00A         	movff	main@in+1,___lwtoft@c+1
   909  00F6BA  EC7F  F077         	call	___lwtoft	;wreg free
   910  00F6BE  C009  F00C         	movff	?___lwtoft,___ftmul@f1
   911  00F6C2  C00A  F00D         	movff	?___lwtoft+1,___ftmul@f1+1
   912  00F6C6  C00B  F00E         	movff	?___lwtoft+2,___ftmul@f1+2
   913  00F6CA  0E12               	movlw	18
   914  00F6CC  6E0F               	movwf	___ftmul@f2,c
   915  00F6CE  0E83               	movlw	131
   916  00F6D0  6E10               	movwf	___ftmul@f2+1,c
   917  00F6D2  0E3A               	movlw	58
   918  00F6D4  6E11               	movwf	___ftmul@f2+2,c
   919  00F6D6  ECB6  F079         	call	___ftmul	;wreg free
   920  00F6DA  C00C  F0BE         	movff	?___ftmul,_in_t
   921  00F6DE  C00D  F0BF         	movff	?___ftmul+1,_in_t+1
   922  00F6E2  C00E  F0C0         	movff	?___ftmul+2,_in_t+2
   923                           
   924                           ;main.c: 151: out_t=0.001*out;
   925  00F6E6  C049  F009         	movff	main@out,___lwtoft@c
   926  00F6EA  C04A  F00A         	movff	main@out+1,___lwtoft@c+1
   927  00F6EE  EC7F  F077         	call	___lwtoft	;wreg free
   928  00F6F2  C009  F00C         	movff	?___lwtoft,___ftmul@f1
   929  00F6F6  C00A  F00D         	movff	?___lwtoft+1,___ftmul@f1+1
   930  00F6FA  C00B  F00E         	movff	?___lwtoft+2,___ftmul@f1+2
   931  00F6FE  0E12               	movlw	18
   932  00F700  6E0F               	movwf	___ftmul@f2,c
   933  00F702  0E83               	movlw	131
   934  00F704  6E10               	movwf	___ftmul@f2+1,c
   935  00F706  0E3A               	movlw	58
   936  00F708  6E11               	movwf	___ftmul@f2+2,c
   937  00F70A  ECB6  F079         	call	___ftmul	;wreg free
   938  00F70E  C00C  F0C4         	movff	?___ftmul,_out_t
   939  00F712  C00D  F0C5         	movff	?___ftmul+1,_out_t+1
   940  00F716  C00E  F0C6         	movff	?___ftmul+2,_out_t+2
   941  00F71A                     l2233:
   942                           
   943                           ;main.c: 152: }
   944                           ;main.c: 153: if (final_convercion()){
   945  00F71A  EC14  F077         	call	_final_convercion	;wreg free
   946  00F71E  0900               	iorlw	0
   947  00F720  B4D8               	btfsc	status,2,c
   948  00F722  D01A               	goto	l2239
   949                           
   950                           ;main.c: 154: in=3*dato_16();
   951  00F724  EC5C  F077         	call	_dato_16	;wreg free
   952  00F728  C001  F005         	movff	?_dato_16,___wmul@multiplier
   953  00F72C  C002  F006         	movff	?_dato_16+1,___wmul@multiplier+1
   954  00F730  0E00               	movlw	0
   955  00F732  6E08               	movwf	___wmul@multiplicand+1,c
   956  00F734  0E03               	movlw	3
   957  00F736  6E07               	movwf	___wmul@multiplicand,c
   958  00F738  ECB5  F077         	call	___wmul	;wreg free
   959  00F73C  C005  F04D         	movff	?___wmul,main@in
   960  00F740  C006  F04E         	movff	?___wmul+1,main@in+1
   961                           
   962                           ;main.c: 155: out=filtro(in);
   963  00F744  C04D  F02A         	movff	main@in,filtro@inn
   964  00F748  C04E  F02B         	movff	main@in+1,filtro@inn+1
   965  00F74C  EC9A  F07D         	call	_filtro	;wreg free
   966  00F750  C02A  F049         	movff	?_filtro,main@out
   967  00F754  C02B  F04A         	movff	?_filtro+1,main@out+1
   968  00F758                     l2239:
   969                           
   970                           ;main.c: 156: }
   971                           ;main.c: 157: if (flag_uart){
   972  00F758  5058               	movf	_flag_uart,w,c
   973  00F75A  B4D8               	btfsc	status,2,c
   974  00F75C  D792               	goto	l2215
   975                           
   976                           ;main.c: 158: transmitir();
   977  00F75E  ECAA  F07A         	call	_transmitir	;wreg free
   978  00F762  D78F               	goto	l2215
   979  00F764                     __end_of_main:
   980                           	opt stack 0
   981                           tblptru	equ	0xFF8
   982                           tblptrh	equ	0xFF7
   983                           tblptrl	equ	0xFF6
   984                           tablat	equ	0xFF5
   985                           postinc0	equ	0xFEE
   986                           wreg	equ	0xFE8
   987                           postdec1	equ	0xFE5
   988                           fsr1h	equ	0xFE2
   989                           fsr1l	equ	0xFE1
   990                           status	equ	0xFD8
   991                           
   992 ;; *************** function _transmitir *****************
   993 ;; Defined at:
   994 ;;		line 167 in file "main.c"
   995 ;; Parameters:    Size  Location     Type
   996 ;;		None
   997 ;; Auto vars:     Size  Location     Type
   998 ;;		None
   999 ;; Return value:  Size  Location     Type
  1000 ;;		None               void
  1001 ;; Registers used:
  1002 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1010 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1011 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1012 ;;Total ram usage:        2 bytes
  1013 ;; Hardware stack levels used:    1
  1014 ;; Hardware stack levels required when called:    4
  1015 ;; This function calls:
  1016 ;;		_printFloat
  1017 ;;		_trans_dato
  1018 ;; This function is called by:
  1019 ;;		_main
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023                           	psect	text1
  1024  00F554                     __ptext1:
  1025                           	opt stack 0
  1026  00F554                     _transmitir:
  1027                           	opt stack 26
  1028                           
  1029                           ;main.c: 169: switch (est){
  1030                           
  1031                           ;incstack = 0
  1032  00F554  D066               	goto	l2185
  1033  00F556                     l2153:
  1034                           
  1035                           ;main.c: 171: pointer_in=printFloat(in_t,3,10);
  1036  00F556  C0BE  F030         	movff	_in_t,printFloat@number
  1037  00F55A  C0BF  F031         	movff	_in_t+1,printFloat@number+1
  1038  00F55E  C0C0  F032         	movff	_in_t+2,printFloat@number+2
  1039  00F562  0E03               	movlw	3
  1040  00F564  6E33               	movwf	printFloat@digits,c
  1041  00F566  0E0A               	movlw	10
  1042  00F568  6E34               	movwf	printFloat@base,c
  1043  00F56A  EC88  F07C         	call	_printFloat	;wreg free
  1044  00F56E  C030  F053         	movff	?_printFloat,_pointer_in
  1045  00F572  C031  F054         	movff	?_printFloat+1,_pointer_in+1
  1046                           
  1047                           ;main.c: 172: est=1;
  1048  00F576  0E00               	movlw	0
  1049  00F578  6E50               	movwf	_est+1,c
  1050  00F57A  0E01               	movlw	1
  1051  00F57C  6E4F               	movwf	_est,c
  1052                           
  1053                           ;main.c: 173: break;
  1054  00F57E  0012               	return	
  1055  00F580                     l2157:
  1056                           
  1057                           ;main.c: 176: if (*pointer_in!='\r'){
  1058  00F580  C053  FFD9         	movff	_pointer_in,fsr2l
  1059  00F584  C054  FFDA         	movff	_pointer_in+1,fsr2h
  1060  00F588  0E0D               	movlw	13
  1061  00F58A  18DE               	xorwf	postinc2,w,c
  1062  00F58C  B4D8               	btfsc	status,2,c
  1063  00F58E  D00A               	goto	l2163
  1064                           
  1065                           ;main.c: 177: trans_dato(*pointer_in);
  1066  00F590  C053  FFD9         	movff	_pointer_in,fsr2l
  1067  00F594  C054  FFDA         	movff	_pointer_in+1,fsr2h
  1068  00F598  50DF               	movf	indf2,w,c
  1069  00F59A  EC0E  F077         	call	_trans_dato
  1070                           
  1071                           ;main.c: 178: pointer_in++;
  1072  00F59E  4A53               	infsnz	_pointer_in,f,c
  1073  00F5A0  2A54               	incf	_pointer_in+1,f,c
  1074                           
  1075                           ;main.c: 179: }
  1076  00F5A2  0012               	return	
  1077  00F5A4                     l2163:
  1078                           
  1079                           ;main.c: 180: else{
  1080                           ;main.c: 182: trans_dato('\t');
  1081  00F5A4  0E09               	movlw	9
  1082  00F5A6  EC0E  F077         	call	_trans_dato
  1083                           
  1084                           ;main.c: 183: trans_dato('\t');
  1085  00F5AA  0E09               	movlw	9
  1086  00F5AC  EC0E  F077         	call	_trans_dato
  1087                           
  1088                           ;main.c: 184: est=2;
  1089  00F5B0  0E00               	movlw	0
  1090  00F5B2  6E50               	movwf	_est+1,c
  1091  00F5B4  0E02               	movlw	2
  1092  00F5B6  6E4F               	movwf	_est,c
  1093                           
  1094                           ;main.c: 185: }
  1095                           ;main.c: 186: break;
  1096  00F5B8  0012               	return	
  1097  00F5BA                     l2167:
  1098                           
  1099                           ;main.c: 188: pointer_out=printFloat(out_t,3,10);
  1100  00F5BA  C0C4  F030         	movff	_out_t,printFloat@number
  1101  00F5BE  C0C5  F031         	movff	_out_t+1,printFloat@number+1
  1102  00F5C2  C0C6  F032         	movff	_out_t+2,printFloat@number+2
  1103  00F5C6  0E03               	movlw	3
  1104  00F5C8  6E33               	movwf	printFloat@digits,c
  1105  00F5CA  0E0A               	movlw	10
  1106  00F5CC  6E34               	movwf	printFloat@base,c
  1107  00F5CE  EC88  F07C         	call	_printFloat	;wreg free
  1108  00F5D2  C030  F055         	movff	?_printFloat,_pointer_out
  1109  00F5D6  C031  F056         	movff	?_printFloat+1,_pointer_out+1
  1110                           
  1111                           ;main.c: 189: est=3;
  1112  00F5DA  0E00               	movlw	0
  1113  00F5DC  6E50               	movwf	_est+1,c
  1114  00F5DE  0E03               	movlw	3
  1115  00F5E0  6E4F               	movwf	_est,c
  1116                           
  1117                           ;main.c: 190: break;
  1118  00F5E2  0012               	return	
  1119  00F5E4                     l2171:
  1120                           
  1121                           ;main.c: 192: if (*pointer_out!='\r')
  1122  00F5E4  C055  FFD9         	movff	_pointer_out,fsr2l
  1123  00F5E8  C056  FFDA         	movff	_pointer_out+1,fsr2h
  1124  00F5EC  0E0D               	movlw	13
  1125  00F5EE  18DE               	xorwf	postinc2,w,c
  1126  00F5F0  B4D8               	btfsc	status,2,c
  1127  00F5F2  D00A               	goto	l2177
  1128                           
  1129                           ;main.c: 193: trans_dato(*pointer_out++);
  1130  00F5F4  C055  FFD9         	movff	_pointer_out,fsr2l
  1131  00F5F8  C056  FFDA         	movff	_pointer_out+1,fsr2h
  1132  00F5FC  50DF               	movf	indf2,w,c
  1133  00F5FE  EC0E  F077         	call	_trans_dato
  1134  00F602  4A55               	infsnz	_pointer_out,f,c
  1135  00F604  2A56               	incf	_pointer_out+1,f,c
  1136  00F606  0012               	return	
  1137  00F608                     l2177:
  1138                           
  1139                           ;main.c: 194: else{
  1140                           ;main.c: 195: est=0;
  1141  00F608  0E00               	movlw	0
  1142  00F60A  6E50               	movwf	_est+1,c
  1143  00F60C  0E00               	movlw	0
  1144  00F60E  6E4F               	movwf	_est,c
  1145                           
  1146                           ;main.c: 196: trans_dato('\n');
  1147  00F610  0E0A               	movlw	10
  1148  00F612  EC0E  F077         	call	_trans_dato
  1149                           
  1150                           ;main.c: 197: trans_dato('\r');
  1151  00F616  0E0D               	movlw	13
  1152  00F618  EC0E  F077         	call	_trans_dato
  1153                           
  1154                           ;main.c: 198: flag_uart=0;
  1155  00F61C  0E00               	movlw	0
  1156  00F61E  6E58               	movwf	_flag_uart,c
  1157                           
  1158                           ;main.c: 204: }
  1159                           
  1160                           ;main.c: 202: break;
  1161                           
  1162                           ;main.c: 201: default:
  1163                           
  1164                           ;main.c: 199: }
  1165                           ;main.c: 200: break;
  1166  00F620  0012               	return	
  1167  00F622                     l2185:
  1168  00F622  C04F  F042         	movff	_est,??_transmitir
  1169  00F626  C050  F043         	movff	_est+1,??_transmitir+1
  1170                           
  1171                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1172                           ; Switch size 1, requested type "space"
  1173                           ; Number of cases is 1, Range of values is 0 to 0
  1174                           ; switch strategies available:
  1175                           ; Name         Instructions Cycles
  1176                           ; simple_byte            4     3 (average)
  1177                           ;	Chosen strategy is simple_byte
  1178  00F62A  5043               	movf	??_transmitir+1,w,c
  1179  00F62C  0A00               	xorlw	0	; case 0
  1180  00F62E  A4D8               	btfss	status,2,c
  1181  00F630  0012               	return	
  1182                           
  1183                           ; Switch size 1, requested type "space"
  1184                           ; Number of cases is 4, Range of values is 0 to 3
  1185                           ; switch strategies available:
  1186                           ; Name         Instructions Cycles
  1187                           ; simple_byte           13     7 (average)
  1188                           ;	Chosen strategy is simple_byte
  1189  00F632  5042               	movf	??_transmitir,w,c
  1190  00F634  0A00               	xorlw	0	; case 0
  1191  00F636  B4D8               	btfsc	status,2,c
  1192  00F638  D78E               	goto	l2153
  1193  00F63A  0A01               	xorlw	1	; case 1
  1194  00F63C  B4D8               	btfsc	status,2,c
  1195  00F63E  D7A0               	goto	l2157
  1196  00F640  0A03               	xorlw	3	; case 2
  1197  00F642  B4D8               	btfsc	status,2,c
  1198  00F644  D7BA               	goto	l2167
  1199  00F646  0A01               	xorlw	1	; case 3
  1200  00F648  A4D8               	btfss	status,2,c
  1201  00F64A  0012               	return	
  1202  00F64C  D7CB               	goto	l2171
  1203  00F64E                     __end_of_transmitir:
  1204                           	opt stack 0
  1205                           tblptru	equ	0xFF8
  1206                           tblptrh	equ	0xFF7
  1207                           tblptrl	equ	0xFF6
  1208                           tablat	equ	0xFF5
  1209                           postinc0	equ	0xFEE
  1210                           wreg	equ	0xFE8
  1211                           postdec1	equ	0xFE5
  1212                           fsr1h	equ	0xFE2
  1213                           fsr1l	equ	0xFE1
  1214                           indf2	equ	0xFDF
  1215                           postinc2	equ	0xFDE
  1216                           fsr2h	equ	0xFDA
  1217                           fsr2l	equ	0xFD9
  1218                           status	equ	0xFD8
  1219                           
  1220 ;; *************** function _printFloat *****************
  1221 ;; Defined at:
  1222 ;;		line 44 in file "main.c"
  1223 ;; Parameters:    Size  Location     Type
  1224 ;;  number          3   47[COMRAM] float 
  1225 ;;  digits          1   50[COMRAM] unsigned char 
  1226 ;;  base            1   51[COMRAM] unsigned char 
  1227 ;; Auto vars:     Size  Location     Type
  1228 ;;  remainder       3   58[COMRAM] float 
  1229 ;;  rounding        3   54[COMRAM] float 
  1230 ;;  i               2   63[COMRAM] unsigned int 
  1231 ;;  int_part        2   61[COMRAM] unsigned int 
  1232 ;;  toPrint         1   57[COMRAM] unsigned char 
  1233 ;; Return value:  Size  Location     Type
  1234 ;;                  2   47[COMRAM] PTR unsigned char 
  1235 ;; Registers used:
  1236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1242 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1243 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1244 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1245 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1246 ;;Total ram usage:       18 bytes
  1247 ;; Hardware stack levels used:    1
  1248 ;; Hardware stack levels required when called:    3
  1249 ;; This function calls:
  1250 ;;		___ftadd
  1251 ;;		___ftdiv
  1252 ;;		___ftmul
  1253 ;;		___ftneg
  1254 ;;		___ftsub
  1255 ;;		___fttol
  1256 ;;		___lbtoft
  1257 ;;		___lwdiv
  1258 ;;		___lwmod
  1259 ;;		___lwtoft
  1260 ;; This function is called by:
  1261 ;;		_transmitir
  1262 ;; This function uses a non-reentrant model
  1263 ;;
  1264                           
  1265                           	psect	text2
  1266  00F910                     __ptext2:
  1267                           	opt stack 0
  1268  00F910                     _printFloat:
  1269                           	opt stack 26
  1270                           
  1271                           ;main.c: 46: u8 toPrint;
  1272                           ;main.c: 47: u16 int_part;
  1273                           ;main.c: 48: float rounding, remainder;
  1274                           ;main.c: 49: static char buf[8 * sizeof(long)];
  1275                           ;main.c: 50: u16 i = 0;
  1276                           
  1277                           ;incstack = 0
  1278  00F910  0E00               	movlw	0
  1279  00F912  6E41               	movwf	printFloat@i+1,c
  1280  00F914  0E00               	movlw	0
  1281  00F916  6E40               	movwf	printFloat@i,c
  1282                           
  1283                           ;main.c: 54: if (number < 0.0)
  1284  00F918  AE32               	btfss	printFloat@number+2,7,c
  1285  00F91A  D00E               	goto	l1939
  1286                           
  1287                           ;main.c: 55: {
  1288                           ;main.c: 57: number = -number;
  1289  00F91C  C030  F01B         	movff	printFloat@number,___ftneg@f1
  1290  00F920  C031  F01C         	movff	printFloat@number+1,___ftneg@f1+1
  1291  00F924  C032  F01D         	movff	printFloat@number+2,___ftneg@f1+2
  1292  00F928  EC6D  F077         	call	___ftneg	;wreg free
  1293  00F92C  C01B  F030         	movff	?___ftneg,printFloat@number
  1294  00F930  C01C  F031         	movff	?___ftneg+1,printFloat@number+1
  1295  00F934  C01D  F032         	movff	?___ftneg+2,printFloat@number+2
  1296  00F938                     l1939:
  1297                           
  1298                           ;main.c: 58: }
  1299                           ;main.c: 61: rounding = 0.5;
  1300  00F938  0E00               	movlw	0
  1301  00F93A  6E37               	movwf	printFloat@rounding,c
  1302  00F93C  0E00               	movlw	0
  1303  00F93E  6E38               	movwf	printFloat@rounding+1,c
  1304  00F940  0E3F               	movlw	63
  1305  00F942  6E39               	movwf	printFloat@rounding+2,c
  1306                           
  1307                           ;main.c: 62: for (i=0; i<digits; ++i)
  1308  00F944  0E00               	movlw	0
  1309  00F946  6E41               	movwf	printFloat@i+1,c
  1310  00F948  0E00               	movlw	0
  1311  00F94A  6E40               	movwf	printFloat@i,c
  1312  00F94C  D016               	goto	l1947
  1313  00F94E                     l1943:
  1314                           
  1315                           ;main.c: 63: rounding /= 10.0;
  1316  00F94E  C037  F009         	movff	printFloat@rounding,___ftdiv@f1
  1317  00F952  C038  F00A         	movff	printFloat@rounding+1,___ftdiv@f1+1
  1318  00F956  C039  F00B         	movff	printFloat@rounding+2,___ftdiv@f1+2
  1319  00F95A  0E00               	movlw	0
  1320  00F95C  6E0C               	movwf	___ftdiv@f2,c
  1321  00F95E  0E20               	movlw	32
  1322  00F960  6E0D               	movwf	___ftdiv@f2+1,c
  1323  00F962  0E41               	movlw	65
  1324  00F964  6E0E               	movwf	___ftdiv@f2+2,c
  1325  00F966  EC43  F079         	call	___ftdiv	;wreg free
  1326  00F96A  C009  F037         	movff	?___ftdiv,printFloat@rounding
  1327  00F96E  C00A  F038         	movff	?___ftdiv+1,printFloat@rounding+1
  1328  00F972  C00B  F039         	movff	?___ftdiv+2,printFloat@rounding+2
  1329  00F976  4A40               	infsnz	printFloat@i,f,c
  1330  00F978  2A41               	incf	printFloat@i+1,f,c
  1331  00F97A                     l1947:
  1332  00F97A  5033               	movf	printFloat@digits,w,c
  1333  00F97C  6E35               	movwf	??_printFloat& (0+255),c
  1334  00F97E  6A36               	clrf	(??_printFloat+1)& (0+255),c
  1335  00F980  5035               	movf	??_printFloat,w,c
  1336  00F982  5C40               	subwf	printFloat@i,w,c
  1337  00F984  5036               	movf	??_printFloat+1,w,c
  1338  00F986  5841               	subwfb	printFloat@i+1,w,c
  1339  00F988  A0D8               	btfss	status,0,c
  1340  00F98A  D7E1               	goto	l1943
  1341                           
  1342                           ;main.c: 65: number += rounding;
  1343  00F98C  C030  F01E         	movff	printFloat@number,___ftadd@f1
  1344  00F990  C031  F01F         	movff	printFloat@number+1,___ftadd@f1+1
  1345  00F994  C032  F020         	movff	printFloat@number+2,___ftadd@f1+2
  1346  00F998  C037  F021         	movff	printFloat@rounding,___ftadd@f2
  1347  00F99C  C038  F022         	movff	printFloat@rounding+1,___ftadd@f2+1
  1348  00F9A0  C039  F023         	movff	printFloat@rounding+2,___ftadd@f2+2
  1349  00F9A4  ECB2  F07B         	call	___ftadd	;wreg free
  1350  00F9A8  C01E  F030         	movff	?___ftadd,printFloat@number
  1351  00F9AC  C01F  F031         	movff	?___ftadd+1,printFloat@number+1
  1352  00F9B0  C020  F032         	movff	?___ftadd+2,printFloat@number+2
  1353                           
  1354                           ;main.c: 68: int_part = (u16)number;
  1355  00F9B4  C030  F00B         	movff	printFloat@number,___fttol@f1
  1356  00F9B8  C031  F00C         	movff	printFloat@number+1,___fttol@f1+1
  1357  00F9BC  C032  F00D         	movff	printFloat@number+2,___fttol@f1+2
  1358  00F9C0  EC30  F07A         	call	___fttol	;wreg free
  1359  00F9C4  C00B  F03E         	movff	?___fttol,printFloat@int_part
  1360  00F9C8  C00C  F03F         	movff	?___fttol+1,printFloat@int_part+1
  1361                           
  1362                           ;main.c: 69: remainder = number - (float)int_part;
  1363  00F9CC  C03E  F009         	movff	printFloat@int_part,___lwtoft@c
  1364  00F9D0  C03F  F00A         	movff	printFloat@int_part+1,___lwtoft@c+1
  1365  00F9D4  EC7F  F077         	call	___lwtoft	;wreg free
  1366  00F9D8  C009  F01B         	movff	?___lwtoft,___ftneg@f1
  1367  00F9DC  C00A  F01C         	movff	?___lwtoft+1,___ftneg@f1+1
  1368  00F9E0  C00B  F01D         	movff	?___lwtoft+2,___ftneg@f1+2
  1369  00F9E4  EC6D  F077         	call	___ftneg	;wreg free
  1370  00F9E8  C01B  F01E         	movff	?___ftneg,___ftadd@f1
  1371  00F9EC  C01C  F01F         	movff	?___ftneg+1,___ftadd@f1+1
  1372  00F9F0  C01D  F020         	movff	?___ftneg+2,___ftadd@f1+2
  1373  00F9F4  C030  F021         	movff	printFloat@number,___ftadd@f2
  1374  00F9F8  C031  F022         	movff	printFloat@number+1,___ftadd@f2+1
  1375  00F9FC  C032  F023         	movff	printFloat@number+2,___ftadd@f2+2
  1376  00FA00  ECB2  F07B         	call	___ftadd	;wreg free
  1377  00FA04  C01E  F03B         	movff	?___ftadd,printFloat@remainder
  1378  00FA08  C01F  F03C         	movff	?___ftadd+1,printFloat@remainder+1
  1379  00FA0C  C020  F03D         	movff	?___ftadd+2,printFloat@remainder+2
  1380                           
  1381                           ;main.c: 73: if (int_part == 0)
  1382  00FA10  503E               	movf	printFloat@int_part,w,c
  1383  00FA12  103F               	iorwf	printFloat@int_part+1,w,c
  1384  00FA14  A4D8               	btfss	status,2,c
  1385  00FA16  D02C               	goto	l1963
  1386                           
  1387                           ;main.c: 74: {
  1388                           ;main.c: 75: buf[i++]='0';
  1389  00FA18  0ECA               	movlw	low printFloat@buf
  1390  00FA1A  2440               	addwf	printFloat@i,w,c
  1391  00FA1C  6ED9               	movwf	fsr2l,c
  1392  00FA1E  0E00               	movlw	high printFloat@buf
  1393  00FA20  2041               	addwfc	printFloat@i+1,w,c
  1394  00FA22  6EDA               	movwf	fsr2h,c
  1395  00FA24  0E30               	movlw	48
  1396  00FA26  6EDF               	movwf	indf2,c
  1397  00FA28  4A40               	infsnz	printFloat@i,f,c
  1398  00FA2A  2A41               	incf	printFloat@i+1,f,c
  1399                           
  1400                           ;main.c: 76: }
  1401                           ;main.c: 78: while (int_part > 0)
  1402  00FA2C  D021               	goto	l1963
  1403  00FA2E                     l1957:
  1404                           
  1405                           ;main.c: 79: {
  1406                           ;main.c: 81: buf[i++] =((char) (int_part % base)+0x30);
  1407  00FA2E  0ECA               	movlw	low printFloat@buf
  1408  00FA30  2440               	addwf	printFloat@i,w,c
  1409  00FA32  6ED9               	movwf	fsr2l,c
  1410  00FA34  0E00               	movlw	high printFloat@buf
  1411  00FA36  2041               	addwfc	printFloat@i+1,w,c
  1412  00FA38  6EDA               	movwf	fsr2h,c
  1413  00FA3A  C03E  F001         	movff	printFloat@int_part,___lwmod@dividend
  1414  00FA3E  C03F  F002         	movff	printFloat@int_part+1,___lwmod@dividend+1
  1415  00FA42  C034  F003         	movff	printFloat@base,___lwmod@divisor
  1416  00FA46  6A04               	clrf	___lwmod@divisor+1,c
  1417  00FA48  EC35  F078         	call	___lwmod	;wreg free
  1418  00FA4C  5001               	movf	?___lwmod,w,c
  1419  00FA4E  0F30               	addlw	48
  1420  00FA50  6EDF               	movwf	indf2,c
  1421  00FA52  4A40               	infsnz	printFloat@i,f,c
  1422  00FA54  2A41               	incf	printFloat@i+1,f,c
  1423                           
  1424                           ;main.c: 82: int_part /= base;
  1425  00FA56  C03E  F001         	movff	printFloat@int_part,___lwdiv@dividend
  1426  00FA5A  C03F  F002         	movff	printFloat@int_part+1,___lwdiv@dividend+1
  1427  00FA5E  C034  F003         	movff	printFloat@base,___lwdiv@divisor
  1428  00FA62  6A04               	clrf	___lwdiv@divisor+1,c
  1429  00FA64  EC56  F078         	call	___lwdiv	;wreg free
  1430  00FA68  C001  F03E         	movff	?___lwdiv,printFloat@int_part
  1431  00FA6C  C002  F03F         	movff	?___lwdiv+1,printFloat@int_part+1
  1432  00FA70                     l1963:
  1433  00FA70  503E               	movf	printFloat@int_part,w,c
  1434  00FA72  103F               	iorwf	printFloat@int_part+1,w,c
  1435  00FA74  A4D8               	btfss	status,2,c
  1436  00FA76  D7DB               	goto	l1957
  1437                           
  1438                           ;main.c: 83: }
  1439                           ;main.c: 84: buf[i++]='.';
  1440  00FA78  0ECA               	movlw	low printFloat@buf
  1441  00FA7A  2440               	addwf	printFloat@i,w,c
  1442  00FA7C  6ED9               	movwf	fsr2l,c
  1443  00FA7E  0E00               	movlw	high printFloat@buf
  1444  00FA80  2041               	addwfc	printFloat@i+1,w,c
  1445  00FA82  6EDA               	movwf	fsr2h,c
  1446  00FA84  0E2E               	movlw	46
  1447  00FA86  6EDF               	movwf	indf2,c
  1448  00FA88  4A40               	infsnz	printFloat@i,f,c
  1449  00FA8A  2A41               	incf	printFloat@i+1,f,c
  1450                           
  1451                           ;main.c: 92: while (digits-- > 0)
  1452  00FA8C  D040               	goto	l1977
  1453  00FA8E                     l1969:
  1454                           
  1455                           ;main.c: 93: {
  1456                           ;main.c: 94: remainder *= 10.0;
  1457  00FA8E  C03B  F00C         	movff	printFloat@remainder,___ftmul@f1
  1458  00FA92  C03C  F00D         	movff	printFloat@remainder+1,___ftmul@f1+1
  1459  00FA96  C03D  F00E         	movff	printFloat@remainder+2,___ftmul@f1+2
  1460  00FA9A  0E00               	movlw	0
  1461  00FA9C  6E0F               	movwf	___ftmul@f2,c
  1462  00FA9E  0E20               	movlw	32
  1463  00FAA0  6E10               	movwf	___ftmul@f2+1,c
  1464  00FAA2  0E41               	movlw	65
  1465  00FAA4  6E11               	movwf	___ftmul@f2+2,c
  1466  00FAA6  ECB6  F079         	call	___ftmul	;wreg free
  1467  00FAAA  C00C  F03B         	movff	?___ftmul,printFloat@remainder
  1468  00FAAE  C00D  F03C         	movff	?___ftmul+1,printFloat@remainder+1
  1469  00FAB2  C00E  F03D         	movff	?___ftmul+2,printFloat@remainder+2
  1470                           
  1471                           ;main.c: 95: toPrint = (unsigned int)remainder;
  1472  00FAB6  C03B  F00B         	movff	printFloat@remainder,___fttol@f1
  1473  00FABA  C03C  F00C         	movff	printFloat@remainder+1,___fttol@f1+1
  1474  00FABE  C03D  F00D         	movff	printFloat@remainder+2,___fttol@f1+2
  1475  00FAC2  EC30  F07A         	call	___fttol	;wreg free
  1476  00FAC6  500B               	movf	?___fttol,w,c
  1477  00FAC8  6E3A               	movwf	printFloat@toPrint,c
  1478                           
  1479                           ;main.c: 96: buf[i++] =((char) (toPrint)+0x30);
  1480  00FACA  0ECA               	movlw	low printFloat@buf
  1481  00FACC  2440               	addwf	printFloat@i,w,c
  1482  00FACE  6ED9               	movwf	fsr2l,c
  1483  00FAD0  0E00               	movlw	high printFloat@buf
  1484  00FAD2  2041               	addwfc	printFloat@i+1,w,c
  1485  00FAD4  6EDA               	movwf	fsr2h,c
  1486  00FAD6  503A               	movf	printFloat@toPrint,w,c
  1487  00FAD8  0F30               	addlw	48
  1488  00FADA  6EDF               	movwf	indf2,c
  1489  00FADC  4A40               	infsnz	printFloat@i,f,c
  1490  00FADE  2A41               	incf	printFloat@i+1,f,c
  1491                           
  1492                           ;main.c: 97: remainder -= toPrint;
  1493  00FAE0  C03B  F02A         	movff	printFloat@remainder,___ftsub@f1
  1494  00FAE4  C03C  F02B         	movff	printFloat@remainder+1,___ftsub@f1+1
  1495  00FAE8  C03D  F02C         	movff	printFloat@remainder+2,___ftsub@f1+2
  1496  00FAEC  503A               	movf	printFloat@toPrint,w,c
  1497  00FAEE  ECA3  F077         	call	___lbtoft
  1498  00FAF2  C009  F02D         	movff	?___lbtoft,___ftsub@f2
  1499  00FAF6  C00A  F02E         	movff	?___lbtoft+1,___ftsub@f2+1
  1500  00FAFA  C00B  F02F         	movff	?___lbtoft+2,___ftsub@f2+2
  1501  00FAFE  EC15  F078         	call	___ftsub	;wreg free
  1502  00FB02  C02A  F03B         	movff	?___ftsub,printFloat@remainder
  1503  00FB06  C02B  F03C         	movff	?___ftsub+1,printFloat@remainder+1
  1504  00FB0A  C02C  F03D         	movff	?___ftsub+2,printFloat@remainder+2
  1505  00FB0E                     l1977:
  1506  00FB0E  0633               	decf	printFloat@digits,f,c
  1507  00FB10  2833               	incf	printFloat@digits,w,c
  1508  00FB12  A4D8               	btfss	status,2,c
  1509  00FB14  D7BC               	goto	l1969
  1510                           
  1511                           ;main.c: 98: }
  1512                           ;main.c: 99: buf[i++]='\r';
  1513  00FB16  0ECA               	movlw	low printFloat@buf
  1514  00FB18  2440               	addwf	printFloat@i,w,c
  1515  00FB1A  6ED9               	movwf	fsr2l,c
  1516  00FB1C  0E00               	movlw	high printFloat@buf
  1517  00FB1E  2041               	addwfc	printFloat@i+1,w,c
  1518  00FB20  6EDA               	movwf	fsr2h,c
  1519  00FB22  0E0D               	movlw	13
  1520  00FB24  6EDF               	movwf	indf2,c
  1521  00FB26  4A40               	infsnz	printFloat@i,f,c
  1522  00FB28  2A41               	incf	printFloat@i+1,f,c
  1523                           
  1524                           ;main.c: 100: return (buf);
  1525  00FB2A  0ECA               	movlw	low printFloat@buf
  1526  00FB2C  6E30               	movwf	?_printFloat,c
  1527  00FB2E  0E00               	movlw	high printFloat@buf
  1528  00FB30  6E31               	movwf	?_printFloat+1,c
  1529  00FB32  0012               	return	
  1530  00FB34                     __end_of_printFloat:
  1531                           	opt stack 0
  1532                           tblptru	equ	0xFF8
  1533                           tblptrh	equ	0xFF7
  1534                           tblptrl	equ	0xFF6
  1535                           tablat	equ	0xFF5
  1536                           postinc0	equ	0xFEE
  1537                           wreg	equ	0xFE8
  1538                           postdec1	equ	0xFE5
  1539                           fsr1h	equ	0xFE2
  1540                           fsr1l	equ	0xFE1
  1541                           indf2	equ	0xFDF
  1542                           postinc2	equ	0xFDE
  1543                           fsr2h	equ	0xFDA
  1544                           fsr2l	equ	0xFD9
  1545                           status	equ	0xFD8
  1546                           
  1547 ;; *************** function ___lwmod *****************
  1548 ;; Defined at:
  1549 ;;		line 8 in file "/opt/microchip/xc8/v1.35/sources/common/lwmod.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;  dividend        2    0[COMRAM] unsigned int 
  1552 ;;  divisor         2    2[COMRAM] unsigned int 
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;  counter         1    4[COMRAM] unsigned char 
  1555 ;; Return value:  Size  Location     Type
  1556 ;;                  2    0[COMRAM] unsigned int 
  1557 ;; Registers used:
  1558 ;;		wreg, status,2, status,0
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1564 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1565 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1567 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1568 ;;Total ram usage:        5 bytes
  1569 ;; Hardware stack levels used:    1
  1570 ;; This function calls:
  1571 ;;		Nothing
  1572 ;; This function is called by:
  1573 ;;		_printFloat
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           
  1577                           	psect	text3
  1578  00F06A                     __ptext3:
  1579                           	opt stack 0
  1580  00F06A                     ___lwmod:
  1581                           	opt stack 28
  1582                           
  1583                           ;incstack = 0
  1584  00F06A  5003               	movf	___lwmod@divisor,w,c
  1585  00F06C  1004               	iorwf	___lwmod@divisor+1,w,c
  1586  00F06E  B4D8               	btfsc	status,2,c
  1587  00F070  D018               	goto	l738
  1588  00F072  0E01               	movlw	1
  1589  00F074  6E05               	movwf	___lwmod@counter,c
  1590  00F076  D004               	goto	l1919
  1591  00F078                     l1917:
  1592  00F078  90D8               	bcf	status,0,c
  1593  00F07A  3603               	rlcf	___lwmod@divisor,f,c
  1594  00F07C  3604               	rlcf	___lwmod@divisor+1,f,c
  1595  00F07E  2A05               	incf	___lwmod@counter,f,c
  1596  00F080                     l1919:
  1597  00F080  AE04               	btfss	___lwmod@divisor+1,7,c
  1598  00F082  D7FA               	goto	l1917
  1599  00F084                     l1921:
  1600  00F084  5003               	movf	___lwmod@divisor,w,c
  1601  00F086  5C01               	subwf	___lwmod@dividend,w,c
  1602  00F088  5004               	movf	___lwmod@divisor+1,w,c
  1603  00F08A  5802               	subwfb	___lwmod@dividend+1,w,c
  1604  00F08C  A0D8               	btfss	status,0,c
  1605  00F08E  D004               	goto	l1925
  1606  00F090  5003               	movf	___lwmod@divisor,w,c
  1607  00F092  5E01               	subwf	___lwmod@dividend,f,c
  1608  00F094  5004               	movf	___lwmod@divisor+1,w,c
  1609  00F096  5A02               	subwfb	___lwmod@dividend+1,f,c
  1610  00F098                     l1925:
  1611  00F098  90D8               	bcf	status,0,c
  1612  00F09A  3204               	rrcf	___lwmod@divisor+1,f,c
  1613  00F09C  3203               	rrcf	___lwmod@divisor,f,c
  1614  00F09E  2E05               	decfsz	___lwmod@counter,f,c
  1615  00F0A0  D7F1               	goto	l1921
  1616  00F0A2                     l738:
  1617  00F0A2  C001  F001         	movff	___lwmod@dividend,?___lwmod
  1618  00F0A6  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  1619  00F0AA  0012               	return		;funcret
  1620  00F0AC                     __end_of___lwmod:
  1621                           	opt stack 0
  1622                           tblptru	equ	0xFF8
  1623                           tblptrh	equ	0xFF7
  1624                           tblptrl	equ	0xFF6
  1625                           tablat	equ	0xFF5
  1626                           postinc0	equ	0xFEE
  1627                           wreg	equ	0xFE8
  1628                           postdec1	equ	0xFE5
  1629                           fsr1h	equ	0xFE2
  1630                           fsr1l	equ	0xFE1
  1631                           indf2	equ	0xFDF
  1632                           postinc2	equ	0xFDE
  1633                           fsr2h	equ	0xFDA
  1634                           fsr2l	equ	0xFD9
  1635                           status	equ	0xFD8
  1636                           
  1637 ;; *************** function ___lwdiv *****************
  1638 ;; Defined at:
  1639 ;;		line 8 in file "/opt/microchip/xc8/v1.35/sources/common/lwdiv.c"
  1640 ;; Parameters:    Size  Location     Type
  1641 ;;  dividend        2    0[COMRAM] unsigned int 
  1642 ;;  divisor         2    2[COMRAM] unsigned int 
  1643 ;; Auto vars:     Size  Location     Type
  1644 ;;  quotient        2    4[COMRAM] unsigned int 
  1645 ;;  counter         1    6[COMRAM] unsigned char 
  1646 ;; Return value:  Size  Location     Type
  1647 ;;                  2    0[COMRAM] unsigned int 
  1648 ;; Registers used:
  1649 ;;		wreg, status,2, status,0
  1650 ;; Tracked objects:
  1651 ;;		On entry : 0/0
  1652 ;;		On exit  : 0/0
  1653 ;;		Unchanged: 0/0
  1654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1655 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1656 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1658 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1659 ;;Total ram usage:        7 bytes
  1660 ;; Hardware stack levels used:    1
  1661 ;; This function calls:
  1662 ;;		Nothing
  1663 ;; This function is called by:
  1664 ;;		_printFloat
  1665 ;; This function uses a non-reentrant model
  1666 ;;
  1667                           
  1668                           	psect	text4
  1669  00F0AC                     __ptext4:
  1670                           	opt stack 0
  1671  00F0AC                     ___lwdiv:
  1672                           	opt stack 28
  1673                           
  1674                           ;incstack = 0
  1675  00F0AC  0E00               	movlw	0
  1676  00F0AE  6E06               	movwf	___lwdiv@quotient+1,c
  1677  00F0B0  0E00               	movlw	0
  1678  00F0B2  6E05               	movwf	___lwdiv@quotient,c
  1679  00F0B4  5003               	movf	___lwdiv@divisor,w,c
  1680  00F0B6  1004               	iorwf	___lwdiv@divisor+1,w,c
  1681  00F0B8  B4D8               	btfsc	status,2,c
  1682  00F0BA  D01C               	goto	l728
  1683  00F0BC  0E01               	movlw	1
  1684  00F0BE  6E07               	movwf	___lwdiv@counter,c
  1685  00F0C0  D004               	goto	l1899
  1686  00F0C2                     l1897:
  1687  00F0C2  90D8               	bcf	status,0,c
  1688  00F0C4  3603               	rlcf	___lwdiv@divisor,f,c
  1689  00F0C6  3604               	rlcf	___lwdiv@divisor+1,f,c
  1690  00F0C8  2A07               	incf	___lwdiv@counter,f,c
  1691  00F0CA                     l1899:
  1692  00F0CA  AE04               	btfss	___lwdiv@divisor+1,7,c
  1693  00F0CC  D7FA               	goto	l1897
  1694  00F0CE                     l1901:
  1695  00F0CE  90D8               	bcf	status,0,c
  1696  00F0D0  3605               	rlcf	___lwdiv@quotient,f,c
  1697  00F0D2  3606               	rlcf	___lwdiv@quotient+1,f,c
  1698  00F0D4  5003               	movf	___lwdiv@divisor,w,c
  1699  00F0D6  5C01               	subwf	___lwdiv@dividend,w,c
  1700  00F0D8  5004               	movf	___lwdiv@divisor+1,w,c
  1701  00F0DA  5802               	subwfb	___lwdiv@dividend+1,w,c
  1702  00F0DC  A0D8               	btfss	status,0,c
  1703  00F0DE  D005               	goto	l1909
  1704  00F0E0  5003               	movf	___lwdiv@divisor,w,c
  1705  00F0E2  5E01               	subwf	___lwdiv@dividend,f,c
  1706  00F0E4  5004               	movf	___lwdiv@divisor+1,w,c
  1707  00F0E6  5A02               	subwfb	___lwdiv@dividend+1,f,c
  1708  00F0E8  8005               	bsf	___lwdiv@quotient,0,c
  1709  00F0EA                     l1909:
  1710  00F0EA  90D8               	bcf	status,0,c
  1711  00F0EC  3204               	rrcf	___lwdiv@divisor+1,f,c
  1712  00F0EE  3203               	rrcf	___lwdiv@divisor,f,c
  1713  00F0F0  2E07               	decfsz	___lwdiv@counter,f,c
  1714  00F0F2  D7ED               	goto	l1901
  1715  00F0F4                     l728:
  1716  00F0F4  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1717  00F0F8  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1718  00F0FC  0012               	return		;funcret
  1719  00F0FE                     __end_of___lwdiv:
  1720                           	opt stack 0
  1721                           tblptru	equ	0xFF8
  1722                           tblptrh	equ	0xFF7
  1723                           tblptrl	equ	0xFF6
  1724                           tablat	equ	0xFF5
  1725                           postinc0	equ	0xFEE
  1726                           wreg	equ	0xFE8
  1727                           postdec1	equ	0xFE5
  1728                           fsr1h	equ	0xFE2
  1729                           fsr1l	equ	0xFE1
  1730                           indf2	equ	0xFDF
  1731                           postinc2	equ	0xFDE
  1732                           fsr2h	equ	0xFDA
  1733                           fsr2l	equ	0xFD9
  1734                           status	equ	0xFD8
  1735                           
  1736 ;; *************** function ___lbtoft *****************
  1737 ;; Defined at:
  1738 ;;		line 27 in file "/opt/microchip/xc8/v1.35/sources/common/lbtoft.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;  c               1    wreg     unsigned char 
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;  c               1   11[COMRAM] unsigned char 
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  3    8[COMRAM] float 
  1745 ;; Registers used:
  1746 ;;		wreg, status,2, status,0, cstack
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1752 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1753 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1755 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1756 ;;Total ram usage:        4 bytes
  1757 ;; Hardware stack levels used:    1
  1758 ;; Hardware stack levels required when called:    1
  1759 ;; This function calls:
  1760 ;;		___ftpack
  1761 ;; This function is called by:
  1762 ;;		_printFloat
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766                           	psect	text5
  1767  00EF46                     __ptext5:
  1768                           	opt stack 0
  1769  00EF46                     ___lbtoft:
  1770                           	opt stack 27
  1771                           
  1772                           ;incstack = 0
  1773                           ;___lbtoft@c stored from wreg
  1774  00EF46  6E0C               	movwf	___lbtoft@c,c
  1775  00EF48  500C               	movf	___lbtoft@c,w,c
  1776  00EF4A  6E01               	movwf	___ftpack@arg,c
  1777  00EF4C  6A02               	clrf	___ftpack@arg+1,c
  1778  00EF4E  6A03               	clrf	___ftpack@arg+2,c
  1779  00EF50  0E8E               	movlw	142
  1780  00EF52  6E04               	movwf	___ftpack@exp,c
  1781  00EF54  0E00               	movlw	0
  1782  00EF56  6E05               	movwf	___ftpack@sign,c
  1783  00EF58  ECEC  F078         	call	___ftpack	;wreg free
  1784  00EF5C  C001  F009         	movff	?___ftpack,?___lbtoft
  1785  00EF60  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
  1786  00EF64  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
  1787  00EF68  0012               	return	
  1788  00EF6A                     __end_of___lbtoft:
  1789                           	opt stack 0
  1790                           tblptru	equ	0xFF8
  1791                           tblptrh	equ	0xFF7
  1792                           tblptrl	equ	0xFF6
  1793                           tablat	equ	0xFF5
  1794                           postinc0	equ	0xFEE
  1795                           wreg	equ	0xFE8
  1796                           postdec1	equ	0xFE5
  1797                           fsr1h	equ	0xFE2
  1798                           fsr1l	equ	0xFE1
  1799                           indf2	equ	0xFDF
  1800                           postinc2	equ	0xFDE
  1801                           fsr2h	equ	0xFDA
  1802                           fsr2l	equ	0xFD9
  1803                           status	equ	0xFD8
  1804                           
  1805 ;; *************** function ___ftsub *****************
  1806 ;; Defined at:
  1807 ;;		line 20 in file "/opt/microchip/xc8/v1.35/sources/common/ftsub.c"
  1808 ;; Parameters:    Size  Location     Type
  1809 ;;  f1              3   41[COMRAM] float 
  1810 ;;  f2              3   44[COMRAM] float 
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;		None
  1813 ;; Return value:  Size  Location     Type
  1814 ;;                  3   41[COMRAM] float 
  1815 ;; Registers used:
  1816 ;;		wreg, status,2, status,0, cstack
  1817 ;; Tracked objects:
  1818 ;;		On entry : 0/0
  1819 ;;		On exit  : 0/0
  1820 ;;		Unchanged: 0/0
  1821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1822 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1825 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1826 ;;Total ram usage:        6 bytes
  1827 ;; Hardware stack levels used:    1
  1828 ;; Hardware stack levels required when called:    2
  1829 ;; This function calls:
  1830 ;;		___ftadd
  1831 ;; This function is called by:
  1832 ;;		_printFloat
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835                           
  1836                           	psect	text6
  1837  00F02A                     __ptext6:
  1838                           	opt stack 0
  1839  00F02A                     ___ftsub:
  1840                           	opt stack 26
  1841                           
  1842                           ;incstack = 0
  1843  00F02A  502D               	movf	___ftsub@f2,w,c
  1844  00F02C  102E               	iorwf	___ftsub@f2+1,w,c
  1845  00F02E  102F               	iorwf	___ftsub@f2+2,w,c
  1846  00F030  B4D8               	btfsc	status,2,c
  1847  00F032  D006               	goto	l1833
  1848  00F034  0E00               	movlw	0
  1849  00F036  1A2D               	xorwf	___ftsub@f2,f,c
  1850  00F038  0E00               	movlw	0
  1851  00F03A  1A2E               	xorwf	___ftsub@f2+1,f,c
  1852  00F03C  0E80               	movlw	128
  1853  00F03E  1A2F               	xorwf	___ftsub@f2+2,f,c
  1854  00F040                     l1833:
  1855  00F040  C02A  F01E         	movff	___ftsub@f1,___ftadd@f1
  1856  00F044  C02B  F01F         	movff	___ftsub@f1+1,___ftadd@f1+1
  1857  00F048  C02C  F020         	movff	___ftsub@f1+2,___ftadd@f1+2
  1858  00F04C  C02D  F021         	movff	___ftsub@f2,___ftadd@f2
  1859  00F050  C02E  F022         	movff	___ftsub@f2+1,___ftadd@f2+1
  1860  00F054  C02F  F023         	movff	___ftsub@f2+2,___ftadd@f2+2
  1861  00F058  ECB2  F07B         	call	___ftadd	;wreg free
  1862  00F05C  C01E  F02A         	movff	?___ftadd,?___ftsub
  1863  00F060  C01F  F02B         	movff	?___ftadd+1,?___ftsub+1
  1864  00F064  C020  F02C         	movff	?___ftadd+2,?___ftsub+2
  1865  00F068  0012               	return	
  1866  00F06A                     __end_of___ftsub:
  1867                           	opt stack 0
  1868                           tblptru	equ	0xFF8
  1869                           tblptrh	equ	0xFF7
  1870                           tblptrl	equ	0xFF6
  1871                           tablat	equ	0xFF5
  1872                           postinc0	equ	0xFEE
  1873                           wreg	equ	0xFE8
  1874                           postdec1	equ	0xFE5
  1875                           fsr1h	equ	0xFE2
  1876                           fsr1l	equ	0xFE1
  1877                           indf2	equ	0xFDF
  1878                           postinc2	equ	0xFDE
  1879                           fsr2h	equ	0xFDA
  1880                           fsr2l	equ	0xFD9
  1881                           status	equ	0xFD8
  1882                           
  1883 ;; *************** function ___ftdiv *****************
  1884 ;; Defined at:
  1885 ;;		line 54 in file "/opt/microchip/xc8/v1.35/sources/common/ftdiv.c"
  1886 ;; Parameters:    Size  Location     Type
  1887 ;;  f1              3    8[COMRAM] float 
  1888 ;;  f2              3   11[COMRAM] float 
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;  f3              3   18[COMRAM] float 
  1891 ;;  sign            1   22[COMRAM] unsigned char 
  1892 ;;  exp             1   21[COMRAM] unsigned char 
  1893 ;;  cntr            1   17[COMRAM] unsigned char 
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  3    8[COMRAM] float 
  1896 ;; Registers used:
  1897 ;;		wreg, status,2, status,0, cstack
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1903 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1904 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1905 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1906 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1907 ;;Total ram usage:       15 bytes
  1908 ;; Hardware stack levels used:    1
  1909 ;; Hardware stack levels required when called:    1
  1910 ;; This function calls:
  1911 ;;		___ftpack
  1912 ;; This function is called by:
  1913 ;;		_printFloat
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           
  1917                           	psect	text7
  1918  00F286                     __ptext7:
  1919                           	opt stack 0
  1920  00F286                     ___ftdiv:
  1921                           	opt stack 27
  1922                           
  1923                           ;incstack = 0
  1924  00F286  C00B  F00F         	movff	___ftdiv@f1+2,??___ftdiv
  1925  00F28A  6A10               	clrf	(??___ftdiv+1)& (0+255),c
  1926  00F28C  6A11               	clrf	(??___ftdiv+2)& (0+255),c
  1927  00F28E  340A               	rlcf	___ftdiv@f1+1,w,c
  1928  00F290  360F               	rlcf	??___ftdiv& (0+255),f,c
  1929  00F292  E301               	bnc	u1111
  1930  00F294  8010               	bsf	(??___ftdiv+1)& (0+255),0,c
  1931  00F296                     u1111:
  1932  00F296  500F               	movf	??___ftdiv,w,c
  1933  00F298  6E16               	movwf	___ftdiv@exp,c
  1934  00F29A  5016               	movf	___ftdiv@exp,w,c
  1935  00F29C  A4D8               	btfss	status,2,c
  1936  00F29E  D007               	goto	l1741
  1937  00F2A0  0E00               	movlw	0
  1938  00F2A2  6E09               	movwf	?___ftdiv,c
  1939  00F2A4  0E00               	movlw	0
  1940  00F2A6  6E0A               	movwf	?___ftdiv+1,c
  1941  00F2A8  0E00               	movlw	0
  1942  00F2AA  6E0B               	movwf	?___ftdiv+2,c
  1943  00F2AC  0012               	return	
  1944  00F2AE                     l1741:
  1945  00F2AE  C00E  F00F         	movff	___ftdiv@f2+2,??___ftdiv
  1946  00F2B2  6A10               	clrf	(??___ftdiv+1)& (0+255),c
  1947  00F2B4  6A11               	clrf	(??___ftdiv+2)& (0+255),c
  1948  00F2B6  340D               	rlcf	___ftdiv@f2+1,w,c
  1949  00F2B8  360F               	rlcf	??___ftdiv& (0+255),f,c
  1950  00F2BA  E301               	bnc	u1131
  1951  00F2BC  8010               	bsf	(??___ftdiv+1)& (0+255),0,c
  1952  00F2BE                     u1131:
  1953  00F2BE  500F               	movf	??___ftdiv,w,c
  1954  00F2C0  6E17               	movwf	___ftdiv@sign,c
  1955  00F2C2  5017               	movf	___ftdiv@sign,w,c
  1956  00F2C4  A4D8               	btfss	status,2,c
  1957  00F2C6  D007               	goto	l1747
  1958  00F2C8  0E00               	movlw	0
  1959  00F2CA  6E09               	movwf	?___ftdiv,c
  1960  00F2CC  0E00               	movlw	0
  1961  00F2CE  6E0A               	movwf	?___ftdiv+1,c
  1962  00F2D0  0E00               	movlw	0
  1963  00F2D2  6E0B               	movwf	?___ftdiv+2,c
  1964  00F2D4  0012               	return	
  1965  00F2D6                     l1747:
  1966  00F2D6  0E00               	movlw	0
  1967  00F2D8  6E13               	movwf	___ftdiv@f3,c
  1968  00F2DA  0E00               	movlw	0
  1969  00F2DC  6E14               	movwf	___ftdiv@f3+1,c
  1970  00F2DE  0E00               	movlw	0
  1971  00F2E0  6E15               	movwf	___ftdiv@f3+2,c
  1972  00F2E2  5017               	movf	___ftdiv@sign,w,c
  1973  00F2E4  0F89               	addlw	137
  1974  00F2E6  5E16               	subwf	___ftdiv@exp,f,c
  1975  00F2E8  C00B  F017         	movff	___ftdiv@f1+2,___ftdiv@sign
  1976  00F2EC  500E               	movf	___ftdiv@f2+2,w,c
  1977  00F2EE  1A17               	xorwf	___ftdiv@sign,f,c
  1978  00F2F0  0E80               	movlw	128
  1979  00F2F2  1617               	andwf	___ftdiv@sign,f,c
  1980  00F2F4  8E0A               	bsf	___ftdiv@f1+1,7,c
  1981  00F2F6  0EFF               	movlw	255
  1982  00F2F8  1609               	andwf	___ftdiv@f1,f,c
  1983  00F2FA  0EFF               	movlw	255
  1984  00F2FC  160A               	andwf	___ftdiv@f1+1,f,c
  1985  00F2FE  0E00               	movlw	0
  1986  00F300  160B               	andwf	___ftdiv@f1+2,f,c
  1987  00F302  8E0D               	bsf	___ftdiv@f2+1,7,c
  1988  00F304  0EFF               	movlw	255
  1989  00F306  160C               	andwf	___ftdiv@f2,f,c
  1990  00F308  0EFF               	movlw	255
  1991  00F30A  160D               	andwf	___ftdiv@f2+1,f,c
  1992  00F30C  0E00               	movlw	0
  1993  00F30E  160E               	andwf	___ftdiv@f2+2,f,c
  1994  00F310  0E18               	movlw	24
  1995  00F312  6E12               	movwf	___ftdiv@cntr,c
  1996  00F314                     l1767:
  1997  00F314  90D8               	bcf	status,0,c
  1998  00F316  3613               	rlcf	___ftdiv@f3,f,c
  1999  00F318  3614               	rlcf	___ftdiv@f3+1,f,c
  2000  00F31A  3615               	rlcf	___ftdiv@f3+2,f,c
  2001  00F31C  500C               	movf	___ftdiv@f2,w,c
  2002  00F31E  5C09               	subwf	___ftdiv@f1,w,c
  2003  00F320  500D               	movf	___ftdiv@f2+1,w,c
  2004  00F322  580A               	subwfb	___ftdiv@f1+1,w,c
  2005  00F324  500E               	movf	___ftdiv@f2+2,w,c
  2006  00F326  580B               	subwfb	___ftdiv@f1+2,w,c
  2007  00F328  A0D8               	btfss	status,0,c
  2008  00F32A  D007               	goto	l608
  2009  00F32C  500C               	movf	___ftdiv@f2,w,c
  2010  00F32E  5E09               	subwf	___ftdiv@f1,f,c
  2011  00F330  500D               	movf	___ftdiv@f2+1,w,c
  2012  00F332  5A0A               	subwfb	___ftdiv@f1+1,f,c
  2013  00F334  500E               	movf	___ftdiv@f2+2,w,c
  2014  00F336  5A0B               	subwfb	___ftdiv@f1+2,f,c
  2015  00F338  8013               	bsf	___ftdiv@f3,0,c
  2016  00F33A                     l608:
  2017  00F33A  90D8               	bcf	status,0,c
  2018  00F33C  3609               	rlcf	___ftdiv@f1,f,c
  2019  00F33E  360A               	rlcf	___ftdiv@f1+1,f,c
  2020  00F340  360B               	rlcf	___ftdiv@f1+2,f,c
  2021  00F342  2E12               	decfsz	___ftdiv@cntr,f,c
  2022  00F344  D7E7               	goto	l1767
  2023  00F346  C013  F001         	movff	___ftdiv@f3,___ftpack@arg
  2024  00F34A  C014  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2025  00F34E  C015  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2026  00F352  C016  F004         	movff	___ftdiv@exp,___ftpack@exp
  2027  00F356  C017  F005         	movff	___ftdiv@sign,___ftpack@sign
  2028  00F35A  ECEC  F078         	call	___ftpack	;wreg free
  2029  00F35E  C001  F009         	movff	?___ftpack,?___ftdiv
  2030  00F362  C002  F00A         	movff	?___ftpack+1,?___ftdiv+1
  2031  00F366  C003  F00B         	movff	?___ftpack+2,?___ftdiv+2
  2032  00F36A  0012               	return	
  2033  00F36C                     __end_of___ftdiv:
  2034                           	opt stack 0
  2035                           tblptru	equ	0xFF8
  2036                           tblptrh	equ	0xFF7
  2037                           tblptrl	equ	0xFF6
  2038                           tablat	equ	0xFF5
  2039                           postinc0	equ	0xFEE
  2040                           wreg	equ	0xFE8
  2041                           postdec1	equ	0xFE5
  2042                           fsr1h	equ	0xFE2
  2043                           fsr1l	equ	0xFE1
  2044                           indf2	equ	0xFDF
  2045                           postinc2	equ	0xFDE
  2046                           fsr2h	equ	0xFDA
  2047                           fsr2l	equ	0xFD9
  2048                           status	equ	0xFD8
  2049                           
  2050 ;; *************** function _star_convercion *****************
  2051 ;; Defined at:
  2052 ;;		line 30 in file "adc.c"
  2053 ;; Parameters:    Size  Location     Type
  2054 ;;		None
  2055 ;; Auto vars:     Size  Location     Type
  2056 ;;		None
  2057 ;; Return value:  Size  Location     Type
  2058 ;;		None               void
  2059 ;; Registers used:
  2060 ;;		None
  2061 ;; Tracked objects:
  2062 ;;		On entry : 0/0
  2063 ;;		On exit  : 0/0
  2064 ;;		Unchanged: 0/0
  2065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2070 ;;Total ram usage:        0 bytes
  2071 ;; Hardware stack levels used:    1
  2072 ;; This function calls:
  2073 ;;		Nothing
  2074 ;; This function is called by:
  2075 ;;		_main
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079                           	psect	text8
  2080  00EE0C                     __ptext8:
  2081                           	opt stack 0
  2082  00EE0C                     _star_convercion:
  2083                           	opt stack 30
  2084                           
  2085                           ;adc.c: 31: ADCON0bits.GO=1;
  2086                           
  2087                           ;incstack = 0
  2088  00EE0C  82C2               	bsf	4034,1,c	;volatile
  2089  00EE0E  0012               	return		;funcret
  2090  00EE10                     __end_of_star_convercion:
  2091                           	opt stack 0
  2092                           tblptru	equ	0xFF8
  2093                           tblptrh	equ	0xFF7
  2094                           tblptrl	equ	0xFF6
  2095                           tablat	equ	0xFF5
  2096                           postinc0	equ	0xFEE
  2097                           wreg	equ	0xFE8
  2098                           postdec1	equ	0xFE5
  2099                           fsr1h	equ	0xFE2
  2100                           fsr1l	equ	0xFE1
  2101                           indf2	equ	0xFDF
  2102                           postinc2	equ	0xFDE
  2103                           fsr2h	equ	0xFDA
  2104                           fsr2l	equ	0xFD9
  2105                           status	equ	0xFD8
  2106                           
  2107 ;; *************** function _set_ph *****************
  2108 ;; Defined at:
  2109 ;;		line 113 in file "main.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;		None
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;		None
  2114 ;; Return value:  Size  Location     Type
  2115 ;;		None               void
  2116 ;; Registers used:
  2117 ;;		wreg, status,2, cstack
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2127 ;;Total ram usage:        0 bytes
  2128 ;; Hardware stack levels used:    1
  2129 ;; Hardware stack levels required when called:    1
  2130 ;; This function calls:
  2131 ;;		_activacion_rx
  2132 ;;		_activacion_tx
  2133 ;;		_conf_adc
  2134 ;;		_config_tx_aurt
  2135 ;;		_set_adc
  2136 ;;		_set_leds
  2137 ;;		_set_spi
  2138 ;;		_timer_1_conf
  2139 ;;		_timer_1_set
  2140 ;;		_timer_1_star
  2141 ;; This function is called by:
  2142 ;;		_main
  2143 ;; This function uses a non-reentrant model
  2144 ;;
  2145                           
  2146                           	psect	text9
  2147  00EFB8                     __ptext9:
  2148                           	opt stack 0
  2149  00EFB8                     _set_ph:
  2150                           	opt stack 29
  2151                           
  2152                           ;main.c: 115: set_leds();
  2153                           
  2154                           ;incstack = 0
  2155  00EFB8  EC4E  F077         	call	_set_leds	;wreg free
  2156                           
  2157                           ;main.c: 116: timer_1_conf();
  2158  00EFBC  EC30  F077         	call	_timer_1_conf	;wreg free
  2159                           
  2160                           ;main.c: 117: timer_1_set(0x17,0xFC);
  2161  00EFC0  0EFC               	movlw	252
  2162  00EFC2  6E01               	movwf	timer_1_set@high,c
  2163  00EFC4  0E17               	movlw	23
  2164  00EFC6  EC08  F077         	call	_timer_1_set
  2165                           
  2166                           ;main.c: 118: timer_1_star();
  2167  00EFCA  EC04  F077         	call	_timer_1_star	;wreg free
  2168                           
  2169                           ;main.c: 119: conf_adc();
  2170  00EFCE  EC91  F077         	call	_conf_adc	;wreg free
  2171                           
  2172                           ;main.c: 120: set_adc(1);
  2173  00EFD2  0E01               	movlw	1
  2174  00EFD4  EC29  F077         	call	_set_adc
  2175                           
  2176                           ;main.c: 121: config_tx_aurt();
  2177  00EFD8  EC42  F077         	call	_config_tx_aurt	;wreg free
  2178                           
  2179                           ;main.c: 122: activacion_tx(1);
  2180  00EFDC  0E01               	movlw	1
  2181  00EFDE  EC22  F077         	call	_activacion_tx
  2182                           
  2183                           ;main.c: 123: activacion_rx(1);
  2184  00EFE2  0E01               	movlw	1
  2185  00EFE4  EC1B  F077         	call	_activacion_rx
  2186                           
  2187                           ;main.c: 124: set_spi();
  2188  00EFE8  EC37  F077         	call	_set_spi	;wreg free
  2189  00EFEC  0012               	return		;funcret
  2190  00EFEE                     __end_of_set_ph:
  2191                           	opt stack 0
  2192                           tblptru	equ	0xFF8
  2193                           tblptrh	equ	0xFF7
  2194                           tblptrl	equ	0xFF6
  2195                           tablat	equ	0xFF5
  2196                           postinc0	equ	0xFEE
  2197                           wreg	equ	0xFE8
  2198                           postdec1	equ	0xFE5
  2199                           fsr1h	equ	0xFE2
  2200                           fsr1l	equ	0xFE1
  2201                           indf2	equ	0xFDF
  2202                           postinc2	equ	0xFDE
  2203                           fsr2h	equ	0xFDA
  2204                           fsr2l	equ	0xFD9
  2205                           status	equ	0xFD8
  2206                           
  2207 ;; *************** function _timer_1_conf *****************
  2208 ;; Defined at:
  2209 ;;		line 3 in file "timer.c"
  2210 ;; Parameters:    Size  Location     Type
  2211 ;;		None
  2212 ;; Auto vars:     Size  Location     Type
  2213 ;;		None
  2214 ;; Return value:  Size  Location     Type
  2215 ;;		None               void
  2216 ;; Registers used:
  2217 ;;		wreg, status,2
  2218 ;; Tracked objects:
  2219 ;;		On entry : 0/0
  2220 ;;		On exit  : 0/0
  2221 ;;		Unchanged: 0/0
  2222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2227 ;;Total ram usage:        0 bytes
  2228 ;; Hardware stack levels used:    1
  2229 ;; This function calls:
  2230 ;;		Nothing
  2231 ;; This function is called by:
  2232 ;;		_set_ph
  2233 ;; This function uses a non-reentrant model
  2234 ;;
  2235                           
  2236                           	psect	text10
  2237  00EE60                     __ptext10:
  2238                           	opt stack 0
  2239  00EE60                     _timer_1_conf:
  2240                           	opt stack 29
  2241                           
  2242                           ;timer.c: 4: T1CONbits.RD16=1;
  2243                           
  2244                           ;incstack = 0
  2245  00EE60  8ECD               	bsf	4045,7,c	;volatile
  2246                           
  2247                           ;timer.c: 5: T1CONbits.T1RUN=0;
  2248  00EE62  9CCD               	bcf	4045,6,c	;volatile
  2249                           
  2250                           ;timer.c: 6: T1CONbits.T1CKPS=11;
  2251  00EE64  0E30               	movlw	48
  2252  00EE66  12CD               	iorwf	4045,f,c	;volatile
  2253                           
  2254                           ;timer.c: 7: T1CONbits.T1SYNC=0;
  2255  00EE68  94CD               	bcf	4045,2,c	;volatile
  2256                           
  2257                           ;timer.c: 8: T1CONbits.TMR1CS=0;
  2258  00EE6A  92CD               	bcf	4045,1,c	;volatile
  2259  00EE6C  0012               	return		;funcret
  2260  00EE6E                     __end_of_timer_1_conf:
  2261                           	opt stack 0
  2262                           tblptru	equ	0xFF8
  2263                           tblptrh	equ	0xFF7
  2264                           tblptrl	equ	0xFF6
  2265                           tablat	equ	0xFF5
  2266                           postinc0	equ	0xFEE
  2267                           wreg	equ	0xFE8
  2268                           postdec1	equ	0xFE5
  2269                           fsr1h	equ	0xFE2
  2270                           fsr1l	equ	0xFE1
  2271                           indf2	equ	0xFDF
  2272                           postinc2	equ	0xFDE
  2273                           fsr2h	equ	0xFDA
  2274                           fsr2l	equ	0xFD9
  2275                           status	equ	0xFD8
  2276                           
  2277 ;; *************** function _set_spi *****************
  2278 ;; Defined at:
  2279 ;;		line 13 in file "SPI.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;		None
  2282 ;; Auto vars:     Size  Location     Type
  2283 ;;		None
  2284 ;; Return value:  Size  Location     Type
  2285 ;;		None               void
  2286 ;; Registers used:
  2287 ;;		wreg, status,2
  2288 ;; Tracked objects:
  2289 ;;		On entry : 0/0
  2290 ;;		On exit  : 0/0
  2291 ;;		Unchanged: 0/0
  2292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2297 ;;Total ram usage:        0 bytes
  2298 ;; Hardware stack levels used:    1
  2299 ;; This function calls:
  2300 ;;		Nothing
  2301 ;; This function is called by:
  2302 ;;		_set_ph
  2303 ;; This function uses a non-reentrant model
  2304 ;;
  2305                           
  2306                           	psect	text11
  2307  00EE6E                     __ptext11:
  2308                           	opt stack 0
  2309  00EE6E                     _set_spi:
  2310                           	opt stack 29
  2311                           
  2312                           ;SPI.c: 14: SSPSTATbits.SMP=0;
  2313                           
  2314                           ;incstack = 0
  2315  00EE6E  9EC7               	bcf	4039,7,c	;volatile
  2316                           
  2317                           ;SPI.c: 15: SSPSTATbits.CKE=0;
  2318  00EE70  9CC7               	bcf	4039,6,c	;volatile
  2319                           
  2320                           ;SPI.c: 16: SSPCON1bits.CKP=0;
  2321  00EE72  98C6               	bcf	4038,4,c	;volatile
  2322                           
  2323                           ;SPI.c: 17: SSPCON1bits.SSPM=2;
  2324  00EE74  50C6               	movf	4038,w,c	;volatile
  2325  00EE76  0BF0               	andlw	-16
  2326  00EE78  0902               	iorlw	2
  2327  00EE7A  6EC6               	movwf	4038,c	;volatile
  2328                           
  2329                           ;SPI.c: 18: TRISC=0X00;
  2330  00EE7C  0E00               	movlw	0
  2331  00EE7E  6E94               	movwf	3988,c	;volatile
  2332                           
  2333                           ;SPI.c: 19: SSPCON1bits.SSPEN=1;
  2334  00EE80  8AC6               	bsf	4038,5,c	;volatile
  2335  00EE82  0012               	return		;funcret
  2336  00EE84                     __end_of_set_spi:
  2337                           	opt stack 0
  2338                           tblptru	equ	0xFF8
  2339                           tblptrh	equ	0xFF7
  2340                           tblptrl	equ	0xFF6
  2341                           tablat	equ	0xFF5
  2342                           postinc0	equ	0xFEE
  2343                           wreg	equ	0xFE8
  2344                           postdec1	equ	0xFE5
  2345                           fsr1h	equ	0xFE2
  2346                           fsr1l	equ	0xFE1
  2347                           indf2	equ	0xFDF
  2348                           postinc2	equ	0xFDE
  2349                           fsr2h	equ	0xFDA
  2350                           fsr2l	equ	0xFD9
  2351                           status	equ	0xFD8
  2352                           
  2353 ;; *************** function _set_leds *****************
  2354 ;; Defined at:
  2355 ;;		line 4 in file "hw.c"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;		None
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;		None
  2360 ;; Return value:  Size  Location     Type
  2361 ;;		None               void
  2362 ;; Registers used:
  2363 ;;		wreg, status,2
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2373 ;;Total ram usage:        0 bytes
  2374 ;; Hardware stack levels used:    1
  2375 ;; This function calls:
  2376 ;;		Nothing
  2377 ;; This function is called by:
  2378 ;;		_set_ph
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           	psect	text12
  2383  00EE9C                     __ptext12:
  2384                           	opt stack 0
  2385  00EE9C                     _set_leds:
  2386                           	opt stack 29
  2387                           
  2388                           ;hw.c: 5: PORTD=0;
  2389                           
  2390                           ;incstack = 0
  2391  00EE9C  0E00               	movlw	0
  2392  00EE9E  6E83               	movwf	3971,c	;volatile
  2393                           
  2394                           ;hw.c: 6: LATD=0;
  2395  00EEA0  0E00               	movlw	0
  2396  00EEA2  6E8C               	movwf	3980,c	;volatile
  2397                           
  2398                           ;hw.c: 7: PORTB=0;
  2399  00EEA4  0E00               	movlw	0
  2400  00EEA6  6E81               	movwf	3969,c	;volatile
  2401                           
  2402                           ;hw.c: 8: TRISB=0;
  2403  00EEA8  0E00               	movlw	0
  2404  00EEAA  6E93               	movwf	3987,c	;volatile
  2405                           
  2406                           ;hw.c: 9: TRISD=0xF0;
  2407  00EEAC  0EF0               	movlw	240
  2408  00EEAE  6E95               	movwf	3989,c	;volatile
  2409                           
  2410                           ;hw.c: 10: ANSEL=0XE0;
  2411  00EEB0  0EE0               	movlw	224
  2412  00EEB2  6E7E               	movwf	3966,c	;volatile
  2413                           
  2414                           ;hw.c: 11: TRISA=0XFF;
  2415  00EEB4  6892               	setf	3986,c	;volatile
  2416  00EEB6  0012               	return		;funcret
  2417  00EEB8                     __end_of_set_leds:
  2418                           	opt stack 0
  2419                           tblptru	equ	0xFF8
  2420                           tblptrh	equ	0xFF7
  2421                           tblptrl	equ	0xFF6
  2422                           tablat	equ	0xFF5
  2423                           postinc0	equ	0xFEE
  2424                           wreg	equ	0xFE8
  2425                           postdec1	equ	0xFE5
  2426                           fsr1h	equ	0xFE2
  2427                           fsr1l	equ	0xFE1
  2428                           indf2	equ	0xFDF
  2429                           postinc2	equ	0xFDE
  2430                           fsr2h	equ	0xFDA
  2431                           fsr2l	equ	0xFD9
  2432                           status	equ	0xFD8
  2433                           
  2434 ;; *************** function _set_adc *****************
  2435 ;; Defined at:
  2436 ;;		line 26 in file "adc.c"
  2437 ;; Parameters:    Size  Location     Type
  2438 ;;  x               1    wreg     unsigned char 
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;  x               1    0[COMRAM] unsigned char 
  2441 ;; Return value:  Size  Location     Type
  2442 ;;		None               void
  2443 ;; Registers used:
  2444 ;;		wreg
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2451 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2453 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2454 ;;Total ram usage:        1 bytes
  2455 ;; Hardware stack levels used:    1
  2456 ;; This function calls:
  2457 ;;		Nothing
  2458 ;; This function is called by:
  2459 ;;		_set_ph
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463                           	psect	text13
  2464  00EE52                     __ptext13:
  2465                           	opt stack 0
  2466  00EE52                     _set_adc:
  2467                           	opt stack 29
  2468                           
  2469                           ;incstack = 0
  2470                           ;set_adc@x stored from wreg
  2471  00EE52  6E01               	movwf	set_adc@x,c
  2472                           
  2473                           ;adc.c: 27: ADCON0bits.ADON=x;
  2474  00EE54  B001               	btfsc	set_adc@x,0,c
  2475  00EE56  D002               	bra	u1445
  2476  00EE58  90C2               	bcf	4034,0,c	;volatile
  2477  00EE5A  D001               	bra	u1446
  2478  00EE5C                     u1445:
  2479  00EE5C  80C2               	bsf	4034,0,c	;volatile
  2480  00EE5E                     u1446:
  2481  00EE5E  0012               	return		;funcret
  2482  00EE60                     __end_of_set_adc:
  2483                           	opt stack 0
  2484                           tblptru	equ	0xFF8
  2485                           tblptrh	equ	0xFF7
  2486                           tblptrl	equ	0xFF6
  2487                           tablat	equ	0xFF5
  2488                           postinc0	equ	0xFEE
  2489                           wreg	equ	0xFE8
  2490                           postdec1	equ	0xFE5
  2491                           fsr1h	equ	0xFE2
  2492                           fsr1l	equ	0xFE1
  2493                           indf2	equ	0xFDF
  2494                           postinc2	equ	0xFDE
  2495                           fsr2h	equ	0xFDA
  2496                           fsr2l	equ	0xFD9
  2497                           status	equ	0xFD8
  2498                           
  2499 ;; *************** function _config_tx_aurt *****************
  2500 ;; Defined at:
  2501 ;;		line 3 in file "m_uart.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;		None
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;		None
  2506 ;; Return value:  Size  Location     Type
  2507 ;;		None               void
  2508 ;; Registers used:
  2509 ;;		wreg, status,2
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2519 ;;Total ram usage:        0 bytes
  2520 ;; Hardware stack levels used:    1
  2521 ;; This function calls:
  2522 ;;		Nothing
  2523 ;; This function is called by:
  2524 ;;		_set_ph
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528                           	psect	text14
  2529  00EE84                     __ptext14:
  2530                           	opt stack 0
  2531  00EE84                     _config_tx_aurt:
  2532                           	opt stack 29
  2533                           
  2534                           ;m_uart.c: 5: SPBRGH=0x3;
  2535                           
  2536                           ;incstack = 0
  2537  00EE84  0E03               	movlw	3
  2538  00EE86  6EB0               	movwf	4016,c	;volatile
  2539                           
  2540                           ;m_uart.c: 7: SPBRG=0X40;
  2541  00EE88  0E40               	movlw	64
  2542  00EE8A  6EAF               	movwf	4015,c	;volatile
  2543                           
  2544                           ;m_uart.c: 8: TXSTAbits.SYNC=0;
  2545  00EE8C  98AC               	bcf	4012,4,c	;volatile
  2546                           
  2547                           ;m_uart.c: 9: TXSTAbits.BRGH=1;
  2548  00EE8E  84AC               	bsf	4012,2,c	;volatile
  2549                           
  2550                           ;m_uart.c: 10: BAUDCONbits.BRG16=1;
  2551  00EE90  86B8               	bsf	4024,3,c	;volatile
  2552                           
  2553                           ;m_uart.c: 11: TRISCbits.RC7=1;
  2554  00EE92  8E94               	bsf	3988,7,c	;volatile
  2555                           
  2556                           ;m_uart.c: 12: TRISCbits.RC6=1;
  2557  00EE94  8C94               	bsf	3988,6,c	;volatile
  2558                           
  2559                           ;m_uart.c: 13: RCSTAbits.SPEN=1;
  2560  00EE96  8EAB               	bsf	4011,7,c	;volatile
  2561                           
  2562                           ;m_uart.c: 14: RCSTAbits.RX9=0;
  2563  00EE98  9CAB               	bcf	4011,6,c	;volatile
  2564  00EE9A  0012               	return		;funcret
  2565  00EE9C                     __end_of_config_tx_aurt:
  2566                           	opt stack 0
  2567                           tblptru	equ	0xFF8
  2568                           tblptrh	equ	0xFF7
  2569                           tblptrl	equ	0xFF6
  2570                           tablat	equ	0xFF5
  2571                           postinc0	equ	0xFEE
  2572                           wreg	equ	0xFE8
  2573                           postdec1	equ	0xFE5
  2574                           fsr1h	equ	0xFE2
  2575                           fsr1l	equ	0xFE1
  2576                           indf2	equ	0xFDF
  2577                           postinc2	equ	0xFDE
  2578                           fsr2h	equ	0xFDA
  2579                           fsr2l	equ	0xFD9
  2580                           status	equ	0xFD8
  2581                           
  2582 ;; *************** function _conf_adc *****************
  2583 ;; Defined at:
  2584 ;;		line 12 in file "adc.c"
  2585 ;; Parameters:    Size  Location     Type
  2586 ;;		None
  2587 ;; Auto vars:     Size  Location     Type
  2588 ;;		None
  2589 ;; Return value:  Size  Location     Type
  2590 ;;		None               void
  2591 ;; Registers used:
  2592 ;;		wreg, status,2
  2593 ;; Tracked objects:
  2594 ;;		On entry : 0/0
  2595 ;;		On exit  : 0/0
  2596 ;;		Unchanged: 0/0
  2597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2602 ;;Total ram usage:        0 bytes
  2603 ;; Hardware stack levels used:    1
  2604 ;; This function calls:
  2605 ;;		Nothing
  2606 ;; This function is called by:
  2607 ;;		_set_ph
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           
  2611                           	psect	text15
  2612  00EF22                     __ptext15:
  2613                           	opt stack 0
  2614  00EF22                     _conf_adc:
  2615                           	opt stack 29
  2616                           
  2617                           ;adc.c: 15: TRISAbits.RA1=1;
  2618                           
  2619                           ;incstack = 0
  2620  00EF22  8292               	bsf	3986,1,c	;volatile
  2621                           
  2622                           ;adc.c: 16: ANSELbits.ANS0=1;
  2623  00EF24  807E               	bsf	3966,0,c	;volatile
  2624                           
  2625                           ;adc.c: 17: ADCON2bits.ADCS=2;
  2626  00EF26  50C0               	movf	4032,w,c	;volatile
  2627  00EF28  0BF8               	andlw	-8
  2628  00EF2A  0902               	iorlw	2
  2629  00EF2C  6EC0               	movwf	4032,c	;volatile
  2630                           
  2631                           ;adc.c: 18: ADCON2bits.ACQT=2;
  2632  00EF2E  50C0               	movf	4032,w,c	;volatile
  2633  00EF30  0BC7               	andlw	-57
  2634  00EF32  0910               	iorlw	16
  2635  00EF34  6EC0               	movwf	4032,c	;volatile
  2636                           
  2637                           ;adc.c: 19: ADCON1=0;
  2638  00EF36  0E00               	movlw	0
  2639  00EF38  6EC1               	movwf	4033,c	;volatile
  2640                           
  2641                           ;adc.c: 21: ADCON0bits.CHS=1;
  2642  00EF3A  50C2               	movf	4034,w,c	;volatile
  2643  00EF3C  0BC3               	andlw	-61
  2644  00EF3E  0904               	iorlw	4
  2645  00EF40  6EC2               	movwf	4034,c	;volatile
  2646                           
  2647                           ;adc.c: 22: ADCON2bits.ADFM=1;;
  2648  00EF42  8EC0               	bsf	4032,7,c	;volatile
  2649  00EF44  0012               	return		;funcret
  2650  00EF46                     __end_of_conf_adc:
  2651                           	opt stack 0
  2652                           tblptru	equ	0xFF8
  2653                           tblptrh	equ	0xFF7
  2654                           tblptrl	equ	0xFF6
  2655                           tablat	equ	0xFF5
  2656                           postinc0	equ	0xFEE
  2657                           wreg	equ	0xFE8
  2658                           postdec1	equ	0xFE5
  2659                           fsr1h	equ	0xFE2
  2660                           fsr1l	equ	0xFE1
  2661                           indf2	equ	0xFDF
  2662                           postinc2	equ	0xFDE
  2663                           fsr2h	equ	0xFDA
  2664                           fsr2l	equ	0xFD9
  2665                           status	equ	0xFD8
  2666                           
  2667 ;; *************** function _activacion_tx *****************
  2668 ;; Defined at:
  2669 ;;		line 20 in file "m_uart.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;  x               1    wreg     unsigned char 
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;  x               1    0[COMRAM] unsigned char 
  2674 ;; Return value:  Size  Location     Type
  2675 ;;		None               void
  2676 ;; Registers used:
  2677 ;;		wreg
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2684 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2686 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2687 ;;Total ram usage:        1 bytes
  2688 ;; Hardware stack levels used:    1
  2689 ;; This function calls:
  2690 ;;		Nothing
  2691 ;; This function is called by:
  2692 ;;		_set_ph
  2693 ;; This function uses a non-reentrant model
  2694 ;;
  2695                           
  2696                           	psect	text16
  2697  00EE44                     __ptext16:
  2698                           	opt stack 0
  2699  00EE44                     _activacion_tx:
  2700                           	opt stack 29
  2701                           
  2702                           ;incstack = 0
  2703                           ;activacion_tx@x stored from wreg
  2704  00EE44  6E01               	movwf	activacion_tx@x,c
  2705                           
  2706                           ;m_uart.c: 21: TXSTAbits.TXEN=x;
  2707  00EE46  B001               	btfsc	activacion_tx@x,0,c
  2708  00EE48  D002               	bra	u1455
  2709  00EE4A  9AAC               	bcf	4012,5,c	;volatile
  2710  00EE4C  D001               	bra	u1456
  2711  00EE4E                     u1455:
  2712  00EE4E  8AAC               	bsf	4012,5,c	;volatile
  2713  00EE50                     u1456:
  2714  00EE50  0012               	return		;funcret
  2715  00EE52                     __end_of_activacion_tx:
  2716                           	opt stack 0
  2717                           tblptru	equ	0xFF8
  2718                           tblptrh	equ	0xFF7
  2719                           tblptrl	equ	0xFF6
  2720                           tablat	equ	0xFF5
  2721                           postinc0	equ	0xFEE
  2722                           wreg	equ	0xFE8
  2723                           postdec1	equ	0xFE5
  2724                           fsr1h	equ	0xFE2
  2725                           fsr1l	equ	0xFE1
  2726                           indf2	equ	0xFDF
  2727                           postinc2	equ	0xFDE
  2728                           fsr2h	equ	0xFDA
  2729                           fsr2l	equ	0xFD9
  2730                           status	equ	0xFD8
  2731                           
  2732 ;; *************** function _activacion_rx *****************
  2733 ;; Defined at:
  2734 ;;		line 24 in file "m_uart.c"
  2735 ;; Parameters:    Size  Location     Type
  2736 ;;  x               1    wreg     unsigned char 
  2737 ;; Auto vars:     Size  Location     Type
  2738 ;;  x               1    0[COMRAM] unsigned char 
  2739 ;; Return value:  Size  Location     Type
  2740 ;;		None               void
  2741 ;; Registers used:
  2742 ;;		wreg
  2743 ;; Tracked objects:
  2744 ;;		On entry : 0/0
  2745 ;;		On exit  : 0/0
  2746 ;;		Unchanged: 0/0
  2747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2749 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2751 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2752 ;;Total ram usage:        1 bytes
  2753 ;; Hardware stack levels used:    1
  2754 ;; This function calls:
  2755 ;;		Nothing
  2756 ;; This function is called by:
  2757 ;;		_set_ph
  2758 ;; This function uses a non-reentrant model
  2759 ;;
  2760                           
  2761                           	psect	text17
  2762  00EE36                     __ptext17:
  2763                           	opt stack 0
  2764  00EE36                     _activacion_rx:
  2765                           	opt stack 29
  2766                           
  2767                           ;incstack = 0
  2768                           ;activacion_rx@x stored from wreg
  2769  00EE36  6E01               	movwf	activacion_rx@x,c
  2770                           
  2771                           ;m_uart.c: 25: RCSTAbits.CREN=x;
  2772  00EE38  B001               	btfsc	activacion_rx@x,0,c
  2773  00EE3A  D002               	bra	u1465
  2774  00EE3C  98AB               	bcf	4011,4,c	;volatile
  2775  00EE3E  D001               	bra	u1466
  2776  00EE40                     u1465:
  2777  00EE40  88AB               	bsf	4011,4,c	;volatile
  2778  00EE42                     u1466:
  2779  00EE42  0012               	return		;funcret
  2780  00EE44                     __end_of_activacion_rx:
  2781                           	opt stack 0
  2782                           tblptru	equ	0xFF8
  2783                           tblptrh	equ	0xFF7
  2784                           tblptrl	equ	0xFF6
  2785                           tablat	equ	0xFF5
  2786                           postinc0	equ	0xFEE
  2787                           wreg	equ	0xFE8
  2788                           postdec1	equ	0xFE5
  2789                           fsr1h	equ	0xFE2
  2790                           fsr1l	equ	0xFE1
  2791                           indf2	equ	0xFDF
  2792                           postinc2	equ	0xFDE
  2793                           fsr2h	equ	0xFDA
  2794                           fsr2l	equ	0xFD9
  2795                           status	equ	0xFD8
  2796                           
  2797 ;; *************** function _send_msm *****************
  2798 ;; Defined at:
  2799 ;;		line 54 in file "m_uart.c"
  2800 ;; Parameters:    Size  Location     Type
  2801 ;;  msm             2    1[COMRAM] PTR unsigned char 
  2802 ;;		 -> msm2(19), msm1(33), 
  2803 ;; Auto vars:     Size  Location     Type
  2804 ;;  a               1    4[COMRAM] unsigned char 
  2805 ;; Return value:  Size  Location     Type
  2806 ;;		None               void
  2807 ;; Registers used:
  2808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2809 ;; Tracked objects:
  2810 ;;		On entry : 0/0
  2811 ;;		On exit  : 0/0
  2812 ;;		Unchanged: 0/0
  2813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2814 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2815 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2816 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2817 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2818 ;;Total ram usage:        4 bytes
  2819 ;; Hardware stack levels used:    1
  2820 ;; Hardware stack levels required when called:    1
  2821 ;; This function calls:
  2822 ;;		_trans_dato
  2823 ;; This function is called by:
  2824 ;;		_main
  2825 ;; This function uses a non-reentrant model
  2826 ;;
  2827                           
  2828                           	psect	text18
  2829  00EFEE                     __ptext18:
  2830                           	opt stack 0
  2831  00EFEE                     _send_msm:
  2832                           	opt stack 29
  2833                           
  2834                           ;m_uart.c: 55: unsigned char a=1;
  2835                           
  2836                           ;incstack = 0
  2837  00EFEE  0E01               	movlw	1
  2838  00EFF0  6E05               	movwf	send_msm@a,c
  2839  00EFF2                     l2067:
  2840                           
  2841                           ;m_uart.c: 57: trans_dato(msm[a++]);
  2842  00EFF2  5005               	movf	send_msm@a,w,c
  2843  00EFF4  0D01               	mullw	1
  2844  00EFF6  50F3               	movf	prodl,w,c
  2845  00EFF8  2402               	addwf	send_msm@msm,w,c
  2846  00EFFA  6ED9               	movwf	fsr2l,c
  2847  00EFFC  50F4               	movf	prodh,w,c
  2848  00EFFE  2003               	addwfc	send_msm@msm+1,w,c
  2849  00F000  6EDA               	movwf	fsr2h,c
  2850  00F002  50DF               	movf	indf2,w,c
  2851  00F004  EC0E  F077         	call	_trans_dato
  2852  00F008  2A05               	incf	send_msm@a,f,c
  2853                           
  2854                           ;m_uart.c: 58: }while (msm[a]!='\r');
  2855  00F00A  5005               	movf	send_msm@a,w,c
  2856  00F00C  0D01               	mullw	1
  2857  00F00E  50F3               	movf	prodl,w,c
  2858  00F010  2402               	addwf	send_msm@msm,w,c
  2859  00F012  6ED9               	movwf	fsr2l,c
  2860  00F014  50F4               	movf	prodh,w,c
  2861  00F016  2003               	addwfc	send_msm@msm+1,w,c
  2862  00F018  6EDA               	movwf	fsr2h,c
  2863  00F01A  0E0D               	movlw	13
  2864  00F01C  18DE               	xorwf	postinc2,w,c
  2865  00F01E  A4D8               	btfss	status,2,c
  2866  00F020  D7E8               	goto	l2067
  2867                           
  2868                           ;m_uart.c: 59: trans_dato('\r');
  2869  00F022  0E0D               	movlw	13
  2870  00F024  EC0E  F077         	call	_trans_dato
  2871  00F028  0012               	return		;funcret
  2872  00F02A                     __end_of_send_msm:
  2873                           	opt stack 0
  2874                           tblptru	equ	0xFF8
  2875                           tblptrh	equ	0xFF7
  2876                           tblptrl	equ	0xFF6
  2877                           tablat	equ	0xFF5
  2878                           prodh	equ	0xFF4
  2879                           prodl	equ	0xFF3
  2880                           postinc0	equ	0xFEE
  2881                           wreg	equ	0xFE8
  2882                           postdec1	equ	0xFE5
  2883                           fsr1h	equ	0xFE2
  2884                           fsr1l	equ	0xFE1
  2885                           indf2	equ	0xFDF
  2886                           postinc2	equ	0xFDE
  2887                           fsr2h	equ	0xFDA
  2888                           fsr2l	equ	0xFD9
  2889                           status	equ	0xFD8
  2890                           
  2891 ;; *************** function _trans_dato *****************
  2892 ;; Defined at:
  2893 ;;		line 35 in file "m_uart.c"
  2894 ;; Parameters:    Size  Location     Type
  2895 ;;  x               1    wreg     unsigned char 
  2896 ;; Auto vars:     Size  Location     Type
  2897 ;;  x               1    0[COMRAM] unsigned char 
  2898 ;; Return value:  Size  Location     Type
  2899 ;;		None               void
  2900 ;; Registers used:
  2901 ;;		wreg
  2902 ;; Tracked objects:
  2903 ;;		On entry : 0/0
  2904 ;;		On exit  : 0/0
  2905 ;;		Unchanged: 0/0
  2906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2908 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2910 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2911 ;;Total ram usage:        1 bytes
  2912 ;; Hardware stack levels used:    1
  2913 ;; This function calls:
  2914 ;;		Nothing
  2915 ;; This function is called by:
  2916 ;;		_transmitir
  2917 ;;		_send_msm
  2918 ;;		_uart_print
  2919 ;; This function uses a non-reentrant model
  2920 ;;
  2921                           
  2922                           	psect	text19
  2923  00EE1C                     __ptext19:
  2924                           	opt stack 0
  2925  00EE1C                     _trans_dato:
  2926                           	opt stack 29
  2927                           
  2928                           ;incstack = 0
  2929                           ;trans_dato@x stored from wreg
  2930  00EE1C  6E01               	movwf	trans_dato@x,c
  2931  00EE1E                     l266:
  2932  00EE1E  A2AC               	btfss	4012,1,c	;volatile
  2933  00EE20  D7FE               	goto	l266
  2934                           
  2935                           ;m_uart.c: 37: TXREG=x;
  2936  00EE22  C001  FFAD         	movff	trans_dato@x,4013	;volatile
  2937  00EE26  0012               	return		;funcret
  2938  00EE28                     __end_of_trans_dato:
  2939                           	opt stack 0
  2940                           tblptru	equ	0xFF8
  2941                           tblptrh	equ	0xFF7
  2942                           tblptrl	equ	0xFF6
  2943                           tablat	equ	0xFF5
  2944                           prodh	equ	0xFF4
  2945                           prodl	equ	0xFF3
  2946                           postinc0	equ	0xFEE
  2947                           wreg	equ	0xFE8
  2948                           postdec1	equ	0xFE5
  2949                           fsr1h	equ	0xFE2
  2950                           fsr1l	equ	0xFE1
  2951                           indf2	equ	0xFDF
  2952                           postinc2	equ	0xFDE
  2953                           fsr2h	equ	0xFDA
  2954                           fsr2l	equ	0xFD9
  2955                           status	equ	0xFD8
  2956                           
  2957 ;; *************** function _flag_timer_1 *****************
  2958 ;; Defined at:
  2959 ;;		line 20 in file "timer.c"
  2960 ;; Parameters:    Size  Location     Type
  2961 ;;		None
  2962 ;; Auto vars:     Size  Location     Type
  2963 ;;		None
  2964 ;; Return value:  Size  Location     Type
  2965 ;;                  2    2[COMRAM] int 
  2966 ;; Registers used:
  2967 ;;		wreg, status,2, cstack
  2968 ;; Tracked objects:
  2969 ;;		On entry : 0/0
  2970 ;;		On exit  : 0/0
  2971 ;;		Unchanged: 0/0
  2972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2973 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2976 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2977 ;;Total ram usage:        2 bytes
  2978 ;; Hardware stack levels used:    1
  2979 ;; Hardware stack levels required when called:    1
  2980 ;; This function calls:
  2981 ;;		_timer_1_set
  2982 ;;		_timer_1_star
  2983 ;; This function is called by:
  2984 ;;		_main
  2985 ;; This function uses a non-reentrant model
  2986 ;;
  2987                           
  2988                           	psect	text20
  2989  00EF90                     __ptext20:
  2990                           	opt stack 0
  2991  00EF90                     _flag_timer_1:
  2992                           	opt stack 29
  2993                           
  2994                           ;timer.c: 21: if(PIR1bits.TMR1IF){
  2995                           
  2996                           ;incstack = 0
  2997  00EF90  A09E               	btfss	3998,0,c	;volatile
  2998  00EF92  D00D               	goto	l2087
  2999                           
  3000                           ;timer.c: 22: PIR1bits.TMR1IF=0;
  3001  00EF94  909E               	bcf	3998,0,c	;volatile
  3002                           
  3003                           ;timer.c: 23: timer_1_set(0x17,0xFC);
  3004  00EF96  0EFC               	movlw	252
  3005  00EF98  6E01               	movwf	timer_1_set@high,c
  3006  00EF9A  0E17               	movlw	23
  3007  00EF9C  EC08  F077         	call	_timer_1_set
  3008                           
  3009                           ;timer.c: 25: timer_1_star();
  3010  00EFA0  EC04  F077         	call	_timer_1_star	;wreg free
  3011                           
  3012                           ;timer.c: 26: return 1;
  3013  00EFA4  0E00               	movlw	0
  3014  00EFA6  6E04               	movwf	?_flag_timer_1+1,c
  3015  00EFA8  0E01               	movlw	1
  3016  00EFAA  6E03               	movwf	?_flag_timer_1,c
  3017                           
  3018                           ;timer.c: 27: }
  3019  00EFAC  0012               	return	
  3020  00EFAE                     l2087:
  3021                           
  3022                           ;timer.c: 28: else
  3023                           ;timer.c: 29: return 0;
  3024  00EFAE  0E00               	movlw	0
  3025  00EFB0  6E04               	movwf	?_flag_timer_1+1,c
  3026  00EFB2  0E00               	movlw	0
  3027  00EFB4  6E03               	movwf	?_flag_timer_1,c
  3028  00EFB6  0012               	return	
  3029  00EFB8                     __end_of_flag_timer_1:
  3030                           	opt stack 0
  3031                           tblptru	equ	0xFF8
  3032                           tblptrh	equ	0xFF7
  3033                           tblptrl	equ	0xFF6
  3034                           tablat	equ	0xFF5
  3035                           prodh	equ	0xFF4
  3036                           prodl	equ	0xFF3
  3037                           postinc0	equ	0xFEE
  3038                           wreg	equ	0xFE8
  3039                           postdec1	equ	0xFE5
  3040                           fsr1h	equ	0xFE2
  3041                           fsr1l	equ	0xFE1
  3042                           indf2	equ	0xFDF
  3043                           postinc2	equ	0xFDE
  3044                           fsr2h	equ	0xFDA
  3045                           fsr2l	equ	0xFD9
  3046                           status	equ	0xFD8
  3047                           
  3048 ;; *************** function _timer_1_star *****************
  3049 ;; Defined at:
  3050 ;;		line 16 in file "timer.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;		None
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;		None
  3055 ;; Return value:  Size  Location     Type
  3056 ;;		None               void
  3057 ;; Registers used:
  3058 ;;		None
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : 0/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3068 ;;Total ram usage:        0 bytes
  3069 ;; Hardware stack levels used:    1
  3070 ;; This function calls:
  3071 ;;		Nothing
  3072 ;; This function is called by:
  3073 ;;		_set_ph
  3074 ;;		_flag_timer_1
  3075 ;; This function uses a non-reentrant model
  3076 ;;
  3077                           
  3078                           	psect	text21
  3079  00EE08                     __ptext21:
  3080                           	opt stack 0
  3081  00EE08                     _timer_1_star:
  3082                           	opt stack 29
  3083                           
  3084                           ;timer.c: 17: T1CONbits.TMR1ON=1;
  3085                           
  3086                           ;incstack = 0
  3087  00EE08  80CD               	bsf	4045,0,c	;volatile
  3088  00EE0A  0012               	return		;funcret
  3089  00EE0C                     __end_of_timer_1_star:
  3090                           	opt stack 0
  3091                           tblptru	equ	0xFF8
  3092                           tblptrh	equ	0xFF7
  3093                           tblptrl	equ	0xFF6
  3094                           tablat	equ	0xFF5
  3095                           prodh	equ	0xFF4
  3096                           prodl	equ	0xFF3
  3097                           postinc0	equ	0xFEE
  3098                           wreg	equ	0xFE8
  3099                           postdec1	equ	0xFE5
  3100                           fsr1h	equ	0xFE2
  3101                           fsr1l	equ	0xFE1
  3102                           indf2	equ	0xFDF
  3103                           postinc2	equ	0xFDE
  3104                           fsr2h	equ	0xFDA
  3105                           fsr2l	equ	0xFD9
  3106                           status	equ	0xFD8
  3107                           
  3108 ;; *************** function _timer_1_set *****************
  3109 ;; Defined at:
  3110 ;;		line 12 in file "timer.c"
  3111 ;; Parameters:    Size  Location     Type
  3112 ;;  low             1    wreg     unsigned char 
  3113 ;;  high            1    0[COMRAM] unsigned char 
  3114 ;; Auto vars:     Size  Location     Type
  3115 ;;  low             1    1[COMRAM] unsigned char 
  3116 ;; Return value:  Size  Location     Type
  3117 ;;		None               void
  3118 ;; Registers used:
  3119 ;;		wreg
  3120 ;; Tracked objects:
  3121 ;;		On entry : 0/0
  3122 ;;		On exit  : 0/0
  3123 ;;		Unchanged: 0/0
  3124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3125 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3126 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3128 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3129 ;;Total ram usage:        2 bytes
  3130 ;; Hardware stack levels used:    1
  3131 ;; This function calls:
  3132 ;;		Nothing
  3133 ;; This function is called by:
  3134 ;;		_set_ph
  3135 ;;		_flag_timer_1
  3136 ;; This function uses a non-reentrant model
  3137 ;;
  3138                           
  3139                           	psect	text22
  3140  00EE10                     __ptext22:
  3141                           	opt stack 0
  3142  00EE10                     _timer_1_set:
  3143                           	opt stack 29
  3144                           
  3145                           ;incstack = 0
  3146                           ;timer_1_set@low stored from wreg
  3147  00EE10  6E02               	movwf	timer_1_set@low,c
  3148                           
  3149                           ;timer.c: 13: TMR1H=high;
  3150  00EE12  C001  FFCF         	movff	timer_1_set@high,4047	;volatile
  3151                           
  3152                           ;timer.c: 14: TMR1L=low;
  3153  00EE16  C002  FFCE         	movff	timer_1_set@low,4046	;volatile
  3154  00EE1A  0012               	return		;funcret
  3155  00EE1C                     __end_of_timer_1_set:
  3156                           	opt stack 0
  3157                           tblptru	equ	0xFF8
  3158                           tblptrh	equ	0xFF7
  3159                           tblptrl	equ	0xFF6
  3160                           tablat	equ	0xFF5
  3161                           prodh	equ	0xFF4
  3162                           prodl	equ	0xFF3
  3163                           postinc0	equ	0xFEE
  3164                           wreg	equ	0xFE8
  3165                           postdec1	equ	0xFE5
  3166                           fsr1h	equ	0xFE2
  3167                           fsr1l	equ	0xFE1
  3168                           indf2	equ	0xFDF
  3169                           postinc2	equ	0xFDE
  3170                           fsr2h	equ	0xFDA
  3171                           fsr2l	equ	0xFD9
  3172                           status	equ	0xFD8
  3173                           
  3174 ;; *************** function _final_convercion *****************
  3175 ;; Defined at:
  3176 ;;		line 34 in file "adc.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;		None
  3179 ;; Auto vars:     Size  Location     Type
  3180 ;;		None
  3181 ;; Return value:  Size  Location     Type
  3182 ;;                  1    wreg      unsigned char 
  3183 ;; Registers used:
  3184 ;;		wreg
  3185 ;; Tracked objects:
  3186 ;;		On entry : 0/0
  3187 ;;		On exit  : 0/0
  3188 ;;		Unchanged: 0/0
  3189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3194 ;;Total ram usage:        0 bytes
  3195 ;; Hardware stack levels used:    1
  3196 ;; This function calls:
  3197 ;;		Nothing
  3198 ;; This function is called by:
  3199 ;;		_main
  3200 ;; This function uses a non-reentrant model
  3201 ;;
  3202                           
  3203                           	psect	text23
  3204  00EE28                     __ptext23:
  3205                           	opt stack 0
  3206  00EE28                     _final_convercion:
  3207                           	opt stack 30
  3208                           
  3209                           ;adc.c: 35: if (PIR1bits.ADIF){
  3210                           
  3211                           ;incstack = 0
  3212  00EE28  AC9E               	btfss	3998,6,c	;volatile
  3213  00EE2A  D003               	goto	l2103
  3214                           
  3215                           ;adc.c: 36: PIR1bits.ADIF=0;
  3216  00EE2C  9C9E               	bcf	3998,6,c	;volatile
  3217                           
  3218                           ;adc.c: 37: return 1;
  3219  00EE2E  0E01               	movlw	1
  3220                           
  3221                           ;adc.c: 38: }
  3222  00EE30  0012               	return	
  3223  00EE32                     l2103:
  3224                           
  3225                           ;adc.c: 39: else
  3226                           ;adc.c: 40: return 0;
  3227  00EE32  0E00               	movlw	0
  3228  00EE34  0012               	return	
  3229  00EE36                     __end_of_final_convercion:
  3230                           	opt stack 0
  3231                           tblptru	equ	0xFF8
  3232                           tblptrh	equ	0xFF7
  3233                           tblptrl	equ	0xFF6
  3234                           tablat	equ	0xFF5
  3235                           prodh	equ	0xFF4
  3236                           prodl	equ	0xFF3
  3237                           postinc0	equ	0xFEE
  3238                           wreg	equ	0xFE8
  3239                           postdec1	equ	0xFE5
  3240                           fsr1h	equ	0xFE2
  3241                           fsr1l	equ	0xFE1
  3242                           indf2	equ	0xFDF
  3243                           postinc2	equ	0xFDE
  3244                           fsr2h	equ	0xFDA
  3245                           fsr2l	equ	0xFD9
  3246                           status	equ	0xFD8
  3247                           
  3248 ;; *************** function _filtro *****************
  3249 ;; Defined at:
  3250 ;;		line 11 in file "filtro.c"
  3251 ;; Parameters:    Size  Location     Type
  3252 ;;  inn             2   41[COMRAM] unsigned int 
  3253 ;; Auto vars:     Size  Location     Type
  3254 ;;		None
  3255 ;; Return value:  Size  Location     Type
  3256 ;;                  2   41[COMRAM] unsigned int 
  3257 ;; Registers used:
  3258 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3259 ;; Tracked objects:
  3260 ;;		On entry : 0/0
  3261 ;;		On exit  : 0/0
  3262 ;;		Unchanged: 0/0
  3263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3264 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3265 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3266 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3267 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3268 ;;Total ram usage:       12 bytes
  3269 ;; Hardware stack levels used:    1
  3270 ;; Hardware stack levels required when called:    2
  3271 ;; This function calls:
  3272 ;;		___ftadd
  3273 ;;		___ftmul
  3274 ;;		___ftneg
  3275 ;;		___fttol
  3276 ;;		___lwtoft
  3277 ;;		___wmul
  3278 ;; This function is called by:
  3279 ;;		_main
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           	psect	text24
  3284  00FB34                     __ptext24:
  3285                           	opt stack 0
  3286  00FB34                     _filtro:
  3287                           	opt stack 28
  3288                           
  3289                           ;filtro.c: 13: u[k+3]=inn;
  3290                           
  3291                           ;incstack = 0
  3292  00FB34  C051  F02C         	movff	_k,??_filtro
  3293  00FB38  C052  F02D         	movff	_k+1,??_filtro+1
  3294  00FB3C  90D8               	bcf	status,0,c
  3295  00FB3E  362C               	rlcf	??_filtro,f,c
  3296  00FB40  362D               	rlcf	??_filtro+1,f,c
  3297  00FB42  0E06               	movlw	6
  3298  00FB44  262C               	addwf	??_filtro,f,c
  3299  00FB46  0E00               	movlw	0
  3300  00FB48  222D               	addwfc	??_filtro+1,f,c
  3301  00FB4A  0E00               	movlw	low _u
  3302  00FB4C  242C               	addwf	??_filtro,w,c
  3303  00FB4E  6ED9               	movwf	fsr2l,c
  3304  00FB50  0E01               	movlw	high _u
  3305  00FB52  202D               	addwfc	??_filtro+1,w,c
  3306  00FB54  6EDA               	movwf	fsr2h,c
  3307  00FB56  C02A  FFDE         	movff	filtro@inn,postinc2
  3308  00FB5A  C02B  FFDD         	movff	filtro@inn+1,postdec2
  3309                           
  3310                           ;filtro.c: 14: y[k+3]=(b[0]*u[k+3])+(b[1]*u[k+2])+(b[2]*u[k+1])+(b[3]*u[k]);
  3311  00FB5E  C07C  F00F         	movff	_b+3,___ftmul@f2
  3312  00FB62  C07D  F010         	movff	_b+4,___ftmul@f2+1
  3313  00FB66  C07E  F011         	movff	_b+5,___ftmul@f2+2
  3314  00FB6A  C051  F02C         	movff	_k,??_filtro
  3315  00FB6E  C052  F02D         	movff	_k+1,??_filtro+1
  3316  00FB72  90D8               	bcf	status,0,c
  3317  00FB74  362C               	rlcf	??_filtro,f,c
  3318  00FB76  362D               	rlcf	??_filtro+1,f,c
  3319  00FB78  0E04               	movlw	4
  3320  00FB7A  262C               	addwf	??_filtro,f,c
  3321  00FB7C  0E00               	movlw	0
  3322  00FB7E  222D               	addwfc	??_filtro+1,f,c
  3323  00FB80  0E00               	movlw	low _u
  3324  00FB82  242C               	addwf	??_filtro,w,c
  3325  00FB84  6ED9               	movwf	fsr2l,c
  3326  00FB86  0E01               	movlw	high _u
  3327  00FB88  202D               	addwfc	??_filtro+1,w,c
  3328  00FB8A  6EDA               	movwf	fsr2h,c
  3329  00FB8C  CFDE F009          	movff	postinc2,___lwtoft@c
  3330  00FB90  CFDD F00A          	movff	postdec2,___lwtoft@c+1
  3331  00FB94  EC7F  F077         	call	___lwtoft	;wreg free
  3332  00FB98  C009  F00C         	movff	?___lwtoft,___ftmul@f1
  3333  00FB9C  C00A  F00D         	movff	?___lwtoft+1,___ftmul@f1+1
  3334  00FBA0  C00B  F00E         	movff	?___lwtoft+2,___ftmul@f1+2
  3335  00FBA4  ECB6  F079         	call	___ftmul	;wreg free
  3336  00FBA8  C00C  F021         	movff	?___ftmul,___ftadd@f2
  3337  00FBAC  C00D  F022         	movff	?___ftmul+1,___ftadd@f2+1
  3338  00FBB0  C00E  F023         	movff	?___ftmul+2,___ftadd@f2+2
  3339  00FBB4  C079  F00F         	movff	_b,___ftmul@f2
  3340  00FBB8  C07A  F010         	movff	_b+1,___ftmul@f2+1
  3341  00FBBC  C07B  F011         	movff	_b+2,___ftmul@f2+2
  3342  00FBC0  C051  F02E         	movff	_k,??_filtro+2
  3343  00FBC4  C052  F02F         	movff	_k+1,??_filtro+3
  3344  00FBC8  90D8               	bcf	status,0,c
  3345  00FBCA  362E               	rlcf	??_filtro+2,f,c
  3346  00FBCC  362F               	rlcf	??_filtro+3,f,c
  3347  00FBCE  0E06               	movlw	6
  3348  00FBD0  262E               	addwf	??_filtro+2,f,c
  3349  00FBD2  0E00               	movlw	0
  3350  00FBD4  222F               	addwfc	??_filtro+3,f,c
  3351  00FBD6  0E00               	movlw	low _u
  3352  00FBD8  242E               	addwf	??_filtro+2,w,c
  3353  00FBDA  6ED9               	movwf	fsr2l,c
  3354  00FBDC  0E01               	movlw	high _u
  3355  00FBDE  202F               	addwfc	??_filtro+3,w,c
  3356  00FBE0  6EDA               	movwf	fsr2h,c
  3357  00FBE2  CFDE F009          	movff	postinc2,___lwtoft@c
  3358  00FBE6  CFDD F00A          	movff	postdec2,___lwtoft@c+1
  3359  00FBEA  EC7F  F077         	call	___lwtoft	;wreg free
  3360  00FBEE  C009  F00C         	movff	?___lwtoft,___ftmul@f1
  3361  00FBF2  C00A  F00D         	movff	?___lwtoft+1,___ftmul@f1+1
  3362  00FBF6  C00B  F00E         	movff	?___lwtoft+2,___ftmul@f1+2
  3363  00FBFA  ECB6  F079         	call	___ftmul	;wreg free
  3364  00FBFE  C00C  F01E         	movff	?___ftmul,___ftadd@f1
  3365  00FC02  C00D  F01F         	movff	?___ftmul+1,___ftadd@f1+1
  3366  00FC06  C00E  F020         	movff	?___ftmul+2,___ftadd@f1+2
  3367  00FC0A  ECB2  F07B         	call	___ftadd	;wreg free
  3368  00FC0E  C01E  F030         	movff	?___ftadd,_filtro$1840
  3369  00FC12  C01F  F031         	movff	?___ftadd+1,_filtro$1840+1
  3370  00FC16  C020  F032         	movff	?___ftadd+2,_filtro$1840+2
  3371                           
  3372                           ;filtro.c: 14: y[k+3]=(b[0]*u[k+3])+(b[1]*u[k+2])+(b[2]*u[k+1])+(b[3]*u[k]);
  3373  00FC1A  C07F  F00F         	movff	_b+6,___ftmul@f2
  3374  00FC1E  C080  F010         	movff	_b+7,___ftmul@f2+1
  3375  00FC22  C081  F011         	movff	_b+8,___ftmul@f2+2
  3376  00FC26  C051  F02C         	movff	_k,??_filtro
  3377  00FC2A  C052  F02D         	movff	_k+1,??_filtro+1
  3378  00FC2E  90D8               	bcf	status,0,c
  3379  00FC30  362C               	rlcf	??_filtro,f,c
  3380  00FC32  362D               	rlcf	??_filtro+1,f,c
  3381  00FC34  0E02               	movlw	2
  3382  00FC36  262C               	addwf	??_filtro,f,c
  3383  00FC38  0E00               	movlw	0
  3384  00FC3A  222D               	addwfc	??_filtro+1,f,c
  3385  00FC3C  0E00               	movlw	low _u
  3386  00FC3E  242C               	addwf	??_filtro,w,c
  3387  00FC40  6ED9               	movwf	fsr2l,c
  3388  00FC42  0E01               	movlw	high _u
  3389  00FC44  202D               	addwfc	??_filtro+1,w,c
  3390  00FC46  6EDA               	movwf	fsr2h,c
  3391  00FC48  CFDE F009          	movff	postinc2,___lwtoft@c
  3392  00FC4C  CFDD F00A          	movff	postdec2,___lwtoft@c+1
  3393  00FC50  EC7F  F077         	call	___lwtoft	;wreg free
  3394  00FC54  C009  F00C         	movff	?___lwtoft,___ftmul@f1
  3395  00FC58  C00A  F00D         	movff	?___lwtoft+1,___ftmul@f1+1
  3396  00FC5C  C00B  F00E         	movff	?___lwtoft+2,___ftmul@f1+2
  3397  00FC60  ECB6  F079         	call	___ftmul	;wreg free
  3398  00FC64  C00C  F021         	movff	?___ftmul,___ftadd@f2
  3399  00FC68  C00D  F022         	movff	?___ftmul+1,___ftadd@f2+1
  3400  00FC6C  C00E  F023         	movff	?___ftmul+2,___ftadd@f2+2
  3401  00FC70  C030  F01E         	movff	_filtro$1840,___ftadd@f1
  3402  00FC74  C031  F01F         	movff	_filtro$1840+1,___ftadd@f1+1
  3403  00FC78  C032  F020         	movff	_filtro$1840+2,___ftadd@f1+2
  3404  00FC7C  ECB2  F07B         	call	___ftadd	;wreg free
  3405  00FC80  C01E  F033         	movff	?___ftadd,_filtro$1841
  3406  00FC84  C01F  F034         	movff	?___ftadd+1,_filtro$1841+1
  3407  00FC88  C020  F035         	movff	?___ftadd+2,_filtro$1841+2
  3408                           
  3409                           ;filtro.c: 14: y[k+3]=(b[0]*u[k+3])+(b[1]*u[k+2])+(b[2]*u[k+1])+(b[3]*u[k]);
  3410  00FC8C  0E03               	movlw	3
  3411  00FC8E  2451               	addwf	_k,w,c
  3412  00FC90  6E05               	movwf	___wmul@multiplier,c
  3413  00FC92  0E00               	movlw	0
  3414  00FC94  2052               	addwfc	_k+1,w,c
  3415  00FC96  6E06               	movwf	___wmul@multiplier+1,c
  3416  00FC98  0E00               	movlw	0
  3417  00FC9A  6E08               	movwf	___wmul@multiplicand+1,c
  3418  00FC9C  0E03               	movlw	3
  3419  00FC9E  6E07               	movwf	___wmul@multiplicand,c
  3420  00FCA0  ECB5  F077         	call	___wmul	;wreg free
  3421  00FCA4  0EC8               	movlw	low _y
  3422  00FCA6  2405               	addwf	?___wmul,w,c
  3423  00FCA8  6ED9               	movwf	fsr2l,c
  3424  00FCAA  0E01               	movlw	high _y
  3425  00FCAC  2006               	addwfc	?___wmul+1,w,c
  3426  00FCAE  6EDA               	movwf	fsr2h,c
  3427  00FCB0  C033  F01E         	movff	_filtro$1841,___ftadd@f1
  3428  00FCB4  C034  F01F         	movff	_filtro$1841+1,___ftadd@f1+1
  3429  00FCB8  C035  F020         	movff	_filtro$1841+2,___ftadd@f1+2
  3430  00FCBC  C082  F00F         	movff	_b+9,___ftmul@f2
  3431  00FCC0  C083  F010         	movff	_b+10,___ftmul@f2+1
  3432  00FCC4  C084  F011         	movff	_b+11,___ftmul@f2+2
  3433  00FCC8  90D8               	bcf	status,0,c
  3434  00FCCA  3451               	rlcf	_k,w,c
  3435  00FCCC  6EE1               	movwf	fsr1l,c
  3436  00FCCE  3452               	rlcf	_k+1,w,c
  3437  00FCD0  6EE2               	movwf	fsr1h,c
  3438  00FCD2  0E00               	movlw	low _u
  3439  00FCD4  26E1               	addwf	fsr1l,f,c
  3440  00FCD6  0E01               	movlw	high _u
  3441  00FCD8  22E2               	addwfc	fsr1h,f,c
  3442  00FCDA  CFE6 F009          	movff	postinc1,___lwtoft@c
  3443  00FCDE  CFE5 F00A          	movff	postdec1,___lwtoft@c+1
  3444  00FCE2  EC7F  F077         	call	___lwtoft	;wreg free
  3445  00FCE6  C009  F00C         	movff	?___lwtoft,___ftmul@f1
  3446  00FCEA  C00A  F00D         	movff	?___lwtoft+1,___ftmul@f1+1
  3447  00FCEE  C00B  F00E         	movff	?___lwtoft+2,___ftmul@f1+2
  3448  00FCF2  ECB6  F079         	call	___ftmul	;wreg free
  3449  00FCF6  C00C  F021         	movff	?___ftmul,___ftadd@f2
  3450  00FCFA  C00D  F022         	movff	?___ftmul+1,___ftadd@f2+1
  3451  00FCFE  C00E  F023         	movff	?___ftmul+2,___ftadd@f2+2
  3452  00FD02  ECB2  F07B         	call	___ftadd	;wreg free
  3453  00FD06  C01E  FFDE         	movff	?___ftadd,postinc2
  3454  00FD0A  C01F  FFDE         	movff	?___ftadd+1,postinc2
  3455  00FD0E  C020  FFDE         	movff	?___ftadd+2,postinc2
  3456                           
  3457                           ;filtro.c: 15: y[k+3]=y[k+3]-(a[1]*y[k+2])-(a[2]*y[k+1])-(a[3]*y[k]);
  3458  00FD12  0E00               	movlw	0
  3459  00FD14  6E08               	movwf	___wmul@multiplicand+1,c
  3460  00FD16  0E03               	movlw	3
  3461  00FD18  6E07               	movwf	___wmul@multiplicand,c
  3462  00FD1A  0E01               	movlw	1
  3463  00FD1C  2451               	addwf	_k,w,c
  3464  00FD1E  6E05               	movwf	___wmul@multiplier,c
  3465  00FD20  0E00               	movlw	0
  3466  00FD22  2052               	addwfc	_k+1,w,c
  3467  00FD24  6E06               	movwf	___wmul@multiplier+1,c
  3468  00FD26  ECB5  F077         	call	___wmul	;wreg free
  3469  00FD2A  0EC8               	movlw	low _y
  3470  00FD2C  2405               	addwf	?___wmul,w,c
  3471  00FD2E  6ED9               	movwf	fsr2l,c
  3472  00FD30  0E01               	movlw	high _y
  3473  00FD32  2006               	addwfc	?___wmul+1,w,c
  3474  00FD34  6EDA               	movwf	fsr2h,c
  3475  00FD36  CFDE F00F          	movff	postinc2,___ftmul@f2
  3476  00FD3A  CFDE F010          	movff	postinc2,___ftmul@f2+1
  3477  00FD3E  CFDD F011          	movff	postdec2,___ftmul@f2+2
  3478  00FD42  C073  F00C         	movff	_a+6,___ftmul@f1
  3479  00FD46  C074  F00D         	movff	_a+7,___ftmul@f1+1
  3480  00FD4A  C075  F00E         	movff	_a+8,___ftmul@f1+2
  3481  00FD4E  ECB6  F079         	call	___ftmul	;wreg free
  3482  00FD52  C00C  F021         	movff	?___ftmul,___ftadd@f2
  3483  00FD56  C00D  F022         	movff	?___ftmul+1,___ftadd@f2+1
  3484  00FD5A  C00E  F023         	movff	?___ftmul+2,___ftadd@f2+2
  3485  00FD5E  0E02               	movlw	2
  3486  00FD60  2451               	addwf	_k,w,c
  3487  00FD62  6E05               	movwf	___wmul@multiplier,c
  3488  00FD64  0E00               	movlw	0
  3489  00FD66  2052               	addwfc	_k+1,w,c
  3490  00FD68  6E06               	movwf	___wmul@multiplier+1,c
  3491  00FD6A  0E00               	movlw	0
  3492  00FD6C  6E08               	movwf	___wmul@multiplicand+1,c
  3493  00FD6E  0E03               	movlw	3
  3494  00FD70  6E07               	movwf	___wmul@multiplicand,c
  3495  00FD72  ECB5  F077         	call	___wmul	;wreg free
  3496  00FD76  0EC8               	movlw	low _y
  3497  00FD78  2405               	addwf	?___wmul,w,c
  3498  00FD7A  6ED9               	movwf	fsr2l,c
  3499  00FD7C  0E01               	movlw	high _y
  3500  00FD7E  2006               	addwfc	?___wmul+1,w,c
  3501  00FD80  6EDA               	movwf	fsr2h,c
  3502  00FD82  CFDE F00F          	movff	postinc2,___ftmul@f2
  3503  00FD86  CFDE F010          	movff	postinc2,___ftmul@f2+1
  3504  00FD8A  CFDD F011          	movff	postdec2,___ftmul@f2+2
  3505  00FD8E  C070  F00C         	movff	_a+3,___ftmul@f1
  3506  00FD92  C071  F00D         	movff	_a+4,___ftmul@f1+1
  3507  00FD96  C072  F00E         	movff	_a+5,___ftmul@f1+2
  3508  00FD9A  ECB6  F079         	call	___ftmul	;wreg free
  3509  00FD9E  C00C  F01E         	movff	?___ftmul,___ftadd@f1
  3510  00FDA2  C00D  F01F         	movff	?___ftmul+1,___ftadd@f1+1
  3511  00FDA6  C00E  F020         	movff	?___ftmul+2,___ftadd@f1+2
  3512  00FDAA  ECB2  F07B         	call	___ftadd	;wreg free
  3513  00FDAE  C01E  F030         	movff	?___ftadd,_filtro$1840
  3514  00FDB2  C01F  F031         	movff	?___ftadd+1,_filtro$1840+1
  3515  00FDB6  C020  F032         	movff	?___ftadd+2,_filtro$1840+2
  3516                           
  3517                           ;filtro.c: 15: y[k+3]=y[k+3]-(a[1]*y[k+2])-(a[2]*y[k+1])-(a[3]*y[k]);
  3518  00FDBA  0E00               	movlw	0
  3519  00FDBC  6E08               	movwf	___wmul@multiplicand+1,c
  3520  00FDBE  0E03               	movlw	3
  3521  00FDC0  6E07               	movwf	___wmul@multiplicand,c
  3522  00FDC2  C051  F005         	movff	_k,___wmul@multiplier
  3523  00FDC6  C052  F006         	movff	_k+1,___wmul@multiplier+1
  3524  00FDCA  ECB5  F077         	call	___wmul	;wreg free
  3525  00FDCE  0EC8               	movlw	low _y
  3526  00FDD0  2405               	addwf	?___wmul,w,c
  3527  00FDD2  6ED9               	movwf	fsr2l,c
  3528  00FDD4  0E01               	movlw	high _y
  3529  00FDD6  2006               	addwfc	?___wmul+1,w,c
  3530  00FDD8  6EDA               	movwf	fsr2h,c
  3531  00FDDA  CFDE F00F          	movff	postinc2,___ftmul@f2
  3532  00FDDE  CFDE F010          	movff	postinc2,___ftmul@f2+1
  3533  00FDE2  CFDD F011          	movff	postdec2,___ftmul@f2+2
  3534  00FDE6  C076  F00C         	movff	_a+9,___ftmul@f1
  3535  00FDEA  C077  F00D         	movff	_a+10,___ftmul@f1+1
  3536  00FDEE  C078  F00E         	movff	_a+11,___ftmul@f1+2
  3537  00FDF2  ECB6  F079         	call	___ftmul	;wreg free
  3538  00FDF6  C00C  F021         	movff	?___ftmul,___ftadd@f2
  3539  00FDFA  C00D  F022         	movff	?___ftmul+1,___ftadd@f2+1
  3540  00FDFE  C00E  F023         	movff	?___ftmul+2,___ftadd@f2+2
  3541  00FE02  C030  F01E         	movff	_filtro$1840,___ftadd@f1
  3542  00FE06  C031  F01F         	movff	_filtro$1840+1,___ftadd@f1+1
  3543  00FE0A  C032  F020         	movff	_filtro$1840+2,___ftadd@f1+2
  3544  00FE0E  ECB2  F07B         	call	___ftadd	;wreg free
  3545  00FE12  C01E  F01B         	movff	?___ftadd,___ftneg@f1
  3546  00FE16  C01F  F01C         	movff	?___ftadd+1,___ftneg@f1+1
  3547  00FE1A  C020  F01D         	movff	?___ftadd+2,___ftneg@f1+2
  3548  00FE1E  EC6D  F077         	call	___ftneg	;wreg free
  3549  00FE22  C01B  F033         	movff	?___ftneg,_filtro$1841
  3550  00FE26  C01C  F034         	movff	?___ftneg+1,_filtro$1841+1
  3551  00FE2A  C01D  F035         	movff	?___ftneg+2,_filtro$1841+2
  3552                           
  3553                           ;filtro.c: 15: y[k+3]=y[k+3]-(a[1]*y[k+2])-(a[2]*y[k+1])-(a[3]*y[k]);
  3554  00FE2E  0E03               	movlw	3
  3555  00FE30  2451               	addwf	_k,w,c
  3556  00FE32  6E05               	movwf	___wmul@multiplier,c
  3557  00FE34  0E00               	movlw	0
  3558  00FE36  2052               	addwfc	_k+1,w,c
  3559  00FE38  6E06               	movwf	___wmul@multiplier+1,c
  3560  00FE3A  0E00               	movlw	0
  3561  00FE3C  6E08               	movwf	___wmul@multiplicand+1,c
  3562  00FE3E  0E03               	movlw	3
  3563  00FE40  6E07               	movwf	___wmul@multiplicand,c
  3564  00FE42  ECB5  F077         	call	___wmul	;wreg free
  3565  00FE46  0EC8               	movlw	low _y
  3566  00FE48  2405               	addwf	?___wmul,w,c
  3567  00FE4A  6ED9               	movwf	fsr2l,c
  3568  00FE4C  0E01               	movlw	high _y
  3569  00FE4E  2006               	addwfc	?___wmul+1,w,c
  3570  00FE50  6EDA               	movwf	fsr2h,c
  3571  00FE52  C033  F01E         	movff	_filtro$1841,___ftadd@f1
  3572  00FE56  C034  F01F         	movff	_filtro$1841+1,___ftadd@f1+1
  3573  00FE5A  C035  F020         	movff	_filtro$1841+2,___ftadd@f1+2
  3574  00FE5E  0E00               	movlw	0
  3575  00FE60  6E08               	movwf	___wmul@multiplicand+1,c
  3576  00FE62  0E03               	movlw	3
  3577  00FE64  6E07               	movwf	___wmul@multiplicand,c
  3578  00FE66  0E03               	movlw	3
  3579  00FE68  2451               	addwf	_k,w,c
  3580  00FE6A  6E05               	movwf	___wmul@multiplier,c
  3581  00FE6C  0E00               	movlw	0
  3582  00FE6E  2052               	addwfc	_k+1,w,c
  3583  00FE70  6E06               	movwf	___wmul@multiplier+1,c
  3584  00FE72  ECB5  F077         	call	___wmul	;wreg free
  3585  00FE76  0EC8               	movlw	low _y
  3586  00FE78  2405               	addwf	?___wmul,w,c
  3587  00FE7A  6EE1               	movwf	fsr1l,c
  3588  00FE7C  0E01               	movlw	high _y
  3589  00FE7E  2006               	addwfc	?___wmul+1,w,c
  3590  00FE80  6EE2               	movwf	fsr1h,c
  3591  00FE82  CFE6 F021          	movff	postinc1,___ftadd@f2
  3592  00FE86  CFE6 F022          	movff	postinc1,___ftadd@f2+1
  3593  00FE8A  CFE5 F023          	movff	postdec1,___ftadd@f2+2
  3594  00FE8E  ECB2  F07B         	call	___ftadd	;wreg free
  3595  00FE92  C01E  FFDE         	movff	?___ftadd,postinc2
  3596  00FE96  C01F  FFDE         	movff	?___ftadd+1,postinc2
  3597  00FE9A  C020  FFDE         	movff	?___ftadd+2,postinc2
  3598                           
  3599                           ;filtro.c: 16: k=k+1;
  3600  00FE9E  0E01               	movlw	1
  3601  00FEA0  2451               	addwf	_k,w,c
  3602  00FEA2  6E51               	movwf	_k,c
  3603  00FEA4  0E00               	movlw	0
  3604  00FEA6  2052               	addwfc	_k+1,w,c
  3605  00FEA8  6E52               	movwf	_k+1,c
  3606                           
  3607                           ;filtro.c: 17: if (k+3==100){
  3608  00FEAA  0E03               	movlw	3
  3609  00FEAC  2451               	addwf	_k,w,c
  3610  00FEAE  6E2C               	movwf	??_filtro& (0+255),c
  3611  00FEB0  0E00               	movlw	0
  3612  00FEB2  2052               	addwfc	_k+1,w,c
  3613  00FEB4  6E2D               	movwf	(??_filtro+1)& (0+255),c
  3614  00FEB6  0E64               	movlw	100
  3615  00FEB8  182C               	xorwf	??_filtro,w,c
  3616  00FEBA  102D               	iorwf	??_filtro+1,w,c
  3617  00FEBC  A4D8               	btfss	status,2,c
  3618  00FEBE  D081               	goto	l2147
  3619                           
  3620                           ;filtro.c: 19: u[2]=u[k+2];
  3621  00FEC0  C051  F02C         	movff	_k,??_filtro
  3622  00FEC4  C052  F02D         	movff	_k+1,??_filtro+1
  3623  00FEC8  90D8               	bcf	status,0,c
  3624  00FECA  362C               	rlcf	??_filtro,f,c
  3625  00FECC  362D               	rlcf	??_filtro+1,f,c
  3626  00FECE  0E04               	movlw	4
  3627  00FED0  262C               	addwf	??_filtro,f,c
  3628  00FED2  0E00               	movlw	0
  3629  00FED4  222D               	addwfc	??_filtro+1,f,c
  3630  00FED6  0E00               	movlw	low _u
  3631  00FED8  242C               	addwf	??_filtro,w,c
  3632  00FEDA  6ED9               	movwf	fsr2l,c
  3633  00FEDC  0E01               	movlw	high _u
  3634  00FEDE  202D               	addwfc	??_filtro+1,w,c
  3635  00FEE0  6EDA               	movwf	fsr2h,c
  3636  00FEE2  CFDE F104          	movff	postinc2,_u+4
  3637  00FEE6  CFDD F105          	movff	postdec2,_u+5
  3638                           
  3639                           ;filtro.c: 20: u[1]=u[k+1];
  3640  00FEEA  C051  F02C         	movff	_k,??_filtro
  3641  00FEEE  C052  F02D         	movff	_k+1,??_filtro+1
  3642  00FEF2  90D8               	bcf	status,0,c
  3643  00FEF4  362C               	rlcf	??_filtro,f,c
  3644  00FEF6  362D               	rlcf	??_filtro+1,f,c
  3645  00FEF8  0E02               	movlw	2
  3646  00FEFA  262C               	addwf	??_filtro,f,c
  3647  00FEFC  0E00               	movlw	0
  3648  00FEFE  222D               	addwfc	??_filtro+1,f,c
  3649  00FF00  0E00               	movlw	low _u
  3650  00FF02  242C               	addwf	??_filtro,w,c
  3651  00FF04  6ED9               	movwf	fsr2l,c
  3652  00FF06  0E01               	movlw	high _u
  3653  00FF08  202D               	addwfc	??_filtro+1,w,c
  3654  00FF0A  6EDA               	movwf	fsr2h,c
  3655  00FF0C  CFDE F102          	movff	postinc2,_u+2
  3656  00FF10  CFDD F103          	movff	postdec2,_u+3
  3657                           
  3658                           ;filtro.c: 21: u[0]=u[k+0];
  3659  00FF14  90D8               	bcf	status,0,c
  3660  00FF16  3451               	rlcf	_k,w,c
  3661  00FF18  6ED9               	movwf	fsr2l,c
  3662  00FF1A  3452               	rlcf	_k+1,w,c
  3663  00FF1C  6EDA               	movwf	fsr2h,c
  3664  00FF1E  0E00               	movlw	low _u
  3665  00FF20  26D9               	addwf	fsr2l,f,c
  3666  00FF22  0E01               	movlw	high _u
  3667  00FF24  22DA               	addwfc	fsr2h,f,c
  3668  00FF26  CFDE F100          	movff	postinc2,_u
  3669  00FF2A  CFDD F101          	movff	postdec2,_u+1
  3670                           
  3671                           ;filtro.c: 23: y[2]=y[k+2];
  3672  00FF2E  0E02               	movlw	2
  3673  00FF30  2451               	addwf	_k,w,c
  3674  00FF32  6E05               	movwf	___wmul@multiplier,c
  3675  00FF34  0E00               	movlw	0
  3676  00FF36  2052               	addwfc	_k+1,w,c
  3677  00FF38  6E06               	movwf	___wmul@multiplier+1,c
  3678  00FF3A  0E00               	movlw	0
  3679  00FF3C  6E08               	movwf	___wmul@multiplicand+1,c
  3680  00FF3E  0E03               	movlw	3
  3681  00FF40  6E07               	movwf	___wmul@multiplicand,c
  3682  00FF42  ECB5  F077         	call	___wmul	;wreg free
  3683  00FF46  0EC8               	movlw	low _y
  3684  00FF48  2405               	addwf	?___wmul,w,c
  3685  00FF4A  6ED9               	movwf	fsr2l,c
  3686  00FF4C  0E01               	movlw	high _y
  3687  00FF4E  2006               	addwfc	?___wmul+1,w,c
  3688  00FF50  6EDA               	movwf	fsr2h,c
  3689  00FF52  CFDE F1CE          	movff	postinc2,_y+6
  3690  00FF56  CFDE F1CF          	movff	postinc2,_y+7
  3691  00FF5A  CFDD F1D0          	movff	postdec2,_y+8
  3692                           
  3693                           ;filtro.c: 24: y[1]=y[k+1];
  3694  00FF5E  0E01               	movlw	1
  3695  00FF60  2451               	addwf	_k,w,c
  3696  00FF62  6E05               	movwf	___wmul@multiplier,c
  3697  00FF64  0E00               	movlw	0
  3698  00FF66  2052               	addwfc	_k+1,w,c
  3699  00FF68  6E06               	movwf	___wmul@multiplier+1,c
  3700  00FF6A  0E00               	movlw	0
  3701  00FF6C  6E08               	movwf	___wmul@multiplicand+1,c
  3702  00FF6E  0E03               	movlw	3
  3703  00FF70  6E07               	movwf	___wmul@multiplicand,c
  3704  00FF72  ECB5  F077         	call	___wmul	;wreg free
  3705  00FF76  0EC8               	movlw	low _y
  3706  00FF78  2405               	addwf	?___wmul,w,c
  3707  00FF7A  6ED9               	movwf	fsr2l,c
  3708  00FF7C  0E01               	movlw	high _y
  3709  00FF7E  2006               	addwfc	?___wmul+1,w,c
  3710  00FF80  6EDA               	movwf	fsr2h,c
  3711  00FF82  CFDE F1CB          	movff	postinc2,_y+3
  3712  00FF86  CFDE F1CC          	movff	postinc2,_y+4
  3713  00FF8A  CFDD F1CD          	movff	postdec2,_y+5
  3714                           
  3715                           ;filtro.c: 25: y[0]=y[k+0];
  3716  00FF8E  C051  F005         	movff	_k,___wmul@multiplier
  3717  00FF92  C052  F006         	movff	_k+1,___wmul@multiplier+1
  3718  00FF96  0E00               	movlw	0
  3719  00FF98  6E08               	movwf	___wmul@multiplicand+1,c
  3720  00FF9A  0E03               	movlw	3
  3721  00FF9C  6E07               	movwf	___wmul@multiplicand,c
  3722  00FF9E  ECB5  F077         	call	___wmul	;wreg free
  3723  00FFA2  0EC8               	movlw	low _y
  3724  00FFA4  2405               	addwf	?___wmul,w,c
  3725  00FFA6  6ED9               	movwf	fsr2l,c
  3726  00FFA8  0E01               	movlw	high _y
  3727  00FFAA  2006               	addwfc	?___wmul+1,w,c
  3728  00FFAC  6EDA               	movwf	fsr2h,c
  3729  00FFAE  CFDE F1C8          	movff	postinc2,_y
  3730  00FFB2  CFDE F1C9          	movff	postinc2,_y+1
  3731  00FFB6  CFDD F1CA          	movff	postdec2,_y+2
  3732                           
  3733                           ;filtro.c: 26: k=0;
  3734  00FFBA  0E00               	movlw	0
  3735  00FFBC  6E52               	movwf	_k+1,c
  3736  00FFBE  0E00               	movlw	0
  3737  00FFC0  6E51               	movwf	_k,c
  3738  00FFC2                     l2147:
  3739                           
  3740                           ;filtro.c: 27: }
  3741                           ;filtro.c: 29: return y[k+3];
  3742  00FFC2  0E03               	movlw	3
  3743  00FFC4  2451               	addwf	_k,w,c
  3744  00FFC6  6E05               	movwf	___wmul@multiplier,c
  3745  00FFC8  0E00               	movlw	0
  3746  00FFCA  2052               	addwfc	_k+1,w,c
  3747  00FFCC  6E06               	movwf	___wmul@multiplier+1,c
  3748  00FFCE  0E00               	movlw	0
  3749  00FFD0  6E08               	movwf	___wmul@multiplicand+1,c
  3750  00FFD2  0E03               	movlw	3
  3751  00FFD4  6E07               	movwf	___wmul@multiplicand,c
  3752  00FFD6  ECB5  F077         	call	___wmul	;wreg free
  3753  00FFDA  0EC8               	movlw	low _y
  3754  00FFDC  2405               	addwf	?___wmul,w,c
  3755  00FFDE  6ED9               	movwf	fsr2l,c
  3756  00FFE0  0E01               	movlw	high _y
  3757  00FFE2  2006               	addwfc	?___wmul+1,w,c
  3758  00FFE4  6EDA               	movwf	fsr2h,c
  3759  00FFE6  CFDE F00B          	movff	postinc2,___fttol@f1
  3760  00FFEA  CFDE F00C          	movff	postinc2,___fttol@f1+1
  3761  00FFEE  CFDD F00D          	movff	postdec2,___fttol@f1+2
  3762  00FFF2  EC30  F07A         	call	___fttol	;wreg free
  3763  00FFF6  C00B  F02A         	movff	?___fttol,?_filtro
  3764  00FFFA  C00C  F02B         	movff	?___fttol+1,?_filtro+1
  3765  00FFFE  0012               	return	
  3766  010000                     __end_of_filtro:
  3767                           	opt stack 0
  3768                           tblptru	equ	0xFF8
  3769                           tblptrh	equ	0xFF7
  3770                           tblptrl	equ	0xFF6
  3771                           tablat	equ	0xFF5
  3772                           prodh	equ	0xFF4
  3773                           prodl	equ	0xFF3
  3774                           postinc0	equ	0xFEE
  3775                           wreg	equ	0xFE8
  3776                           postinc1	equ	0xFE6
  3777                           postdec1	equ	0xFE5
  3778                           fsr1h	equ	0xFE2
  3779                           fsr1l	equ	0xFE1
  3780                           indf2	equ	0xFDF
  3781                           postinc2	equ	0xFDE
  3782                           postdec2	equ	0xFDD
  3783                           fsr2h	equ	0xFDA
  3784                           fsr2l	equ	0xFD9
  3785                           status	equ	0xFD8
  3786                           
  3787 ;; *************** function ___wmul *****************
  3788 ;; Defined at:
  3789 ;;		line 15 in file "/opt/microchip/xc8/v1.35/sources/common/Umul16.c"
  3790 ;; Parameters:    Size  Location     Type
  3791 ;;  multiplier      2    4[COMRAM] unsigned int 
  3792 ;;  multiplicand    2    6[COMRAM] unsigned int 
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;  product         2    8[COMRAM] unsigned int 
  3795 ;; Return value:  Size  Location     Type
  3796 ;;                  2    4[COMRAM] unsigned int 
  3797 ;; Registers used:
  3798 ;;		wreg, status,2, status,0, prodl, prodh
  3799 ;; Tracked objects:
  3800 ;;		On entry : 0/0
  3801 ;;		On exit  : 0/0
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3804 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3805 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3807 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3808 ;;Total ram usage:        6 bytes
  3809 ;; Hardware stack levels used:    1
  3810 ;; This function calls:
  3811 ;;		Nothing
  3812 ;; This function is called by:
  3813 ;;		_main
  3814 ;;		_filtro
  3815 ;; This function uses a non-reentrant model
  3816 ;;
  3817                           
  3818                           	psect	text25
  3819  00EF6A                     __ptext25:
  3820                           	opt stack 0
  3821  00EF6A                     ___wmul:
  3822                           	opt stack 29
  3823                           
  3824                           ;incstack = 0
  3825  00EF6A  5005               	movf	___wmul@multiplier,w,c
  3826  00EF6C  0207               	mulwf	___wmul@multiplicand,c
  3827  00EF6E  CFF3 F009          	movff	prodl,___wmul@product
  3828  00EF72  CFF4 F00A          	movff	prodh,___wmul@product+1
  3829  00EF76  5005               	movf	___wmul@multiplier,w,c
  3830  00EF78  0208               	mulwf	___wmul@multiplicand+1,c
  3831  00EF7A  50F3               	movf	prodl,w,c
  3832  00EF7C  260A               	addwf	___wmul@product+1,f,c
  3833  00EF7E  5006               	movf	___wmul@multiplier+1,w,c
  3834  00EF80  0207               	mulwf	___wmul@multiplicand,c
  3835  00EF82  50F3               	movf	prodl,w,c
  3836  00EF84  260A               	addwf	___wmul@product+1,f,c
  3837  00EF86  C009  F005         	movff	___wmul@product,?___wmul
  3838  00EF8A  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  3839  00EF8E  0012               	return	
  3840  00EF90                     __end_of___wmul:
  3841                           	opt stack 0
  3842                           tblptru	equ	0xFF8
  3843                           tblptrh	equ	0xFF7
  3844                           tblptrl	equ	0xFF6
  3845                           tablat	equ	0xFF5
  3846                           prodh	equ	0xFF4
  3847                           prodl	equ	0xFF3
  3848                           postinc0	equ	0xFEE
  3849                           wreg	equ	0xFE8
  3850                           postinc1	equ	0xFE6
  3851                           postdec1	equ	0xFE5
  3852                           fsr1h	equ	0xFE2
  3853                           fsr1l	equ	0xFE1
  3854                           indf2	equ	0xFDF
  3855                           postinc2	equ	0xFDE
  3856                           postdec2	equ	0xFDD
  3857                           fsr2h	equ	0xFDA
  3858                           fsr2l	equ	0xFD9
  3859                           status	equ	0xFD8
  3860                           
  3861 ;; *************** function ___lwtoft *****************
  3862 ;; Defined at:
  3863 ;;		line 28 in file "/opt/microchip/xc8/v1.35/sources/common/lwtoft.c"
  3864 ;; Parameters:    Size  Location     Type
  3865 ;;  c               2    8[COMRAM] unsigned int 
  3866 ;; Auto vars:     Size  Location     Type
  3867 ;;		None
  3868 ;; Return value:  Size  Location     Type
  3869 ;;                  3    8[COMRAM] float 
  3870 ;; Registers used:
  3871 ;;		wreg, status,2, status,0, cstack
  3872 ;; Tracked objects:
  3873 ;;		On entry : 0/0
  3874 ;;		On exit  : 0/0
  3875 ;;		Unchanged: 0/0
  3876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3877 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3880 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3881 ;;Total ram usage:        3 bytes
  3882 ;; Hardware stack levels used:    1
  3883 ;; Hardware stack levels required when called:    1
  3884 ;; This function calls:
  3885 ;;		___ftpack
  3886 ;; This function is called by:
  3887 ;;		_printFloat
  3888 ;;		_main
  3889 ;;		_filtro
  3890 ;; This function uses a non-reentrant model
  3891 ;;
  3892                           
  3893                           	psect	text26
  3894  00EEFE                     __ptext26:
  3895                           	opt stack 0
  3896  00EEFE                     ___lwtoft:
  3897                           	opt stack 27
  3898                           
  3899                           ;incstack = 0
  3900  00EEFE  C009  F001         	movff	___lwtoft@c,___ftpack@arg
  3901  00EF02  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
  3902  00EF06  6A03               	clrf	___ftpack@arg+2,c
  3903  00EF08  0E8E               	movlw	142
  3904  00EF0A  6E04               	movwf	___ftpack@exp,c
  3905  00EF0C  0E00               	movlw	0
  3906  00EF0E  6E05               	movwf	___ftpack@sign,c
  3907  00EF10  ECEC  F078         	call	___ftpack	;wreg free
  3908  00EF14  C001  F009         	movff	?___ftpack,?___lwtoft
  3909  00EF18  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
  3910  00EF1C  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
  3911  00EF20  0012               	return	
  3912  00EF22                     __end_of___lwtoft:
  3913                           	opt stack 0
  3914                           tblptru	equ	0xFF8
  3915                           tblptrh	equ	0xFF7
  3916                           tblptrl	equ	0xFF6
  3917                           tablat	equ	0xFF5
  3918                           prodh	equ	0xFF4
  3919                           prodl	equ	0xFF3
  3920                           postinc0	equ	0xFEE
  3921                           wreg	equ	0xFE8
  3922                           postinc1	equ	0xFE6
  3923                           postdec1	equ	0xFE5
  3924                           fsr1h	equ	0xFE2
  3925                           fsr1l	equ	0xFE1
  3926                           indf2	equ	0xFDF
  3927                           postinc2	equ	0xFDE
  3928                           postdec2	equ	0xFDD
  3929                           fsr2h	equ	0xFDA
  3930                           fsr2l	equ	0xFD9
  3931                           status	equ	0xFD8
  3932                           
  3933 ;; *************** function ___fttol *****************
  3934 ;; Defined at:
  3935 ;;		line 44 in file "/opt/microchip/xc8/v1.35/sources/common/fttol.c"
  3936 ;; Parameters:    Size  Location     Type
  3937 ;;  f1              3   10[COMRAM] float 
  3938 ;; Auto vars:     Size  Location     Type
  3939 ;;  lval            4   20[COMRAM] unsigned long 
  3940 ;;  exp1            1   24[COMRAM] unsigned char 
  3941 ;;  sign1           1   19[COMRAM] unsigned char 
  3942 ;; Return value:  Size  Location     Type
  3943 ;;                  4   10[COMRAM] long 
  3944 ;; Registers used:
  3945 ;;		wreg, status,2, status,0
  3946 ;; Tracked objects:
  3947 ;;		On entry : 0/0
  3948 ;;		On exit  : 0/0
  3949 ;;		Unchanged: 0/0
  3950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3951 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3952 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3953 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3954 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3955 ;;Total ram usage:       15 bytes
  3956 ;; Hardware stack levels used:    1
  3957 ;; This function calls:
  3958 ;;		Nothing
  3959 ;; This function is called by:
  3960 ;;		_printFloat
  3961 ;;		_filtro
  3962 ;; This function uses a non-reentrant model
  3963 ;;
  3964                           
  3965                           	psect	text27
  3966  00F460                     __ptext27:
  3967                           	opt stack 0
  3968  00F460                     ___fttol:
  3969                           	opt stack 28
  3970                           
  3971                           ;incstack = 0
  3972  00F460  C00D  F00F         	movff	___fttol@f1+2,??___fttol
  3973  00F464  6A10               	clrf	(??___fttol+1)& (0+255),c
  3974  00F466  6A11               	clrf	(??___fttol+2)& (0+255),c
  3975  00F468  340C               	rlcf	___fttol@f1+1,w,c
  3976  00F46A  360F               	rlcf	??___fttol& (0+255),f,c
  3977  00F46C  E301               	bnc	u1241
  3978  00F46E  8010               	bsf	(??___fttol+1)& (0+255),0,c
  3979  00F470                     u1241:
  3980  00F470  500F               	movf	??___fttol,w,c
  3981  00F472  6E19               	movwf	___fttol@exp1,c
  3982  00F474  5019               	movf	___fttol@exp1,w,c
  3983  00F476  A4D8               	btfss	status,2,c
  3984  00F478  D009               	goto	l1847
  3985  00F47A  0E00               	movlw	0
  3986  00F47C  6E0B               	movwf	?___fttol,c
  3987  00F47E  0E00               	movlw	0
  3988  00F480  6E0C               	movwf	?___fttol+1,c
  3989  00F482  0E00               	movlw	0
  3990  00F484  6E0D               	movwf	?___fttol+2,c
  3991  00F486  0E00               	movlw	0
  3992  00F488  6E0E               	movwf	?___fttol+3,c
  3993  00F48A  0012               	return	
  3994  00F48C                     l1847:
  3995  00F48C  0E17               	movlw	23
  3996  00F48E  6E0F               	movwf	??___fttol& (0+255),c
  3997  00F490  C00B  F010         	movff	___fttol@f1,??___fttol+1
  3998  00F494  C00C  F011         	movff	___fttol@f1+1,??___fttol+2
  3999  00F498  C00D  F012         	movff	___fttol@f1+2,??___fttol+3
  4000  00F49C  280F               	incf	??___fttol,w,c
  4001  00F49E  6E13               	movwf	(??___fttol+4)& (0+255),c
  4002  00F4A0  D004               	goto	u1260
  4003  00F4A2                     u1265:
  4004  00F4A2  90D8               	bcf	status,0,c
  4005  00F4A4  3212               	rrcf	??___fttol+3,f,c
  4006  00F4A6  3211               	rrcf	??___fttol+2,f,c
  4007  00F4A8  3210               	rrcf	??___fttol+1,f,c
  4008  00F4AA                     u1260:
  4009  00F4AA  2E13               	decfsz	(??___fttol+4)& (0+255),f,c
  4010  00F4AC  D7FA               	goto	u1265
  4011  00F4AE  5010               	movf	??___fttol+1,w,c
  4012  00F4B0  6E14               	movwf	___fttol@sign1,c
  4013  00F4B2  8E0C               	bsf	___fttol@f1+1,7,c
  4014  00F4B4  0EFF               	movlw	255
  4015  00F4B6  160B               	andwf	___fttol@f1,f,c
  4016  00F4B8  0EFF               	movlw	255
  4017  00F4BA  160C               	andwf	___fttol@f1+1,f,c
  4018  00F4BC  0E00               	movlw	0
  4019  00F4BE  160D               	andwf	___fttol@f1+2,f,c
  4020  00F4C0  500B               	movf	___fttol@f1,w,c
  4021  00F4C2  6E15               	movwf	___fttol@lval,c
  4022  00F4C4  500C               	movf	___fttol@f1+1,w,c
  4023  00F4C6  6E16               	movwf	___fttol@lval+1,c
  4024  00F4C8  500D               	movf	___fttol@f1+2,w,c
  4025  00F4CA  6E17               	movwf	___fttol@lval+2,c
  4026  00F4CC  6A18               	clrf	___fttol@lval+3,c
  4027  00F4CE  0E8E               	movlw	142
  4028  00F4D0  5E19               	subwf	___fttol@exp1,f,c
  4029  00F4D2  AE19               	btfss	___fttol@exp1,7,c
  4030  00F4D4  D016               	goto	l1869
  4031  00F4D6  5019               	movf	___fttol@exp1,w,c
  4032  00F4D8  0A80               	xorlw	128
  4033  00F4DA  0F8F               	addlw	143
  4034  00F4DC  B0D8               	btfsc	status,0,c
  4035  00F4DE  D009               	goto	l1865
  4036  00F4E0  0E00               	movlw	0
  4037  00F4E2  6E0B               	movwf	?___fttol,c
  4038  00F4E4  0E00               	movlw	0
  4039  00F4E6  6E0C               	movwf	?___fttol+1,c
  4040  00F4E8  0E00               	movlw	0
  4041  00F4EA  6E0D               	movwf	?___fttol+2,c
  4042  00F4EC  0E00               	movlw	0
  4043  00F4EE  6E0E               	movwf	?___fttol+3,c
  4044  00F4F0  0012               	return	
  4045  00F4F2                     l1865:
  4046  00F4F2  90D8               	bcf	status,0,c
  4047  00F4F4  3218               	rrcf	___fttol@lval+3,f,c
  4048  00F4F6  3217               	rrcf	___fttol@lval+2,f,c
  4049  00F4F8  3216               	rrcf	___fttol@lval+1,f,c
  4050  00F4FA  3215               	rrcf	___fttol@lval,f,c
  4051  00F4FC  3E19               	incfsz	___fttol@exp1,f,c
  4052  00F4FE  D7F9               	goto	l1865
  4053  00F500  D015               	goto	l1879
  4054  00F502                     l1869:
  4055  00F502  0E17               	movlw	23
  4056  00F504  6419               	cpfsgt	___fttol@exp1,c
  4057  00F506  D00F               	goto	l1877
  4058  00F508  0E00               	movlw	0
  4059  00F50A  6E0B               	movwf	?___fttol,c
  4060  00F50C  0E00               	movlw	0
  4061  00F50E  6E0C               	movwf	?___fttol+1,c
  4062  00F510  0E00               	movlw	0
  4063  00F512  6E0D               	movwf	?___fttol+2,c
  4064  00F514  0E00               	movlw	0
  4065  00F516  6E0E               	movwf	?___fttol+3,c
  4066  00F518  0012               	return	
  4067  00F51A                     l1875:
  4068  00F51A  90D8               	bcf	status,0,c
  4069  00F51C  3615               	rlcf	___fttol@lval,f,c
  4070  00F51E  3616               	rlcf	___fttol@lval+1,f,c
  4071  00F520  3617               	rlcf	___fttol@lval+2,f,c
  4072  00F522  3618               	rlcf	___fttol@lval+3,f,c
  4073  00F524  0619               	decf	___fttol@exp1,f,c
  4074  00F526                     l1877:
  4075  00F526  5019               	movf	___fttol@exp1,w,c
  4076  00F528  A4D8               	btfss	status,2,c
  4077  00F52A  D7F7               	goto	l1875
  4078  00F52C                     l1879:
  4079  00F52C  5014               	movf	___fttol@sign1,w,c
  4080  00F52E  B4D8               	btfsc	status,2,c
  4081  00F530  D008               	goto	l1883
  4082  00F532  1E18               	comf	___fttol@lval+3,f,c
  4083  00F534  1E17               	comf	___fttol@lval+2,f,c
  4084  00F536  1E16               	comf	___fttol@lval+1,f,c
  4085  00F538  6C15               	negf	___fttol@lval,c
  4086  00F53A  0E00               	movlw	0
  4087  00F53C  2216               	addwfc	___fttol@lval+1,f,c
  4088  00F53E  2217               	addwfc	___fttol@lval+2,f,c
  4089  00F540  2218               	addwfc	___fttol@lval+3,f,c
  4090  00F542                     l1883:
  4091  00F542  C015  F00B         	movff	___fttol@lval,?___fttol
  4092  00F546  C016  F00C         	movff	___fttol@lval+1,?___fttol+1
  4093  00F54A  C017  F00D         	movff	___fttol@lval+2,?___fttol+2
  4094  00F54E  C018  F00E         	movff	___fttol@lval+3,?___fttol+3
  4095  00F552  0012               	return	
  4096  00F554                     __end_of___fttol:
  4097                           	opt stack 0
  4098                           tblptru	equ	0xFF8
  4099                           tblptrh	equ	0xFF7
  4100                           tblptrl	equ	0xFF6
  4101                           tablat	equ	0xFF5
  4102                           prodh	equ	0xFF4
  4103                           prodl	equ	0xFF3
  4104                           postinc0	equ	0xFEE
  4105                           wreg	equ	0xFE8
  4106                           postinc1	equ	0xFE6
  4107                           postdec1	equ	0xFE5
  4108                           fsr1h	equ	0xFE2
  4109                           fsr1l	equ	0xFE1
  4110                           indf2	equ	0xFDF
  4111                           postinc2	equ	0xFDE
  4112                           postdec2	equ	0xFDD
  4113                           fsr2h	equ	0xFDA
  4114                           fsr2l	equ	0xFD9
  4115                           status	equ	0xFD8
  4116                           
  4117 ;; *************** function ___ftneg *****************
  4118 ;; Defined at:
  4119 ;;		line 15 in file "/opt/microchip/xc8/v1.35/sources/common/ftneg.c"
  4120 ;; Parameters:    Size  Location     Type
  4121 ;;  f1              3   26[COMRAM] float 
  4122 ;; Auto vars:     Size  Location     Type
  4123 ;;		None
  4124 ;; Return value:  Size  Location     Type
  4125 ;;                  3   26[COMRAM] float 
  4126 ;; Registers used:
  4127 ;;		wreg, status,2, status,0
  4128 ;; Tracked objects:
  4129 ;;		On entry : 0/0
  4130 ;;		On exit  : 0/0
  4131 ;;		Unchanged: 0/0
  4132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4133 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4136 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4137 ;;Total ram usage:        3 bytes
  4138 ;; Hardware stack levels used:    1
  4139 ;; This function calls:
  4140 ;;		Nothing
  4141 ;; This function is called by:
  4142 ;;		_printFloat
  4143 ;;		_filtro
  4144 ;; This function uses a non-reentrant model
  4145 ;;
  4146                           
  4147                           	psect	text28
  4148  00EEDA                     __ptext28:
  4149                           	opt stack 0
  4150  00EEDA                     ___ftneg:
  4151                           	opt stack 28
  4152                           
  4153                           ;incstack = 0
  4154  00EEDA  501B               	movf	___ftneg@f1,w,c
  4155  00EEDC  101C               	iorwf	___ftneg@f1+1,w,c
  4156  00EEDE  101D               	iorwf	___ftneg@f1+2,w,c
  4157  00EEE0  B4D8               	btfsc	status,2,c
  4158  00EEE2  D006               	goto	l630
  4159  00EEE4  0E00               	movlw	0
  4160  00EEE6  1A1B               	xorwf	___ftneg@f1,f,c
  4161  00EEE8  0E00               	movlw	0
  4162  00EEEA  1A1C               	xorwf	___ftneg@f1+1,f,c
  4163  00EEEC  0E80               	movlw	128
  4164  00EEEE  1A1D               	xorwf	___ftneg@f1+2,f,c
  4165  00EEF0                     l630:
  4166  00EEF0  C01B  F01B         	movff	___ftneg@f1,?___ftneg
  4167  00EEF4  C01C  F01C         	movff	___ftneg@f1+1,?___ftneg+1
  4168  00EEF8  C01D  F01D         	movff	___ftneg@f1+2,?___ftneg+2
  4169  00EEFC  0012               	return		;funcret
  4170  00EEFE                     __end_of___ftneg:
  4171                           	opt stack 0
  4172                           tblptru	equ	0xFF8
  4173                           tblptrh	equ	0xFF7
  4174                           tblptrl	equ	0xFF6
  4175                           tablat	equ	0xFF5
  4176                           prodh	equ	0xFF4
  4177                           prodl	equ	0xFF3
  4178                           postinc0	equ	0xFEE
  4179                           wreg	equ	0xFE8
  4180                           postinc1	equ	0xFE6
  4181                           postdec1	equ	0xFE5
  4182                           fsr1h	equ	0xFE2
  4183                           fsr1l	equ	0xFE1
  4184                           indf2	equ	0xFDF
  4185                           postinc2	equ	0xFDE
  4186                           postdec2	equ	0xFDD
  4187                           fsr2h	equ	0xFDA
  4188                           fsr2l	equ	0xFD9
  4189                           status	equ	0xFD8
  4190                           
  4191 ;; *************** function ___ftmul *****************
  4192 ;; Defined at:
  4193 ;;		line 62 in file "/opt/microchip/xc8/v1.35/sources/common/ftmul.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;  f1              3   11[COMRAM] float 
  4196 ;;  f2              3   14[COMRAM] float 
  4197 ;; Auto vars:     Size  Location     Type
  4198 ;;  f3_as_produc    3   21[COMRAM] unsigned um
  4199 ;;  sign            1   25[COMRAM] unsigned char 
  4200 ;;  cntr            1   24[COMRAM] unsigned char 
  4201 ;;  exp             1   20[COMRAM] unsigned char 
  4202 ;; Return value:  Size  Location     Type
  4203 ;;                  3   11[COMRAM] float 
  4204 ;; Registers used:
  4205 ;;		wreg, status,2, status,0, cstack
  4206 ;; Tracked objects:
  4207 ;;		On entry : 0/0
  4208 ;;		On exit  : 0/0
  4209 ;;		Unchanged: 0/0
  4210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4211 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4212 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4213 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4214 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4215 ;;Total ram usage:       15 bytes
  4216 ;; Hardware stack levels used:    1
  4217 ;; Hardware stack levels required when called:    1
  4218 ;; This function calls:
  4219 ;;		___ftpack
  4220 ;; This function is called by:
  4221 ;;		_printFloat
  4222 ;;		_main
  4223 ;;		_filtro
  4224 ;; This function uses a non-reentrant model
  4225 ;;
  4226                           
  4227                           	psect	text29
  4228  00F36C                     __ptext29:
  4229                           	opt stack 0
  4230  00F36C                     ___ftmul:
  4231                           	opt stack 27
  4232                           
  4233                           ;incstack = 0
  4234  00F36C  C00E  F012         	movff	___ftmul@f1+2,??___ftmul
  4235  00F370  6A13               	clrf	(??___ftmul+1)& (0+255),c
  4236  00F372  6A14               	clrf	(??___ftmul+2)& (0+255),c
  4237  00F374  340D               	rlcf	___ftmul@f1+1,w,c
  4238  00F376  3612               	rlcf	??___ftmul& (0+255),f,c
  4239  00F378  E301               	bnc	u1161
  4240  00F37A  8013               	bsf	(??___ftmul+1)& (0+255),0,c
  4241  00F37C                     u1161:
  4242  00F37C  5012               	movf	??___ftmul,w,c
  4243  00F37E  6E15               	movwf	___ftmul@exp,c
  4244  00F380  5015               	movf	___ftmul@exp,w,c
  4245  00F382  A4D8               	btfss	status,2,c
  4246  00F384  D007               	goto	l1787
  4247  00F386  0E00               	movlw	0
  4248  00F388  6E0C               	movwf	?___ftmul,c
  4249  00F38A  0E00               	movlw	0
  4250  00F38C  6E0D               	movwf	?___ftmul+1,c
  4251  00F38E  0E00               	movlw	0
  4252  00F390  6E0E               	movwf	?___ftmul+2,c
  4253  00F392  0012               	return	
  4254  00F394                     l1787:
  4255  00F394  C011  F012         	movff	___ftmul@f2+2,??___ftmul
  4256  00F398  6A13               	clrf	(??___ftmul+1)& (0+255),c
  4257  00F39A  6A14               	clrf	(??___ftmul+2)& (0+255),c
  4258  00F39C  3410               	rlcf	___ftmul@f2+1,w,c
  4259  00F39E  3612               	rlcf	??___ftmul& (0+255),f,c
  4260  00F3A0  E301               	bnc	u1181
  4261  00F3A2  8013               	bsf	(??___ftmul+1)& (0+255),0,c
  4262  00F3A4                     u1181:
  4263  00F3A4  5012               	movf	??___ftmul,w,c
  4264  00F3A6  6E1A               	movwf	___ftmul@sign,c
  4265  00F3A8  501A               	movf	___ftmul@sign,w,c
  4266  00F3AA  A4D8               	btfss	status,2,c
  4267  00F3AC  D007               	goto	l1793
  4268  00F3AE  0E00               	movlw	0
  4269  00F3B0  6E0C               	movwf	?___ftmul,c
  4270  00F3B2  0E00               	movlw	0
  4271  00F3B4  6E0D               	movwf	?___ftmul+1,c
  4272  00F3B6  0E00               	movlw	0
  4273  00F3B8  6E0E               	movwf	?___ftmul+2,c
  4274  00F3BA  0012               	return	
  4275  00F3BC                     l1793:
  4276  00F3BC  501A               	movf	___ftmul@sign,w,c
  4277  00F3BE  0F7B               	addlw	123
  4278  00F3C0  2615               	addwf	___ftmul@exp,f,c
  4279  00F3C2  C00E  F01A         	movff	___ftmul@f1+2,___ftmul@sign
  4280  00F3C6  5011               	movf	___ftmul@f2+2,w,c
  4281  00F3C8  1A1A               	xorwf	___ftmul@sign,f,c
  4282  00F3CA  0E80               	movlw	128
  4283  00F3CC  161A               	andwf	___ftmul@sign,f,c
  4284  00F3CE  8E0D               	bsf	___ftmul@f1+1,7,c
  4285  00F3D0  8E10               	bsf	___ftmul@f2+1,7,c
  4286  00F3D2  0EFF               	movlw	255
  4287  00F3D4  160F               	andwf	___ftmul@f2,f,c
  4288  00F3D6  0EFF               	movlw	255
  4289  00F3D8  1610               	andwf	___ftmul@f2+1,f,c
  4290  00F3DA  0E00               	movlw	0
  4291  00F3DC  1611               	andwf	___ftmul@f2+2,f,c
  4292  00F3DE  0E00               	movlw	0
  4293  00F3E0  6E16               	movwf	___ftmul@f3_as_product,c
  4294  00F3E2  0E00               	movlw	0
  4295  00F3E4  6E17               	movwf	___ftmul@f3_as_product+1,c
  4296  00F3E6  0E00               	movlw	0
  4297  00F3E8  6E18               	movwf	___ftmul@f3_as_product+2,c
  4298  00F3EA  0E07               	movlw	7
  4299  00F3EC  6E19               	movwf	___ftmul@cntr,c
  4300  00F3EE                     l1807:
  4301  00F3EE  A00C               	btfss	___ftmul@f1,0,c
  4302  00F3F0  D006               	goto	l1811
  4303  00F3F2  500F               	movf	___ftmul@f2,w,c
  4304  00F3F4  2616               	addwf	___ftmul@f3_as_product,f,c
  4305  00F3F6  5010               	movf	___ftmul@f2+1,w,c
  4306  00F3F8  2217               	addwfc	___ftmul@f3_as_product+1,f,c
  4307  00F3FA  5011               	movf	___ftmul@f2+2,w,c
  4308  00F3FC  2218               	addwfc	___ftmul@f3_as_product+2,f,c
  4309  00F3FE                     l1811:
  4310  00F3FE  90D8               	bcf	status,0,c
  4311  00F400  320E               	rrcf	___ftmul@f1+2,f,c
  4312  00F402  320D               	rrcf	___ftmul@f1+1,f,c
  4313  00F404  320C               	rrcf	___ftmul@f1,f,c
  4314  00F406  90D8               	bcf	status,0,c
  4315  00F408  360F               	rlcf	___ftmul@f2,f,c
  4316  00F40A  3610               	rlcf	___ftmul@f2+1,f,c
  4317  00F40C  3611               	rlcf	___ftmul@f2+2,f,c
  4318  00F40E  2E19               	decfsz	___ftmul@cntr,f,c
  4319  00F410  D7EE               	goto	l1807
  4320  00F412  0E09               	movlw	9
  4321  00F414  6E19               	movwf	___ftmul@cntr,c
  4322  00F416                     l1817:
  4323  00F416  A00C               	btfss	___ftmul@f1,0,c
  4324  00F418  D006               	goto	l1821
  4325  00F41A  500F               	movf	___ftmul@f2,w,c
  4326  00F41C  2616               	addwf	___ftmul@f3_as_product,f,c
  4327  00F41E  5010               	movf	___ftmul@f2+1,w,c
  4328  00F420  2217               	addwfc	___ftmul@f3_as_product+1,f,c
  4329  00F422  5011               	movf	___ftmul@f2+2,w,c
  4330  00F424  2218               	addwfc	___ftmul@f3_as_product+2,f,c
  4331  00F426                     l1821:
  4332  00F426  90D8               	bcf	status,0,c
  4333  00F428  320E               	rrcf	___ftmul@f1+2,f,c
  4334  00F42A  320D               	rrcf	___ftmul@f1+1,f,c
  4335  00F42C  320C               	rrcf	___ftmul@f1,f,c
  4336  00F42E  90D8               	bcf	status,0,c
  4337  00F430  3218               	rrcf	___ftmul@f3_as_product+2,f,c
  4338  00F432  3217               	rrcf	___ftmul@f3_as_product+1,f,c
  4339  00F434  3216               	rrcf	___ftmul@f3_as_product,f,c
  4340  00F436  2E19               	decfsz	___ftmul@cntr,f,c
  4341  00F438  D7EE               	goto	l1817
  4342  00F43A  C016  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  4343  00F43E  C017  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  4344  00F442  C018  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  4345  00F446  C015  F004         	movff	___ftmul@exp,___ftpack@exp
  4346  00F44A  C01A  F005         	movff	___ftmul@sign,___ftpack@sign
  4347  00F44E  ECEC  F078         	call	___ftpack	;wreg free
  4348  00F452  C001  F00C         	movff	?___ftpack,?___ftmul
  4349  00F456  C002  F00D         	movff	?___ftpack+1,?___ftmul+1
  4350  00F45A  C003  F00E         	movff	?___ftpack+2,?___ftmul+2
  4351  00F45E  0012               	return	
  4352  00F460                     __end_of___ftmul:
  4353                           	opt stack 0
  4354                           tblptru	equ	0xFF8
  4355                           tblptrh	equ	0xFF7
  4356                           tblptrl	equ	0xFF6
  4357                           tablat	equ	0xFF5
  4358                           prodh	equ	0xFF4
  4359                           prodl	equ	0xFF3
  4360                           postinc0	equ	0xFEE
  4361                           wreg	equ	0xFE8
  4362                           postinc1	equ	0xFE6
  4363                           postdec1	equ	0xFE5
  4364                           fsr1h	equ	0xFE2
  4365                           fsr1l	equ	0xFE1
  4366                           indf2	equ	0xFDF
  4367                           postinc2	equ	0xFDE
  4368                           postdec2	equ	0xFDD
  4369                           fsr2h	equ	0xFDA
  4370                           fsr2l	equ	0xFD9
  4371                           status	equ	0xFD8
  4372                           
  4373 ;; *************** function ___ftadd *****************
  4374 ;; Defined at:
  4375 ;;		line 86 in file "/opt/microchip/xc8/v1.35/sources/common/ftadd.c"
  4376 ;; Parameters:    Size  Location     Type
  4377 ;;  f1              3   29[COMRAM] float 
  4378 ;;  f2              3   32[COMRAM] float 
  4379 ;; Auto vars:     Size  Location     Type
  4380 ;;  exp1            1   40[COMRAM] unsigned char 
  4381 ;;  exp2            1   39[COMRAM] unsigned char 
  4382 ;;  sign            1   38[COMRAM] unsigned char 
  4383 ;; Return value:  Size  Location     Type
  4384 ;;                  3   29[COMRAM] float 
  4385 ;; Registers used:
  4386 ;;		wreg, status,2, status,0, cstack
  4387 ;; Tracked objects:
  4388 ;;		On entry : 0/0
  4389 ;;		On exit  : 0/0
  4390 ;;		Unchanged: 0/0
  4391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4392 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4393 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4394 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4395 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4396 ;;Total ram usage:       12 bytes
  4397 ;; Hardware stack levels used:    1
  4398 ;; Hardware stack levels required when called:    1
  4399 ;; This function calls:
  4400 ;;		___ftpack
  4401 ;; This function is called by:
  4402 ;;		_printFloat
  4403 ;;		_filtro
  4404 ;;		___ftsub
  4405 ;; This function uses a non-reentrant model
  4406 ;;
  4407                           
  4408                           	psect	text30
  4409  00F764                     __ptext30:
  4410                           	opt stack 0
  4411  00F764                     ___ftadd:
  4412                           	opt stack 26
  4413                           
  4414                           ;incstack = 0
  4415  00F764  C020  F024         	movff	___ftadd@f1+2,??___ftadd
  4416  00F768  6A25               	clrf	(??___ftadd+1)& (0+255),c
  4417  00F76A  6A26               	clrf	(??___ftadd+2)& (0+255),c
  4418  00F76C  341F               	rlcf	___ftadd@f1+1,w,c
  4419  00F76E  3624               	rlcf	??___ftadd& (0+255),f,c
  4420  00F770  E301               	bnc	u901
  4421  00F772  8025               	bsf	(??___ftadd+1)& (0+255),0,c
  4422  00F774                     u901:
  4423  00F774  5024               	movf	??___ftadd,w,c
  4424  00F776  6E29               	movwf	___ftadd@exp1,c
  4425  00F778  C023  F024         	movff	___ftadd@f2+2,??___ftadd
  4426  00F77C  6A25               	clrf	(??___ftadd+1)& (0+255),c
  4427  00F77E  6A26               	clrf	(??___ftadd+2)& (0+255),c
  4428  00F780  3422               	rlcf	___ftadd@f2+1,w,c
  4429  00F782  3624               	rlcf	??___ftadd& (0+255),f,c
  4430  00F784  E301               	bnc	u911
  4431  00F786  8025               	bsf	(??___ftadd+1)& (0+255),0,c
  4432  00F788                     u911:
  4433  00F788  5024               	movf	??___ftadd,w,c
  4434  00F78A  6E28               	movwf	___ftadd@exp2,c
  4435  00F78C  5029               	movf	___ftadd@exp1,w,c
  4436  00F78E  B4D8               	btfsc	status,2,c
  4437  00F790  D00B               	goto	l573
  4438  00F792  5028               	movf	___ftadd@exp2,w,c
  4439  00F794  5C29               	subwf	___ftadd@exp1,w,c
  4440  00F796  B0D8               	btfsc	status,0,c
  4441  00F798  D00E               	goto	l1673
  4442  00F79A  5029               	movf	___ftadd@exp1,w,c
  4443  00F79C  0800               	sublw	0
  4444  00F79E  2428               	addwf	___ftadd@exp2,w,c
  4445  00F7A0  6E24               	movwf	??___ftadd& (0+255),c
  4446  00F7A2  0E18               	movlw	24
  4447  00F7A4  6424               	cpfsgt	??___ftadd,c
  4448  00F7A6  D007               	goto	l1673
  4449  00F7A8                     l573:
  4450  00F7A8  C021  F01E         	movff	___ftadd@f2,?___ftadd
  4451  00F7AC  C022  F01F         	movff	___ftadd@f2+1,?___ftadd+1
  4452  00F7B0  C023  F020         	movff	___ftadd@f2+2,?___ftadd+2
  4453  00F7B4  0012               	return	
  4454  00F7B6                     l1673:
  4455  00F7B6  5028               	movf	___ftadd@exp2,w,c
  4456  00F7B8  B4D8               	btfsc	status,2,c
  4457  00F7BA  D00B               	goto	l577
  4458  00F7BC  5029               	movf	___ftadd@exp1,w,c
  4459  00F7BE  5C28               	subwf	___ftadd@exp2,w,c
  4460  00F7C0  B0D8               	btfsc	status,0,c
  4461  00F7C2  D00E               	goto	l1679
  4462  00F7C4  5028               	movf	___ftadd@exp2,w,c
  4463  00F7C6  0800               	sublw	0
  4464  00F7C8  2429               	addwf	___ftadd@exp1,w,c
  4465  00F7CA  6E24               	movwf	??___ftadd& (0+255),c
  4466  00F7CC  0E18               	movlw	24
  4467  00F7CE  6424               	cpfsgt	??___ftadd,c
  4468  00F7D0  D007               	goto	l1679
  4469  00F7D2                     l577:
  4470  00F7D2  C01E  F01E         	movff	___ftadd@f1,?___ftadd
  4471  00F7D6  C01F  F01F         	movff	___ftadd@f1+1,?___ftadd+1
  4472  00F7DA  C020  F020         	movff	___ftadd@f1+2,?___ftadd+2
  4473  00F7DE  0012               	return	
  4474  00F7E0                     l1679:
  4475  00F7E0  0E06               	movlw	6
  4476  00F7E2  6E27               	movwf	___ftadd@sign,c
  4477  00F7E4  BE20               	btfsc	___ftadd@f1+2,7,c
  4478  00F7E6  8E27               	bsf	___ftadd@sign,7,c
  4479  00F7E8  BE23               	btfsc	___ftadd@f2+2,7,c
  4480  00F7EA  8C27               	bsf	___ftadd@sign,6,c
  4481  00F7EC  8E1F               	bsf	___ftadd@f1+1,7,c
  4482  00F7EE  0EFF               	movlw	255
  4483  00F7F0  161E               	andwf	___ftadd@f1,f,c
  4484  00F7F2  0EFF               	movlw	255
  4485  00F7F4  161F               	andwf	___ftadd@f1+1,f,c
  4486  00F7F6  0E00               	movlw	0
  4487  00F7F8  1620               	andwf	___ftadd@f1+2,f,c
  4488  00F7FA  8E22               	bsf	___ftadd@f2+1,7,c
  4489  00F7FC  0EFF               	movlw	255
  4490  00F7FE  1621               	andwf	___ftadd@f2,f,c
  4491  00F800  0EFF               	movlw	255
  4492  00F802  1622               	andwf	___ftadd@f2+1,f,c
  4493  00F804  0E00               	movlw	0
  4494  00F806  1623               	andwf	___ftadd@f2+2,f,c
  4495  00F808  5028               	movf	___ftadd@exp2,w,c
  4496  00F80A  5C29               	subwf	___ftadd@exp1,w,c
  4497  00F80C  B0D8               	btfsc	status,0,c
  4498  00F80E  D01B               	goto	l1705
  4499  00F810                     l1695:
  4500  00F810  90D8               	bcf	status,0,c
  4501  00F812  3621               	rlcf	___ftadd@f2,f,c
  4502  00F814  3622               	rlcf	___ftadd@f2+1,f,c
  4503  00F816  3623               	rlcf	___ftadd@f2+2,f,c
  4504  00F818  0628               	decf	___ftadd@exp2,f,c
  4505  00F81A  5029               	movf	___ftadd@exp1,w,c
  4506  00F81C  1828               	xorwf	___ftadd@exp2,w,c
  4507  00F81E  B4D8               	btfsc	status,2,c
  4508  00F820  D00D               	goto	l1703
  4509  00F822  0627               	decf	___ftadd@sign,f,c
  4510  00F824  C027  F024         	movff	___ftadd@sign,??___ftadd
  4511  00F828  0E07               	movlw	7
  4512  00F82A  1624               	andwf	??___ftadd,f,c
  4513  00F82C  B4D8               	btfsc	status,2,c
  4514  00F82E  D006               	goto	l1703
  4515  00F830  D7EF               	goto	l1695
  4516  00F832                     l1701:
  4517  00F832  90D8               	bcf	status,0,c
  4518  00F834  3220               	rrcf	___ftadd@f1+2,f,c
  4519  00F836  321F               	rrcf	___ftadd@f1+1,f,c
  4520  00F838  321E               	rrcf	___ftadd@f1,f,c
  4521  00F83A  2A29               	incf	___ftadd@exp1,f,c
  4522  00F83C                     l1703:
  4523  00F83C  5028               	movf	___ftadd@exp2,w,c
  4524  00F83E  1829               	xorwf	___ftadd@exp1,w,c
  4525  00F840  B4D8               	btfsc	status,2,c
  4526  00F842  D01F               	goto	l588
  4527  00F844  D7F6               	goto	l1701
  4528  00F846                     l1705:
  4529  00F846  5029               	movf	___ftadd@exp1,w,c
  4530  00F848  5C28               	subwf	___ftadd@exp2,w,c
  4531  00F84A  B0D8               	btfsc	status,0,c
  4532  00F84C  D01A               	goto	l588
  4533  00F84E                     l1707:
  4534  00F84E  90D8               	bcf	status,0,c
  4535  00F850  361E               	rlcf	___ftadd@f1,f,c
  4536  00F852  361F               	rlcf	___ftadd@f1+1,f,c
  4537  00F854  3620               	rlcf	___ftadd@f1+2,f,c
  4538  00F856  0629               	decf	___ftadd@exp1,f,c
  4539  00F858  5029               	movf	___ftadd@exp1,w,c
  4540  00F85A  1828               	xorwf	___ftadd@exp2,w,c
  4541  00F85C  B4D8               	btfsc	status,2,c
  4542  00F85E  D00D               	goto	l1715
  4543  00F860  0627               	decf	___ftadd@sign,f,c
  4544  00F862  C027  F024         	movff	___ftadd@sign,??___ftadd
  4545  00F866  0E07               	movlw	7
  4546  00F868  1624               	andwf	??___ftadd,f,c
  4547  00F86A  B4D8               	btfsc	status,2,c
  4548  00F86C  D006               	goto	l1715
  4549  00F86E  D7EF               	goto	l1707
  4550  00F870                     l1713:
  4551  00F870  90D8               	bcf	status,0,c
  4552  00F872  3223               	rrcf	___ftadd@f2+2,f,c
  4553  00F874  3222               	rrcf	___ftadd@f2+1,f,c
  4554  00F876  3221               	rrcf	___ftadd@f2,f,c
  4555  00F878  2A28               	incf	___ftadd@exp2,f,c
  4556  00F87A                     l1715:
  4557  00F87A  5028               	movf	___ftadd@exp2,w,c
  4558  00F87C  1829               	xorwf	___ftadd@exp1,w,c
  4559  00F87E  A4D8               	btfss	status,2,c
  4560  00F880  D7F7               	goto	l1713
  4561  00F882                     l588:
  4562  00F882  AE27               	btfss	___ftadd@sign,7,c
  4563  00F884  D00C               	goto	l597
  4564  00F886  0EFF               	movlw	255
  4565  00F888  1A1E               	xorwf	___ftadd@f1,f,c
  4566  00F88A  0EFF               	movlw	255
  4567  00F88C  1A1F               	xorwf	___ftadd@f1+1,f,c
  4568  00F88E  0EFF               	movlw	255
  4569  00F890  1A20               	xorwf	___ftadd@f1+2,f,c
  4570  00F892  0E01               	movlw	1
  4571  00F894  261E               	addwf	___ftadd@f1,f,c
  4572  00F896  0E00               	movlw	0
  4573  00F898  221F               	addwfc	___ftadd@f1+1,f,c
  4574  00F89A  0E00               	movlw	0
  4575  00F89C  2220               	addwfc	___ftadd@f1+2,f,c
  4576  00F89E                     l597:
  4577  00F89E  AC27               	btfss	___ftadd@sign,6,c
  4578  00F8A0  D00C               	goto	l1721
  4579  00F8A2  0EFF               	movlw	255
  4580  00F8A4  1A21               	xorwf	___ftadd@f2,f,c
  4581  00F8A6  0EFF               	movlw	255
  4582  00F8A8  1A22               	xorwf	___ftadd@f2+1,f,c
  4583  00F8AA  0EFF               	movlw	255
  4584  00F8AC  1A23               	xorwf	___ftadd@f2+2,f,c
  4585  00F8AE  0E01               	movlw	1
  4586  00F8B0  2621               	addwf	___ftadd@f2,f,c
  4587  00F8B2  0E00               	movlw	0
  4588  00F8B4  2222               	addwfc	___ftadd@f2+1,f,c
  4589  00F8B6  0E00               	movlw	0
  4590  00F8B8  2223               	addwfc	___ftadd@f2+2,f,c
  4591  00F8BA                     l1721:
  4592  00F8BA  0E00               	movlw	0
  4593  00F8BC  6E27               	movwf	___ftadd@sign,c
  4594  00F8BE  501E               	movf	___ftadd@f1,w,c
  4595  00F8C0  2621               	addwf	___ftadd@f2,f,c
  4596  00F8C2  501F               	movf	___ftadd@f1+1,w,c
  4597  00F8C4  2222               	addwfc	___ftadd@f2+1,f,c
  4598  00F8C6  5020               	movf	___ftadd@f1+2,w,c
  4599  00F8C8  2223               	addwfc	___ftadd@f2+2,f,c
  4600  00F8CA  AE23               	btfss	___ftadd@f2+2,7,c
  4601  00F8CC  D00E               	goto	l1731
  4602  00F8CE  0EFF               	movlw	255
  4603  00F8D0  1A21               	xorwf	___ftadd@f2,f,c
  4604  00F8D2  0EFF               	movlw	255
  4605  00F8D4  1A22               	xorwf	___ftadd@f2+1,f,c
  4606  00F8D6  0EFF               	movlw	255
  4607  00F8D8  1A23               	xorwf	___ftadd@f2+2,f,c
  4608  00F8DA  0E01               	movlw	1
  4609  00F8DC  2621               	addwf	___ftadd@f2,f,c
  4610  00F8DE  0E00               	movlw	0
  4611  00F8E0  2222               	addwfc	___ftadd@f2+1,f,c
  4612  00F8E2  0E00               	movlw	0
  4613  00F8E4  2223               	addwfc	___ftadd@f2+2,f,c
  4614  00F8E6  0E01               	movlw	1
  4615  00F8E8  6E27               	movwf	___ftadd@sign,c
  4616  00F8EA                     l1731:
  4617  00F8EA  C021  F001         	movff	___ftadd@f2,___ftpack@arg
  4618  00F8EE  C022  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  4619  00F8F2  C023  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  4620  00F8F6  C029  F004         	movff	___ftadd@exp1,___ftpack@exp
  4621  00F8FA  C027  F005         	movff	___ftadd@sign,___ftpack@sign
  4622  00F8FE  ECEC  F078         	call	___ftpack	;wreg free
  4623  00F902  C001  F01E         	movff	?___ftpack,?___ftadd
  4624  00F906  C002  F01F         	movff	?___ftpack+1,?___ftadd+1
  4625  00F90A  C003  F020         	movff	?___ftpack+2,?___ftadd+2
  4626  00F90E  0012               	return	
  4627  00F910                     __end_of___ftadd:
  4628                           	opt stack 0
  4629                           tblptru	equ	0xFF8
  4630                           tblptrh	equ	0xFF7
  4631                           tblptrl	equ	0xFF6
  4632                           tablat	equ	0xFF5
  4633                           prodh	equ	0xFF4
  4634                           prodl	equ	0xFF3
  4635                           postinc0	equ	0xFEE
  4636                           wreg	equ	0xFE8
  4637                           postinc1	equ	0xFE6
  4638                           postdec1	equ	0xFE5
  4639                           fsr1h	equ	0xFE2
  4640                           fsr1l	equ	0xFE1
  4641                           indf2	equ	0xFDF
  4642                           postinc2	equ	0xFDE
  4643                           postdec2	equ	0xFDD
  4644                           fsr2h	equ	0xFDA
  4645                           fsr2l	equ	0xFD9
  4646                           status	equ	0xFD8
  4647                           
  4648 ;; *************** function ___ftpack *****************
  4649 ;; Defined at:
  4650 ;;		line 62 in file "/opt/microchip/xc8/v1.35/sources/common/float.c"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;  arg             3    0[COMRAM] unsigned um
  4653 ;;  exp             1    3[COMRAM] unsigned char 
  4654 ;;  sign            1    4[COMRAM] unsigned char 
  4655 ;; Auto vars:     Size  Location     Type
  4656 ;;		None
  4657 ;; Return value:  Size  Location     Type
  4658 ;;                  3    0[COMRAM] float 
  4659 ;; Registers used:
  4660 ;;		wreg, status,2, status,0
  4661 ;; Tracked objects:
  4662 ;;		On entry : 0/0
  4663 ;;		On exit  : 0/0
  4664 ;;		Unchanged: 0/0
  4665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4666 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4668 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4669 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4670 ;;Total ram usage:        8 bytes
  4671 ;; Hardware stack levels used:    1
  4672 ;; This function calls:
  4673 ;;		Nothing
  4674 ;; This function is called by:
  4675 ;;		___ftadd
  4676 ;;		___ftdiv
  4677 ;;		___ftmul
  4678 ;;		___lbtoft
  4679 ;;		___lwtoft
  4680 ;; This function uses a non-reentrant model
  4681 ;;
  4682                           
  4683                           	psect	text31
  4684  00F1D8                     __ptext31:
  4685                           	opt stack 0
  4686  00F1D8                     ___ftpack:
  4687                           	opt stack 27
  4688                           
  4689                           ;incstack = 0
  4690  00F1D8  5004               	movf	___ftpack@exp,w,c
  4691  00F1DA  B4D8               	btfsc	status,2,c
  4692  00F1DC  D005               	goto	l1633
  4693  00F1DE  5001               	movf	___ftpack@arg,w,c
  4694  00F1E0  1002               	iorwf	___ftpack@arg+1,w,c
  4695  00F1E2  1003               	iorwf	___ftpack@arg+2,w,c
  4696  00F1E4  A4D8               	btfss	status,2,c
  4697  00F1E6  D00C               	goto	l1639
  4698  00F1E8                     l1633:
  4699  00F1E8  0E00               	movlw	0
  4700  00F1EA  6E01               	movwf	?___ftpack,c
  4701  00F1EC  0E00               	movlw	0
  4702  00F1EE  6E02               	movwf	?___ftpack+1,c
  4703  00F1F0  0E00               	movlw	0
  4704  00F1F2  6E03               	movwf	?___ftpack+2,c
  4705  00F1F4  0012               	return	
  4706  00F1F6                     l1637:
  4707  00F1F6  2A04               	incf	___ftpack@exp,f,c
  4708  00F1F8  90D8               	bcf	status,0,c
  4709  00F1FA  3203               	rrcf	___ftpack@arg+2,f,c
  4710  00F1FC  3202               	rrcf	___ftpack@arg+1,f,c
  4711  00F1FE  3201               	rrcf	___ftpack@arg,f,c
  4712  00F200                     l1639:
  4713  00F200  0E00               	movlw	0
  4714  00F202  1401               	andwf	___ftpack@arg,w,c
  4715  00F204  6E06               	movwf	??___ftpack& (0+255),c
  4716  00F206  0E00               	movlw	0
  4717  00F208  1402               	andwf	___ftpack@arg+1,w,c
  4718  00F20A  6E07               	movwf	(??___ftpack+1)& (0+255),c
  4719  00F20C  0EFE               	movlw	254
  4720  00F20E  1403               	andwf	___ftpack@arg+2,w,c
  4721  00F210  6E08               	movwf	(??___ftpack+2)& (0+255),c
  4722  00F212  5006               	movf	??___ftpack,w,c
  4723  00F214  1007               	iorwf	??___ftpack+1,w,c
  4724  00F216  1008               	iorwf	??___ftpack+2,w,c
  4725  00F218  B4D8               	btfsc	status,2,c
  4726  00F21A  D00C               	goto	l1645
  4727  00F21C  D7EC               	goto	l1637
  4728  00F21E                     l1641:
  4729  00F21E  2A04               	incf	___ftpack@exp,f,c
  4730  00F220  0E01               	movlw	1
  4731  00F222  2601               	addwf	___ftpack@arg,f,c
  4732  00F224  0E00               	movlw	0
  4733  00F226  2202               	addwfc	___ftpack@arg+1,f,c
  4734  00F228  0E00               	movlw	0
  4735  00F22A  2203               	addwfc	___ftpack@arg+2,f,c
  4736  00F22C  90D8               	bcf	status,0,c
  4737  00F22E  3203               	rrcf	___ftpack@arg+2,f,c
  4738  00F230  3202               	rrcf	___ftpack@arg+1,f,c
  4739  00F232  3201               	rrcf	___ftpack@arg,f,c
  4740  00F234                     l1645:
  4741  00F234  0E00               	movlw	0
  4742  00F236  1401               	andwf	___ftpack@arg,w,c
  4743  00F238  6E06               	movwf	??___ftpack& (0+255),c
  4744  00F23A  0E00               	movlw	0
  4745  00F23C  1402               	andwf	___ftpack@arg+1,w,c
  4746  00F23E  6E07               	movwf	(??___ftpack+1)& (0+255),c
  4747  00F240  0EFF               	movlw	255
  4748  00F242  1403               	andwf	___ftpack@arg+2,w,c
  4749  00F244  6E08               	movwf	(??___ftpack+2)& (0+255),c
  4750  00F246  5006               	movf	??___ftpack,w,c
  4751  00F248  1007               	iorwf	??___ftpack+1,w,c
  4752  00F24A  1008               	iorwf	??___ftpack+2,w,c
  4753  00F24C  B4D8               	btfsc	status,2,c
  4754  00F24E  D006               	goto	l1649
  4755  00F250  D7E6               	goto	l1641
  4756  00F252                     l1647:
  4757  00F252  0604               	decf	___ftpack@exp,f,c
  4758  00F254  90D8               	bcf	status,0,c
  4759  00F256  3601               	rlcf	___ftpack@arg,f,c
  4760  00F258  3602               	rlcf	___ftpack@arg+1,f,c
  4761  00F25A  3603               	rlcf	___ftpack@arg+2,f,c
  4762  00F25C                     l1649:
  4763  00F25C  BE02               	btfsc	___ftpack@arg+1,7,c
  4764  00F25E  D003               	goto	l550
  4765  00F260  0E02               	movlw	2
  4766  00F262  6004               	cpfslt	___ftpack@exp,c
  4767  00F264  D7F6               	goto	l1647
  4768  00F266                     l550:
  4769  00F266  A004               	btfss	___ftpack@exp,0,c
  4770  00F268  9E02               	bcf	___ftpack@arg+1,7,c
  4771  00F26A  90D8               	bcf	status,0,c
  4772  00F26C  3204               	rrcf	___ftpack@exp,f,c
  4773  00F26E  5004               	movf	___ftpack@exp,w,c
  4774  00F270  1203               	iorwf	___ftpack@arg+2,f,c
  4775  00F272  5005               	movf	___ftpack@sign,w,c
  4776  00F274  A4D8               	btfss	status,2,c
  4777  00F276  8E03               	bsf	___ftpack@arg+2,7,c
  4778  00F278  C001  F001         	movff	___ftpack@arg,?___ftpack
  4779  00F27C  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  4780  00F280  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  4781  00F284  0012               	return	
  4782  00F286                     __end_of___ftpack:
  4783                           	opt stack 0
  4784                           tblptru	equ	0xFF8
  4785                           tblptrh	equ	0xFF7
  4786                           tblptrl	equ	0xFF6
  4787                           tablat	equ	0xFF5
  4788                           prodh	equ	0xFF4
  4789                           prodl	equ	0xFF3
  4790                           postinc0	equ	0xFEE
  4791                           wreg	equ	0xFE8
  4792                           postinc1	equ	0xFE6
  4793                           postdec1	equ	0xFE5
  4794                           fsr1h	equ	0xFE2
  4795                           fsr1l	equ	0xFE1
  4796                           indf2	equ	0xFDF
  4797                           postinc2	equ	0xFDE
  4798                           postdec2	equ	0xFDD
  4799                           fsr2h	equ	0xFDA
  4800                           fsr2l	equ	0xFD9
  4801                           status	equ	0xFD8
  4802                           
  4803 ;; *************** function _dato_16 *****************
  4804 ;; Defined at:
  4805 ;;		line 49 in file "adc.c"
  4806 ;; Parameters:    Size  Location     Type
  4807 ;;		None
  4808 ;; Auto vars:     Size  Location     Type
  4809 ;;  y               2    2[COMRAM] unsigned int 
  4810 ;; Return value:  Size  Location     Type
  4811 ;;                  2    0[COMRAM] int 
  4812 ;; Registers used:
  4813 ;;		wreg, status,2, status,0
  4814 ;; Tracked objects:
  4815 ;;		On entry : 0/0
  4816 ;;		On exit  : 0/0
  4817 ;;		Unchanged: 0/0
  4818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4819 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4820 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4822 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4823 ;;Total ram usage:        4 bytes
  4824 ;; Hardware stack levels used:    1
  4825 ;; This function calls:
  4826 ;;		Nothing
  4827 ;; This function is called by:
  4828 ;;		_main
  4829 ;; This function uses a non-reentrant model
  4830 ;;
  4831                           
  4832                           	psect	text32
  4833  00EEB8                     __ptext32:
  4834                           	opt stack 0
  4835  00EEB8                     _dato_16:
  4836                           	opt stack 30
  4837                           
  4838                           ;adc.c: 50: unsigned int y=0;
  4839                           
  4840                           ;incstack = 0
  4841  00EEB8  0E00               	movlw	0
  4842  00EEBA  6E04               	movwf	dato_16@y+1,c
  4843  00EEBC  0E00               	movlw	0
  4844  00EEBE  6E03               	movwf	dato_16@y,c
  4845                           
  4846                           ;adc.c: 51: y=ADRESH;
  4847  00EEC0  CFC4 F003          	movff	4036,dato_16@y	;volatile
  4848  00EEC4  6A04               	clrf	dato_16@y+1,c
  4849                           
  4850                           ;adc.c: 52: y<<=8;
  4851  00EEC6  5003               	movf	dato_16@y,w,c
  4852  00EEC8  6E04               	movwf	dato_16@y+1,c
  4853  00EECA  6A03               	clrf	dato_16@y,c
  4854                           
  4855                           ;adc.c: 53: y|=ADRESL;
  4856  00EECC  50C3               	movf	4035,w,c	;volatile
  4857  00EECE  1203               	iorwf	dato_16@y,f,c
  4858                           
  4859                           ;adc.c: 54: return y;
  4860  00EED0  C003  F001         	movff	dato_16@y,?_dato_16
  4861  00EED4  C004  F002         	movff	dato_16@y+1,?_dato_16+1
  4862  00EED8  0012               	return	
  4863  00EEDA                     __end_of_dato_16:
  4864                           	opt stack 0
  4865  0000                     tblptru	equ	0xFF8
  4866                           tblptrh	equ	0xFF7
  4867                           tblptrl	equ	0xFF6
  4868                           tablat	equ	0xFF5
  4869                           prodh	equ	0xFF4
  4870                           prodl	equ	0xFF3
  4871                           postinc0	equ	0xFEE
  4872                           wreg	equ	0xFE8
  4873                           postinc1	equ	0xFE6
  4874                           postdec1	equ	0xFE5
  4875                           fsr1h	equ	0xFE2
  4876                           fsr1l	equ	0xFE1
  4877                           indf2	equ	0xFDF
  4878                           postinc2	equ	0xFDE
  4879                           postdec2	equ	0xFDD
  4880                           fsr2h	equ	0xFDA
  4881                           fsr2l	equ	0xFD9
  4882                           status	equ	0xFD8
  4883                           tblptru	equ	0xFF8
  4884                           tblptrh	equ	0xFF7
  4885                           tblptrl	equ	0xFF6
  4886                           tablat	equ	0xFF5
  4887                           prodh	equ	0xFF4
  4888                           prodl	equ	0xFF3
  4889                           postinc0	equ	0xFEE
  4890                           wreg	equ	0xFE8
  4891                           postinc1	equ	0xFE6
  4892                           postdec1	equ	0xFE5
  4893                           fsr1h	equ	0xFE2
  4894                           fsr1l	equ	0xFE1
  4895                           indf2	equ	0xFDF
  4896                           postinc2	equ	0xFDE
  4897                           postdec2	equ	0xFDD
  4898                           fsr2h	equ	0xFDA
  4899                           fsr2l	equ	0xFD9
  4900                           status	equ	0xFD8
  4901                           
  4902                           	psect	rparam
  4903  0000                     tblptru	equ	0xFF8
  4904                           tblptrh	equ	0xFF7
  4905                           tblptrl	equ	0xFF6
  4906                           tablat	equ	0xFF5
  4907                           prodh	equ	0xFF4
  4908                           prodl	equ	0xFF3
  4909                           postinc0	equ	0xFEE
  4910                           wreg	equ	0xFE8
  4911                           postinc1	equ	0xFE6
  4912                           postdec1	equ	0xFE5
  4913                           fsr1h	equ	0xFE2
  4914                           fsr1l	equ	0xFE1
  4915                           indf2	equ	0xFDF
  4916                           postinc2	equ	0xFDE
  4917                           postdec2	equ	0xFDD
  4918                           fsr2h	equ	0xFDA
  4919                           fsr2l	equ	0xFD9
  4920                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        92
    BSS         563
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     78      95
    BANK0           160      0     138
    BANK1           256      0     200
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    send_msm@msm	PTR unsigned char  size(2) Largest target is 33
		 -> msm2(BANK0[19]), msm1(BANK0[33]), 

    pointer_out	PTR unsigned char  size(2) Largest target is 32
		 -> NULL(NULL[0]), printFloat@buf(BANK0[32]), 

    pointer_in	PTR unsigned char  size(2) Largest target is 32
		 -> NULL(NULL[0]), printFloat@buf(BANK0[32]), 

    sp__printFloat	PTR unsigned char  size(2) Largest target is 32
		 -> printFloat@buf(BANK0[32]), 


Critical Paths under _main in COMRAM

    _main->_transmitir
    _transmitir->_printFloat
    _printFloat->___ftsub
    ___lbtoft->___ftpack
    ___ftsub->___ftadd
    ___ftdiv->___ftpack
    _set_ph->_timer_1_set
    _send_msm->_trans_dato
    _flag_timer_1->_timer_1_set
    _filtro->___ftadd
    ___wmul->_dato_16
    ___lwtoft->___ftpack
    ___fttol->___wmul
    ___ftneg->___ftmul
    ___ftmul->___lwtoft
    ___ftadd->___ftneg

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11     6      5   44001
                                             67 COMRAM    11     6      5
                            ___ftmul
                           ___lwtoft
                             ___wmul
                            _dato_16
                             _filtro
                   _final_convercion
                       _flag_timer_1
                           _send_msm
                             _set_ph
                    _star_convercion
                         _transmitir
 ---------------------------------------------------------------------------------
 (1) _transmitir                                           2     2      0   22125
                                             65 COMRAM     2     2      0
                         _printFloat
                         _trans_dato
 ---------------------------------------------------------------------------------
 (2) _printFloat                                          18    13      5   22103
                                             47 COMRAM    18    13      5
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                           ___lbtoft
                            ___lwdiv
                            ___lwmod
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     287
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___lbtoft                                             4     1      3    2131
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    4500
                                             41 COMRAM     6     0      6
                            ___ftadd
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    2619
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _star_convercion                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_ph                                               0     0      0     238
                      _activacion_rx
                      _activacion_tx
                           _conf_adc
                     _config_tx_aurt
                            _set_adc
                           _set_leds
                            _set_spi
                       _timer_1_conf
                        _timer_1_set
                       _timer_1_star
 ---------------------------------------------------------------------------------
 (2) _timer_1_conf                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _set_spi                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _set_leds                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _set_adc                                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _config_tx_aurt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _conf_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _activacion_tx                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _activacion_rx                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _send_msm                                             4     2      2     240
                                              1 COMRAM     4     2      2
                         _trans_dato
 ---------------------------------------------------------------------------------
 (2) _trans_dato                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _flag_timer_1                                         2     0      2     172
                                              2 COMRAM     2     0      2
                        _timer_1_set
                       _timer_1_star
 ---------------------------------------------------------------------------------
 (2) _timer_1_star                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _timer_1_set                                          2     1      1     172
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _final_convercion                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _filtro                                              18    16      2   13117
                                             41 COMRAM    12    10      2
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lwtoft
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1567
                                              4 COMRAM     6     2      4
                            _dato_16 (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    2579
                                              8 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     444
                                             10 COMRAM    15    11      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     237
                                             26 COMRAM     3     0      3
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3817
                                             11 COMRAM    15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    4203
                                             29 COMRAM    12     6      6
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2109
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _dato_16                                              4     2      2      26
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___ftmul
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
     ___wmul (ARG)
       _dato_16 (ARG)
   ___lwtoft
     ___ftpack
   ___wmul
     _dato_16 (ARG)
   _dato_16
   _filtro
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           _dato_16 (ARG)
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             _dato_16 (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           _dato_16 (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         _dato_16 (ARG)
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         _dato_16 (ARG)
     ___ftneg
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           _dato_16 (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         _dato_16 (ARG)
     ___fttol
       ___wmul (ARG)
         _dato_16 (ARG)
     ___lwtoft
       ___ftpack
     ___wmul
       _dato_16 (ARG)
   _final_convercion
   _flag_timer_1
     _timer_1_set
     _timer_1_star
   _send_msm
     _trans_dato
   _set_ph
     _activacion_rx
     _activacion_tx
     _conf_adc
     _config_tx_aurt
     _set_adc
     _set_leds
     _set_spi
     _timer_1_conf
     _timer_1_set
     _timer_1_star
   _star_convercion
   _transmitir
     _printFloat
       ___ftadd
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             _dato_16 (ARG)
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               _dato_16 (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             _dato_16 (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           _dato_16 (ARG)
       ___ftdiv
         ___ftpack
       ___ftmul
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           _dato_16 (ARG)
       ___ftneg
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             _dato_16 (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           _dato_16 (ARG)
       ___ftsub
         ___ftadd
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               _dato_16 (ARG)
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 _dato_16 (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               _dato_16 (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             _dato_16 (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___fttol
         ___wmul (ARG)
           _dato_16 (ARG)
       ___lbtoft
         ___ftpack
       ___lwdiv
       ___lwmod
       ___lwtoft
         ___ftpack
     _trans_dato

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0     12C      37        7.6%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      C8       7       78.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      8A       5       86.2%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     4E      5F       1      100.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B1      32        0.0%
DATA                 0      0     2DD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Fri Feb 17 03:03:59 2017

                        _a 006D                          _b 0079                          _d 0057  
                        _k 0051                          _u 0100                          _x 005C  
                        _y 01C8         printFloat@int_part 003E                _SSPSTATbits 000FC7  
                       _s1 005E                         _s2 005F                         _jj 0059  
                       _ss 005B        ___wmul@multiplicand 0007               __CFG_CP0$OFF 000000  
             __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000               __CFG_CP3$OFF 000000  
             ___ftadd@exp1 0029               ___ftadd@exp2 0028               ___ftadd@sign 0027  
                      l266 EE1E                        l550 F266                        l630 EEF0  
                      l608 F33A                        l573 F7A8                        l728 F0F4  
                      l577 F7D2                        l738 F0A2                        l588 F882  
                      l597 F89E               __CFG_CPB$OFF 000000               __CFG_CPD$OFF 000000  
                      u901 F774                        u911 F788                        _est 004F  
                      _sec 005A                        _num 00B9               __CFG_BORV$18 000000  
      printFloat@remainder 003B                        wreg 000FE8              printFloat@buf 00CA  
       printFloat@rounding 0037               __CFG_LVP$OFF 000000               ___ftdiv@cntr 0012  
             ___ftdiv@sign 0017                       l2103 EE32                       l2215 F682  
                     l2153 F556                       l2233 F71A                       l2225 F6A2  
                     l2147 FFC2                       l2067 EFF2                       l2171 F5E4  
                     l2163 F5A4                       l2219 F694                       l1701 F832  
                     l2157 F580                       l1703 F83C                       l2087 EFAE  
                     l2167 F5BA                       l2239 F758                       l1641 F21E  
                     l1633 F1E8                       l1721 F8BA                       l1713 F870  
                     l1705 F846                       l2177 F608                       l2185 F622  
                     l1731 F8EA                       l1715 F87A                       l1707 F84E  
                     l1811 F3FE                       l1645 F234                       l1637 F1F6  
                     l1821 F426                       l1741 F2AE                       l1901 F0CE  
                     l1647 F252                       l1639 F200                       l1807 F3EE  
                     l1649 F25C                       l1673 F7B6                       l1817 F416  
                     l1833 F040                       l1921 F084                       l1747 F2D6  
                     l1909 F0EA                       l1925 F098                       l1917 F078  
                     l1695 F810                       l1679 F7E0                       l1847 F48C  
                     l1767 F314                       l1919 F080                       l1943 F94E  
                     l1793 F3BC                       l1865 F4F2                       l1787 F394  
                     l1883 F542                       l1875 F51A                       l1963 FA70  
                     l1947 F97A                       l1939 F938                       l1877 F526  
                     l1869 F502                       l1957 FA2E                       l1879 F52C  
                     l1897 F0C2                       l1969 FA8E                       l1977 FB0E  
                     l1899 F0CA                       u1111 F296                       u1131 F2BE  
                     u1161 F37C                       u1241 F470                       u1260 F4AA  
                     u1181 F3A4                       _LATB 000F8A                       _LATD 000F8C  
                     u1265 F4A2                       u1445 EE5C                       u1446 EE5E  
                     u1455 EE4E                       u1456 EE50                       u1465 EE40  
                     u1466 EE42               __CFG_PWRT$ON 000000                       _main F64E  
                     _in_t 00BE                       _in_v 00C1                       _msm1 0085  
                     _msm2 00A6                       _msm3 0060               ___ftpack@arg 0001  
             ___ftpack@exp 0004                main@time_TM 004B                       fsr1h 000FE2  
                     fsr2h 000FDA                       fsr1l 000FE1                       indf2 000FDF  
                     fsr2l 000FD9                       prodh 000FF4                       prodl 000FF3  
                     start 0000              __CFG_IESO$OFF 000000             printFloat@base 0034  
            __CFG_MCLRE$ON 000000               ___ftmul@cntr 0019               ___param_bank 000010  
             ___ftmul@sign 001A               ___fttol@exp1 0019               ___fttol@lval 0015  
                    ?_main 0044            __end_of___ftadd F910            __end_of___ftdiv F36C  
          __end_of___ftneg EEFE                      _ANSEL 000F7E      __end_of_activacion_rx EE44  
    __end_of_activacion_tx EE52            __end_of___ftmul F460            __end_of___ftsub F06A  
          __end_of___fttol F554            __end_of___lwdiv F0FE            __end_of___lwmod F0AC  
                    _RCREG 000FAE                      _TMR0H 000FD7                      _TMR1H 000FCF  
                    _TMR0L 000FD6                      _TMR1L 000FCE                      _SPBRG 000FAF  
                    _PORTB 000F81                      _PORTD 000F83                      _TRISA 000F92  
                    _TRISB 000F93                      _TRISC 000F94                      _TRISD 000F95  
          __end_of_dato_16 EEDA                      _TXREG 000FAD              __CFG_WRT0$OFF 000000  
            __CFG_WRT1$OFF 000000              __CFG_WRT2$OFF 000000              __CFG_WRT3$OFF 000000  
           __CFG_EBTR0$OFF 000000             __CFG_FCMEN$OFF 000000             __CFG_EBTR1$OFF 000000  
           __CFG_EBTR2$OFF 000000             __CFG_EBTR3$OFF 000000              __CFG_WRTB$OFF 000000  
            __CFG_WRTC$OFF 000000              __CFG_WRTD$OFF 000000             __CFG_EBTRB$OFF 000000  
            ___ftpack@sign 0005                      _out_t 00C4                      _out_v 00C7  
          __end_of_set_adc EE60             __CFG_BOREN$OFF 000000                      tablat 000FF5  
          __end_of_set_spi EE84           _final_convercion EE28                      status 000FD8  
          _star_convercion EE0C            __initialization F158               __end_of_main F764  
                   ??_main 0049              ___fttol@sign1 0014              __activetblptr 000002  
     __end_of_flag_timer_1 EFB8                     _ADCON1 000FC1                     _ADRESH 000FC4  
                   _ADRESL 000FC3           __end_of___ftpack F286           __end_of___lbtoft EF6A  
           __CFG_WDTEN$OFF 000000           __end_of___lwtoft EF22                     _SPBRGH 000FB0  
                   _SSPBUF 000FC9             __CFG_XINST$OFF 000000           __end_of_conf_adc EF46  
                   ___wmul EF6A                  ??___ftadd 0024                  ??___ftdiv 000F  
                ??___ftneg 001E                  ??___ftmul 0012                  ??___ftsub 0030  
                ??___fttol 000F                  ??___lwdiv 0005                  ??___lwmod 0005  
                   _filtro FB34                  ??_dato_16 0003                     clear_0 F160  
                   clear_1 F172                     clear_2 F17E                     clear_3 F18A  
            main@time_UART 004C                     _set_ph EFB8                     main@in 004D  
             ?_timer_1_set 0001      ___ftmul@f3_as_product 0016           __end_of_send_msm F02A  
             __pdataCOMRAM 005D           __end_of_set_leds EEB8                  ??_set_adc 0001  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
                ??_set_spi 0001            __CFG_HFOFST$OFF 000000    __end_of_star_convercion EE10  
         ??_config_tx_aurt 0001           printFloat@digits 0033            __CFG_FOSC$HSPLL 000000  
               __accesstop 0060    __end_of__initialization F1CE            __CFG_PBADEN$OFF 000000  
               ___ftadd@f1 001E                 ___ftadd@f2 0021           printFloat@number 0030  
            ___rparam_used 000001                 ___ftdiv@f1 0009                 ___ftdiv@f2 000C  
               ___ftdiv@f3 0013                 ___ftneg@f1 001B                 ___lbtoft@c 000C  
               ___ftmul@f1 000C                 ___ftmul@f2 000F                 ___ftsub@f1 002A  
               ___ftsub@f2 002D                 ___fttol@f1 000B             __pcstackCOMRAM 0001  
             __pidataBANK0 F0FF                 ___lwtoft@c 0009                 __pbssBANK0 00B9  
               __pbssBANK1 0100                    ?___wmul 0005                    ?_filtro 002A  
 __end_of_final_convercion EE36                  ?___ftpack 0001                  ?___lbtoft 0009  
                  ?_set_ph 0001                  ?___lwtoft 0009      __size_of_flag_timer_1 0028  
                ?_conf_adc 0001           ?_star_convercion 0001                send_msm@msm 0002  
                  __Hparam 0000                  ?_send_msm 0002                    __Lparam 0000  
                ?_set_leds 0001               _flag_timer_1 EF90                    ___ftadd F764  
                  ___ftdiv F286                    ___ftneg EEDA            __size_of___wmul 0026  
                  ___ftmul F36C                    ___ftsub F02A                    ___fttol F460  
                  ___lwdiv F0AC                    ___lwmod F06A            __CFG_STVREN$OFF 000000  
          __size_of_filtro 04CC                    _dato_16 EEB8                    __pcinit F158  
               ??___ftpack 0006                 ??___lbtoft 000C                  _ANSELbits 000F7E  
                  __ramtop 1000                    __ptext0 F64E                    __ptext1 F554  
                  __ptext2 F910                    __ptext3 F06A                    __ptext4 F0AC  
          __size_of_set_ph 0036                    __ptext5 EF46                    __ptext6 F02A  
                  __ptext7 F286                    __ptext8 EE0C                    __ptext9 EFB8  
               ??___lwtoft 000C                  _T0CONbits 000FD5                  _T1CONbits 000FCD  
     __size_of_timer_1_set 000C                    _periodo 005D                    _set_adc EE52  
                  _set_spi EE6E              ?_timer_1_conf 0001                 ??_conf_adc 0001  
            ?_timer_1_star 0001                    main@out 0049       end_of_initialization F1CE  
            __Lmediumconst 0000     __size_of_activacion_rx 000E     __size_of_activacion_tx 000E  
               ??_send_msm 0004                 ??_set_leds 0001                  _RCSTAbits 000FAB  
                  postdec1 000FE5                    postdec2 000FDD                    postinc0 000FEE  
                  postinc1 000FE6                    postinc2 000FDE                 _pointer_in 0053  
               _printFloat F910                  _PORTBbits 000F81                  _PORTDbits 000F83  
                _TRISAbits 000F92                  _TRISCbits 000F94             ??_timer_1_conf 0001  
           ??_timer_1_star 0001                 _trans_dato EE1C                printFloat@i 0040  
        printFloat@toPrint 003A                 _transmitir F554                ___ftdiv@exp 0016  
                _TXSTAbits 000FAC                ___ftmul@exp 0015             __end_of___wmul EF90  
              _BAUDCONbits 000FB8              __pidataCOMRAM EE05             __end_of_filtro 0000  
           __end_of_set_ph EFEE              _activacion_rx EE36              _activacion_tx EE44  
      start_initialization F158                trans_dato@x 0001                   ??___wmul 0009  
              __pdataBANK0 0060                   ??_filtro 002C           __CFG_LPT1OSC$OFF 000000  
          timer_1_set@high 0001                   ??_set_ph 0003                ?_printFloat 0030  
        ?_final_convercion 0001             ?_activacion_rx 0001             ?_activacion_tx 0001  
        __size_of___ftpack 00AE          __size_of___lbtoft 0024                __pbssBIGRAM 01C8  
       ??_final_convercion 0001                __pbssCOMRAM 004F          __size_of___lwtoft 0024  
              ?_trans_dato 0001                ?_transmitir 0001          __size_of_conf_adc 0024  
         ___lwdiv@dividend 0001          __CFG_CCP2MX$PORTC 000000    __size_of_config_tx_aurt 0018  
     __end_of_timer_1_conf EE6E          __size_of_send_msm 003C                   ?___ftadd 001E  
     __end_of_timer_1_star EE0C                   ?___ftdiv 0009                   ?___ftneg 001B  
                 ?___ftmul 000C                   ?___ftsub 002A                   ?___fttol 000B  
                _flag_uart 0058          __size_of_set_leds 001C                   ?___lwdiv 0001  
                 ?___lwmod 0001                   ?_dato_16 0001                   ?_set_adc 0001  
                 ?_set_spi 0001           ___lwdiv@quotient 0005             ___wmul@product 0009  
      __size_of_printFloat 0224   __size_of_star_convercion 0004                   _PIR1bits 000F9E  
         __CFG_WDTPS$32768 000000                _filtro$1840 0030                _filtro$1841 0033  
      __size_of_trans_dato 000C            ??_activacion_rx 0001            ??_activacion_tx 0001  
      __size_of_transmitir 00FA              ??_timer_1_set 0002                 _ADCON0bits 000FC2  
               _ADCON2bits 000FC0          ___wmul@multiplier 0005                  filtro@inn 002A  
                copy_data0 F1A4             activacion_rx@x 0001             activacion_tx@x 0001  
                 __Hrparam 0000                   __Lrparam 0000             timer_1_set@low 0002  
         __size_of___ftadd 01AC           __size_of___ftdiv 00E6           __size_of___ftneg 0024  
         __size_of___ftmul 00F4           __size_of___ftsub 0040           __size_of___fttol 00F4  
         __size_of___lwdiv 0052           __size_of___lwmod 0042                   ___ftpack F1D8  
                 ___lbtoft EF46           __size_of_dato_16 0022                   ___lwtoft EEFE  
          ___lwdiv@divisor 0003            ___lwdiv@counter 0007        __end_of_timer_1_set EE1C  
         __size_of_set_adc 000E                   __ptext10 EE60                   __ptext11 EE6E  
                 __ptext20 EF90                   __ptext12 EE9C                   __ptext21 EE08  
                 __ptext13 EE52                   __ptext30 F764                   __ptext22 EE10  
                 __ptext14 EE84                   __ptext31 F1D8                   __ptext23 EE28  
                 __ptext15 EF22                   __ptext32 EEB8                   __ptext24 FB34  
                 __ptext16 EE44                   __ptext25 EF6A                   __ptext17 EE36  
                 __ptext26 EEFE                   __ptext18 EFEE                   __ptext27 F460  
                 __ptext19 EE1C                   __ptext28 EEDA                   __ptext29 F36C  
         __size_of_set_spi 0016                   _conf_adc EF22                  send_msm@a 0005  
                 dato_16@y 0003              __size_of_main 0116      __size_of_timer_1_conf 000E  
    __size_of_timer_1_star 0004                   _send_msm EFEE                   _set_leds EE9C  
           _config_tx_aurt EE84                   main@argc 0044                   main@argv 0046  
        ??_star_convercion 0001               ??_printFloat 0035                 _INTCONbits 000FF2  
             ??_trans_dato 0001               _timer_1_conf EE60               _timer_1_star EE08  
             ??_transmitir 0042  __size_of_final_convercion 000E           ___lwmod@dividend 0001  
                 set_adc@x 0001     __end_of_config_tx_aurt EE9C         __end_of_printFloat FB34  
            ?_flag_timer_1 0003         __end_of_trans_dato EE28         __end_of_transmitir F64E  
              _timer_1_set EE10            ___lwmod@divisor 0003                _pointer_out 0055  
          ___lwmod@counter 0005                _SSPCON1bits 000FC6            ?_config_tx_aurt 0001  
           ??_flag_timer_1 0005  
